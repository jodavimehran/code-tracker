b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 1)    /*
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 2)     * Licensed to the Apache Software Foundation (ASF) under one or more
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 3)     * contributor license agreements.  See the NOTICE file distributed with
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 4)     * this work for additional information regarding copyright ownership.
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 5)     * The ASF licenses this file to You under the Apache License, Version 2.0
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 6)     * (the "License"); you may not use this file except in compliance with
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 7)     * the License.  You may obtain a copy of the License at
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 8)     *
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 9)     *    http://www.apache.org/licenses/LICENSE-2.0
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 10)    *
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 11)    * Unless required by applicable law or agreed to in writing, software
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 12)    * distributed under the License is distributed on an "AS IS" BASIS,
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 13)    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 14)    * See the License for the specific language governing permissions and
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 15)    * limitations under the License.
b904b0041 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Till Rohrmann      2014-09-23 11:59:53 +0000 16)    */
                                                                                                                                                                                   17)
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:23:16 +0000 18)   package org.apache.flink.streaming.api.datastream;
                                                                                                                                                                                   19)
b54499b1c flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-05 13:43:49 +0000 20)   import org.apache.flink.annotation.Internal;
b54499b1c flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-05 13:43:49 +0000 21)   import org.apache.flink.annotation.Public;
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 22)   import org.apache.flink.annotation.PublicEvolving;
3885823f0 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-02-16 12:06:08 +0000 23)   import org.apache.flink.api.common.ExecutionConfig;
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 24)   import org.apache.flink.api.common.functions.FilterFunction;
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 25)   import org.apache.flink.api.common.functions.FlatMapFunction;
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 26)   import org.apache.flink.api.common.functions.MapFunction;
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 27)   import org.apache.flink.api.common.functions.Partitioner;
568dff123 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Aljoscha Krettek   2014-09-22 07:59:57 +0000 28)   import org.apache.flink.api.common.functions.RichFilterFunction;
568dff123 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Aljoscha Krettek   2014-09-22 07:59:57 +0000 29)   import org.apache.flink.api.common.functions.RichFlatMapFunction;
568dff123 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Aljoscha Krettek   2014-09-22 07:59:57 +0000 30)   import org.apache.flink.api.common.functions.RichMapFunction;
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 31)   import org.apache.flink.api.common.io.OutputFormat;
21a715867 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-02 15:55:44 +0000 32)   import org.apache.flink.api.common.operators.Keys;
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 33)   import org.apache.flink.api.common.operators.ResourceSpec;
fe931d075 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-11-03 15:40:34 +0000 34)   import org.apache.flink.api.common.serialization.SerializationSchema;
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 35)   import org.apache.flink.api.common.state.MapStateDescriptor;
7709a3a69 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-10-27 11:23:58 +0000 36)   import org.apache.flink.api.common.typeinfo.BasicArrayTypeInfo;
7709a3a69 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-10-27 11:23:58 +0000 37)   import org.apache.flink.api.common.typeinfo.PrimitiveArrayTypeInfo;
e649d71d5 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Stephan Ewen       2014-09-22 15:31:26 +0000 38)   import org.apache.flink.api.common.typeinfo.TypeInformation;
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 39)   import org.apache.flink.api.java.Utils;
a221796e2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-10-27 11:23:58 +0000 40)   import org.apache.flink.api.java.functions.KeySelector;
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 41)   import org.apache.flink.api.java.io.CsvOutputFormat;
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 42)   import org.apache.flink.api.java.io.TextOutputFormat;
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 43)   import org.apache.flink.api.java.tuple.Tuple;
35dcceb9e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-09-18 10:17:16 +0000 44)   import org.apache.flink.api.java.typeutils.InputTypeConfigurable;
51c1f6779 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-10 12:27:38 +0000 45)   import org.apache.flink.api.java.typeutils.TypeExtractor;
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 46)   import org.apache.flink.core.fs.FileSystem.WriteMode;
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 47)   import org.apache.flink.core.fs.Path;
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 48)   import org.apache.flink.streaming.api.TimeCharacteristic;
d832400b3 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-03-20 10:25:03 +0000 49)   import org.apache.flink.streaming.api.collector.selector.OutputSelector;
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 50)   import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 51)   import org.apache.flink.streaming.api.functions.AssignerWithPeriodicWatermarks;
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 52)   import org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks;
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 53)   import org.apache.flink.streaming.api.functions.ProcessFunction;
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 54)   import org.apache.flink.streaming.api.functions.TimestampExtractor;
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 55)   import org.apache.flink.streaming.api.functions.sink.OutputFormatSinkFunction;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 56)   import org.apache.flink.streaming.api.functions.sink.PrintSinkFunction;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 57)   import org.apache.flink.streaming.api.functions.sink.SinkFunction;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 58)   import org.apache.flink.streaming.api.functions.sink.SocketClientSink;
6225aa6fb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-04-28 13:48:20 +0000 59)   import org.apache.flink.streaming.api.functions.timestamps.AscendingTimestampExtractor;
6225aa6fb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-04-28 13:48:20 +0000 60)   import org.apache.flink.streaming.api.functions.timestamps.BoundedOutOfOrdernessTimestampExtractor;
58865ff37 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-05-19 14:35:49 +0000 61)   import org.apache.flink.streaming.api.operators.OneInputStreamOperator;
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 62)   import org.apache.flink.streaming.api.operators.ProcessOperator;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 63)   import org.apache.flink.streaming.api.operators.StreamFilter;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 64)   import org.apache.flink.streaming.api.operators.StreamFlatMap;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 65)   import org.apache.flink.streaming.api.operators.StreamMap;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 66)   import org.apache.flink.streaming.api.operators.StreamSink;
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 67)   import org.apache.flink.streaming.api.transformations.OneInputTransformation;
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 68)   import org.apache.flink.streaming.api.transformations.PartitionTransformation;
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 69)   import org.apache.flink.streaming.api.transformations.StreamTransformation;
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 70)   import org.apache.flink.streaming.api.transformations.UnionTransformation;
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 71)   import org.apache.flink.streaming.api.windowing.assigners.GlobalWindows;
9922d10a0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 19:29:11 +0000 72)   import org.apache.flink.streaming.api.windowing.assigners.SlidingEventTimeWindows;
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 73)   import org.apache.flink.streaming.api.windowing.assigners.SlidingProcessingTimeWindows;
9922d10a0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 19:29:11 +0000 74)   import org.apache.flink.streaming.api.windowing.assigners.TumblingEventTimeWindows;
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 75)   import org.apache.flink.streaming.api.windowing.assigners.TumblingProcessingTimeWindows;
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 76)   import org.apache.flink.streaming.api.windowing.assigners.WindowAssigner;
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 77)   import org.apache.flink.streaming.api.windowing.evictors.CountEvictor;
cf75f424a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-01-25 17:28:11 +0000 78)   import org.apache.flink.streaming.api.windowing.time.Time;
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 79)   import org.apache.flink.streaming.api.windowing.triggers.CountTrigger;
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 80)   import org.apache.flink.streaming.api.windowing.triggers.PurgingTrigger;
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 81)   import org.apache.flink.streaming.api.windowing.windows.GlobalWindow;
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 82)   import org.apache.flink.streaming.api.windowing.windows.TimeWindow;
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 83)   import org.apache.flink.streaming.api.windowing.windows.Window;
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 84)   import org.apache.flink.streaming.runtime.operators.ExtractTimestampsOperator;
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 85)   import org.apache.flink.streaming.runtime.operators.TimestampsAndPeriodicWatermarksOperator;
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 86)   import org.apache.flink.streaming.runtime.operators.TimestampsAndPunctuatedWatermarksOperator;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 87)   import org.apache.flink.streaming.runtime.partitioner.BroadcastPartitioner;
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 88)   import org.apache.flink.streaming.runtime.partitioner.CustomPartitionerWrapper;
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 89)   import org.apache.flink.streaming.runtime.partitioner.ForwardPartitioner;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 90)   import org.apache.flink.streaming.runtime.partitioner.GlobalPartitioner;
3527f40f6 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-03 10:47:41 +0000 91)   import org.apache.flink.streaming.runtime.partitioner.RebalancePartitioner;
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 92)   import org.apache.flink.streaming.runtime.partitioner.RescalePartitioner;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 93)   import org.apache.flink.streaming.runtime.partitioner.ShufflePartitioner;
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 94)   import org.apache.flink.streaming.runtime.partitioner.StreamPartitioner;
8bf9416d3 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:39 +0000 95)   import org.apache.flink.streaming.util.keys.KeySelectorUtil;
c4bbed9e4 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (zentol             2016-06-15 11:58:38 +0000 96)   import org.apache.flink.util.Preconditions;
                                                                                                                                                                                   97)
479bec0b2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 98)   import java.util.ArrayList;
ce56b1466 flink-addons/flink-streaming/src/main/java/eu/stratosphere/api/datastream/DataStream.java                                  (gyfora             2014-08-18 13:57:00 +0000 99)   import java.util.List;
                                                                                                                                                                                   100)
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 101)  /**
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 102)   * A DataStream represents a stream of elements of the same type. A DataStream
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 103)   * can be transformed into another DataStream by applying a transformation as
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 104)   * for example:
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 105)   * <ul>
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 106)   * <li>{@link DataStream#map}
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 107)   * <li>{@link DataStream#filter}
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 108)   * </ul>
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 109)   *
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 110)   * @param <T> The type of the elements in this stream.
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 111)   */
b54499b1c flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-05 13:43:49 +0000 112)  @Public
9cbd68a84 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-09-20 11:42:04 +0000 113)  public class DataStream<T> {
                                                                                                                                                                                   114)
23f649e4d flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (mbalassi           2014-08-18 13:57:14 +0000 115)  	protected final StreamExecutionEnvironment environment;
                                                                                                                                                                                   116)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 117)  	protected final StreamTransformation<T> transformation;
                                                                                                                                                                                   118)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 119)  	/**
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 120)  	 * Create a new {@link DataStream} in the given execution environment with
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 121)  	 * partitioning set to forward by default.
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 122)  	 *
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 123)  	 * @param environment The StreamExecutionEnvironment
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 124)  	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 125)  	public DataStream(StreamExecutionEnvironment environment, StreamTransformation<T> transformation) {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 126)  		this.environment = Preconditions.checkNotNull(environment, "Execution Environment must not be null.");
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 127)  		this.transformation = Preconditions.checkNotNull(transformation, "Stream Transformation must not be null.");
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 128)  	}
                                                                                                                                                                                   129)
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 130)  	/**
32ddc9e60 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-12 07:59:04 +0000 131)  	 * Returns the ID of the {@link DataStream} in the current {@link StreamExecutionEnvironment}.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 132)  	 *
3228db5fb flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:14:12 +0000 133)  	 * @return ID of the DataStream
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 134)  	 */
b54499b1c flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-05 13:43:49 +0000 135)  	@Internal
4eabd4dbb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-26 17:49:01 +0000 136)  	public int getId() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 137)  		return transformation.getId();
453acfbf1 flink-addons/flink-streaming/src/main/java/eu/stratosphere/api/datastream/DataStream.java                                  (ghermann           2014-08-18 13:56:59 +0000 138)  	}
                                                                                                                                                                                   139)
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 140)  	/**
cf84bca12 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Maximilian Michels 2015-03-23 08:03:50 +0000 141)  	 * Gets the parallelism for this operator.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 142)  	 *
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 143)  	 * @return The parallelism set for this operator.
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 144)  	 */
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 145)  	public int getParallelism() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 146)  		return transformation.getParallelism();
5b05ca635 flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (ghermann           2014-08-18 13:57:13 +0000 147)  	}
                                                                                                                                                                                   148)
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 149)  	/**
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 150)  	 * Gets the minimum resources for this operator.
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 151)  	 *
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 152)  	 * @return The minimum resources set for this operator.
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 153)  	 */
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 154)  	@PublicEvolving
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 155)  	public ResourceSpec getMinResources() {
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 156)  		return transformation.getMinResources();
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 157)  	}
                                                                                                                                                                                   158)
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 159)  	/**
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 160)  	 * Gets the preferred resources for this operator.
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 161)  	 *
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 162)  	 * @return The preferred resources set for this operator.
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 163)  	 */
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 164)  	@PublicEvolving
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 165)  	public ResourceSpec getPreferredResources() {
9912de21a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2017-02-28 17:59:10 +0000 166)  		return transformation.getPreferredResources();
f37ed0290 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (淘江                 2017-02-28 17:59:10 +0000 167)  	}
                                                                                                                                                                                   168)
4d73f51c5 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-09-20 11:42:04 +0000 169)  	/**
51c1f6779 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-10 12:27:38 +0000 170)  	 * Gets the type of the stream.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 171)  	 *
51c1f6779 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-10 12:27:38 +0000 172)  	 * @return The type of the datastream.
4d73f51c5 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-09-20 11:42:04 +0000 173)  	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 174)  	public TypeInformation<T> getType() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 175)  		return transformation.getOutputType();
4d73f51c5 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-09-20 11:42:04 +0000 176)  	}
                                                                                                                                                                                   177)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 178)  	/**
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 179)  	 * Invokes the {@link org.apache.flink.api.java.ClosureCleaner}
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 180)  	 * on the given function if closure cleaning is enabled in the {@link ExecutionConfig}.
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 181)  	 *
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 182)  	 * @return The cleaned Function
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 183)  	 */
e2304c4ec flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-06-10 15:13:36 +0000 184)  	protected <F> F clean(F f) {
e2304c4ec flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-06-10 15:13:36 +0000 185)  		return getExecutionEnvironment().clean(f);
5f7800702 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-12-17 19:34:07 +0000 186)  	}
                                                                                                                                                                                   187)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 188)  	/**
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 189)  	 * Returns the {@link StreamExecutionEnvironment} that was used to create this
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 190)  	 * {@link DataStream}.
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 191)  	 *
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 192)  	 * @return The Execution Environment
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 193)  	 */
5f7800702 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-12-17 19:34:07 +0000 194)  	public StreamExecutionEnvironment getExecutionEnvironment() {
5f7800702 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-12-17 19:34:07 +0000 195)  		return environment;
5f7800702 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-12-17 19:34:07 +0000 196)  	}
                                                                                                                                                                                   197)
05bff2295 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gabor Gevay        2015-06-20 18:37:03 +0000 198)  	public ExecutionConfig getExecutionConfig() {
3885823f0 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-02-16 12:06:08 +0000 199)  		return environment.getConfig();
3885823f0 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-02-16 12:06:08 +0000 200)  	}
                                                                                                                                                                                   201)
23788bcdd flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (gyfora             2014-08-18 13:57:09 +0000 202)  	/**
5e29f681e flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (balidani           2014-10-27 11:23:15 +0000 203)  	 * Creates a new {@link DataStream} by merging {@link DataStream} outputs of
5e29f681e flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (balidani           2014-10-27 11:23:15 +0000 204)  	 * the same type with each other. The DataStreams merged using this operator
5e29f681e flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (balidani           2014-10-27 11:23:15 +0000 205)  	 * will be transformed simultaneously.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 206)  	 *
e02b72963 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (gyfora             2014-08-18 13:57:10 +0000 207)  	 * @param streams
3527f40f6 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-03 10:47:41 +0000 208)  	 *            The DataStreams to union output with.
c8054a3a4 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Daniel Warneke     2014-10-01 12:03:00 +0000 209)  	 * @return The {@link DataStream}.
23788bcdd flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (gyfora             2014-08-18 13:57:09 +0000 210)  	 */
479bec0b2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 211)  	@SafeVarargs
479bec0b2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 212)  	public final DataStream<T> union(DataStream<T>... streams) {
479bec0b2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 213)  		List<StreamTransformation<T>> unionedTransforms = new ArrayList<>();
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 214)  		unionedTransforms.add(this.transformation);
                                                                                                                                                                                   215)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 216)  		for (DataStream<T> newStream : streams) {
479bec0b2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 217)  			if (!getType().equals(newStream.getType())) {
479bec0b2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 218)  				throw new IllegalArgumentException("Cannot union streams of different types: "
479bec0b2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 219)  						+ getType() + " and " + newStream.getType());
479bec0b2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 220)  			}
                                                                                                                                                                                   221)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 222)  			unionedTransforms.add(newStream.getTransformation());
23788bcdd flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (gyfora             2014-08-18 13:57:09 +0000 223)  		}
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 224)  		return new DataStream<>(this.environment, new UnionTransformation<>(unionedTransforms));
23788bcdd flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (gyfora             2014-08-18 13:57:09 +0000 225)  	}
                                                                                                                                                                                   226)
7ce9a8ff9 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mingliang          2015-01-25 14:24:40 +0000 227)  	/**
7ce9a8ff9 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mingliang          2015-01-25 14:24:40 +0000 228)  	 * Operator used for directing tuples to specific named outputs using an
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 229)  	 * {@link org.apache.flink.streaming.api.collector.selector.OutputSelector}.
9513f0e33 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 230)  	 * Calling this method on an operator creates a new {@link SplitStream}.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 231)  	 *
7ce9a8ff9 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mingliang          2015-01-25 14:24:40 +0000 232)  	 * @param outputSelector
7ce9a8ff9 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mingliang          2015-01-25 14:24:40 +0000 233)  	 *            The user defined
d832400b3 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-03-20 10:25:03 +0000 234)  	 *            {@link org.apache.flink.streaming.api.collector.selector.OutputSelector}
7ce9a8ff9 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mingliang          2015-01-25 14:24:40 +0000 235)  	 *            for directing the tuples.
9513f0e33 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 236)  	 * @return The {@link SplitStream}
7ce9a8ff9 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mingliang          2015-01-25 14:24:40 +0000 237)  	 */
9513f0e33 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 238)  	public SplitStream<T> split(OutputSelector<T> outputSelector) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 239)  		return new SplitStream<>(this, clean(outputSelector));
7ce9a8ff9 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mingliang          2015-01-25 14:24:40 +0000 240)  	}
                                                                                                                                                                                   241)
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 242)  	/**
23d8e2643 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 243)  	 * Creates a new {@link ConnectedStreams} by connecting
c0917f237 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Robert Metzger     2015-03-19 19:58:05 +0000 244)  	 * {@link DataStream} outputs of (possible) different types with each other.
bb5dc7e3d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-02-16 12:06:08 +0000 245)  	 * The DataStreams connected using this operator can be used with
bb5dc7e3d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-02-16 12:06:08 +0000 246)  	 * CoFunctions to apply joint transformations.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 247)  	 *
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 248)  	 * @param dataStream
bb5dc7e3d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-02-16 12:06:08 +0000 249)  	 *            The DataStream with which this stream will be connected.
23d8e2643 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 250)  	 * @return The {@link ConnectedStreams}.
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 251)  	 */
23d8e2643 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 252)  	public <R> ConnectedStreams<T, R> connect(DataStream<R> dataStream) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 253)  		return new ConnectedStreams<>(environment, this, dataStream);
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 254)  	}
                                                                                                                                                                                   255)
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 256)  	/**
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 257)  	 * Creates a new {@link BroadcastConnectedStream} by connecting the current
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 258)  	 * {@link DataStream} or {@link KeyedStream} with a {@link BroadcastStream}.
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 259)  	 *
287682350 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:08:52 +0000 260)  	 * <p>The latter can be created using the {@link #broadcast(MapStateDescriptor[])} method.
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 261)  	 *
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 262)  	 * <p>The resulting stream can be further processed using the {@code BroadcastConnectedStream.process(MyFunction)}
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 263)  	 * method, where {@code MyFunction} can be either a
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 264)  	 * {@link org.apache.flink.streaming.api.functions.co.KeyedBroadcastProcessFunction KeyedBroadcastProcessFunction}
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 265)  	 * or a {@link org.apache.flink.streaming.api.functions.co.BroadcastProcessFunction BroadcastProcessFunction}
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 266)  	 * depending on the current stream being a {@link KeyedStream} or not.
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 267)  	 *
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 268)  	 * @param broadcastStream The broadcast stream with the broadcast state to be connected with this stream.
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 269)  	 * @return The {@link BroadcastConnectedStream}.
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 270)  	 */
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 271)  	@PublicEvolving
287682350 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:08:52 +0000 272)  	public <R> BroadcastConnectedStream<T, R> connect(BroadcastStream<R> broadcastStream) {
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 273)  		return new BroadcastConnectedStream<>(
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 274)  				environment,
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 275)  				this,
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 276)  				Preconditions.checkNotNull(broadcastStream),
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 277)  				broadcastStream.getBroadcastStateDescriptor());
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 278)  	}
                                                                                                                                                                                   279)
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 280)  	/**
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 281)  	 * It creates a new {@link KeyedStream} that uses the provided key for partitioning
5aa93a270 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 282)  	 * its operator states.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 283)  	 *
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 284)  	 * @param key
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 285)  	 *            The KeySelector to be used for extracting the key for partitioning
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 286)  	 * @return The {@link DataStream} with partitioned state (i.e. KeyedStream)
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 287)  	 */
69dfc40d4 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 288)  	public <K> KeyedStream<T, K> keyBy(KeySelector<T, K> key) {
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 289)  		Preconditions.checkNotNull(key);
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 290)  		return new KeyedStream<>(this, clean(key));
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 291)  	}
                                                                                                                                                                                   292)
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 293)  	/**
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 294)  	 * It creates a new {@link KeyedStream} that uses the provided key with explicit type information
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 295)  	 * for partitioning its operator states.
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 296)  	 *
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 297)  	 * @param key The KeySelector to be used for extracting the key for partitioning.
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 298)  	 * @param keyType The type information describing the key type.
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 299)  	 * @return The {@link DataStream} with partitioned state (i.e. KeyedStream)
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 300)  	 */
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 301)  	public <K> KeyedStream<T, K> keyBy(KeySelector<T, K> key, TypeInformation<K> keyType) {
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 302)  		Preconditions.checkNotNull(key);
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 303)  		Preconditions.checkNotNull(keyType);
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 304)  		return new KeyedStream<>(this, clean(key), keyType);
ddba1b69f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Timo Walther       2018-07-20 06:06:07 +0000 305)  	}
                                                                                                                                                                                   306)
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 307)  	/**
5aa93a270 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 308)  	 * Partitions the operator state of a {@link DataStream} by the given key positions.
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 309)  	 *
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 310)  	 * @param fields
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 311)  	 *            The position of the fields on which the {@link DataStream}
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 312)  	 *            will be grouped.
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 313)  	 * @return The {@link DataStream} with partitioned state (i.e. KeyedStream)
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 314)  	 */
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 315)  	public KeyedStream<T, Tuple> keyBy(int... fields) {
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 316)  		if (getType() instanceof BasicArrayTypeInfo || getType() instanceof PrimitiveArrayTypeInfo) {
7c2054326 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:11 +0000 317)  			return keyBy(KeySelectorUtil.getSelectorForArray(fields, getType()));
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 318)  		} else {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 319)  			return keyBy(new Keys.ExpressionKeys<>(fields, getType()));
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 320)  		}
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 321)  	}
                                                                                                                                                                                   322)
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 323)  	/**
f15a7d2d9 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2017-03-10 16:58:00 +0000 324)  	 * Partitions the operator state of a {@link DataStream} using field expressions.
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 325)  	 * A field expression is either the name of a public field or a getter method with parentheses
f15a7d2d9 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2017-03-10 16:58:00 +0000 326)  	 * of the {@link DataStream}'s underlying type. A dot can be used to drill
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 327)  	 * down into objects, as in {@code "field1.getInnerField2()" }.
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 328)  	 *
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 329)  	 * @param fields
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 330)  	 *            One or more field expressions on which the state of the {@link DataStream} operators will be
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 331)  	 *            partitioned.
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 332)  	 * @return The {@link DataStream} with partitioned state (i.e. KeyedStream)
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 333)  	 **/
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 334)  	public KeyedStream<T, Tuple> keyBy(String... fields) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 335)  		return keyBy(new Keys.ExpressionKeys<>(fields, getType()));
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 336)  	}
                                                                                                                                                                                   337)
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 338)  	private KeyedStream<T, Tuple> keyBy(Keys<T> keys) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 339)  		return new KeyedStream<>(this, clean(KeySelectorUtil.getSelectorForKeys(keys,
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 340)  				getType(), getExecutionConfig())));
cad85103e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Paris Carbone      2015-06-25 17:20:00 +0000 341)  	}
                                                                                                                                                                                   342)
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 343)  	/**
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 344)  	 * Partitions a tuple DataStream on the specified key fields using a custom partitioner.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 345)  	 * This method takes the key position to partition on, and a partitioner that accepts the key type.
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 346)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 347)  	 * <p>Note: This method works only on single field keys.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 348)  	 *
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 349)  	 * @param partitioner The partitioner to assign partitions to keys.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 350)  	 * @param field The field index on which the DataStream is to partitioned.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 351)  	 * @return The partitioned DataStream.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 352)  	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 353)  	public <K> DataStream<T> partitionCustom(Partitioner<K> partitioner, int field) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 354)  		Keys.ExpressionKeys<T> outExpressionKeys = new Keys.ExpressionKeys<>(new int[]{field}, getType());
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 355)  		return partitionCustom(partitioner, outExpressionKeys);
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 356)  	}
                                                                                                                                                                                   357)
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 358)  	/**
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 359)  	 * Partitions a POJO DataStream on the specified key fields using a custom partitioner.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 360)  	 * This method takes the key expression to partition on, and a partitioner that accepts the key type.
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 361)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 362)  	 * <p>Note: This method works only on single field keys.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 363)  	 *
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 364)  	 * @param partitioner The partitioner to assign partitions to keys.
6dda5316f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 14:09:13 +0000 365)  	 * @param field The expression for the field on which the DataStream is to partitioned.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 366)  	 * @return The partitioned DataStream.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 367)  	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 368)  	public <K> DataStream<T> partitionCustom(Partitioner<K> partitioner, String field) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 369)  		Keys.ExpressionKeys<T> outExpressionKeys = new Keys.ExpressionKeys<>(new String[]{field}, getType());
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 370)  		return partitionCustom(partitioner, outExpressionKeys);
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 371)  	}
                                                                                                                                                                                   372)
                                                                                                                                                                                   373)
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 374)  	/**
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 375)  	 * Partitions a DataStream on the key returned by the selector, using a custom partitioner.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 376)  	 * This method takes the key selector to get the key to partition on, and a partitioner that
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 377)  	 * accepts the key type.
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 378)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 379)  	 * <p>Note: This method works only on single field keys, i.e. the selector cannot return tuples
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 380)  	 * of fields.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 381)  	 *
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 382)  	 * @param partitioner
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 383)  	 * 		The partitioner to assign partitions to keys.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 384)  	 * @param keySelector
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 385)  	 * 		The KeySelector with which the DataStream is partitioned.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 386)  	 * @return The partitioned DataStream.
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 387)  	 * @see KeySelector
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 388)  	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 389)  	public <K> DataStream<T> partitionCustom(Partitioner<K> partitioner, KeySelector<T, K> keySelector) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 390)  		return setConnectionType(new CustomPartitionerWrapper<>(clean(partitioner),
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 391)  				clean(keySelector)));
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 392)  	}
                                                                                                                                                                                   393)
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 394)  	//	private helper method for custom partitioning
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 395)  	private <K> DataStream<T> partitionCustom(Partitioner<K> partitioner, Keys<T> keys) {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 396)  		KeySelector<T, K> keySelector = KeySelectorUtil.getSelectorForOneKey(keys, partitioner, getType(), getExecutionConfig());
                                                                                                                                                                                   397)
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 398)  		return setConnectionType(
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 399)  				new CustomPartitionerWrapper<>(
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 400)  						clean(partitioner),
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 401)  						clean(keySelector)));
97d10070c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gábor Hermann      2015-07-11 12:00:56 +0000 402)  	}
                                                                                                                                                                                   403)
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 404)  	/**
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 405)  	 * Sets the partitioning of the {@link DataStream} so that the output elements
0755324c2 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Greg Hogan         2018-01-15 15:03:27 +0000 406)  	 * are broadcast to every parallel instance of the next operation.
32ddc9e60 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-12 07:59:04 +0000 407)  	 *
f08d55d0a flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (Márton Balassi     2014-08-18 13:57:07 +0000 408)  	 * @return The DataStream with broadcast partitioning set.
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 409)  	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 410)  	public DataStream<T> broadcast() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 411)  		return setConnectionType(new BroadcastPartitioner<T>());
ce56b1466 flink-addons/flink-streaming/src/main/java/eu/stratosphere/api/datastream/DataStream.java                                  (gyfora             2014-08-18 13:57:00 +0000 412)  	}
                                                                                                                                                                                   413)
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 414)  	/**
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 415)  	 * Sets the partitioning of the {@link DataStream} so that the output elements
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 416)  	 * are broadcasted to every parallel instance of the next operation. In addition,
9628dc891 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-09 17:14:18 +0000 417)  	 * it implicitly as many {@link org.apache.flink.api.common.state.BroadcastState broadcast states}
9628dc891 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-09 17:14:18 +0000 418)  	 * as the specified descriptors which can be used to store the element of the stream.
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 419)  	 *
287682350 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:08:52 +0000 420)  	 * @param broadcastStateDescriptors the descriptors of the broadcast states to create.
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 421)  	 * @return A {@link BroadcastStream} which can be used in the {@link #connect(BroadcastStream)} to
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 422)  	 * create a {@link BroadcastConnectedStream} for further processing of the elements.
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 423)  	 */
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 424)  	@PublicEvolving
287682350 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:08:52 +0000 425)  	public BroadcastStream<T> broadcast(final MapStateDescriptor<?, ?>... broadcastStateDescriptors) {
287682350 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:08:52 +0000 426)  		Preconditions.checkNotNull(broadcastStateDescriptors);
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 427)  		final DataStream<T> broadcastStream = setConnectionType(new BroadcastPartitioner<>());
287682350 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:08:52 +0000 428)  		return new BroadcastStream<>(environment, broadcastStream, broadcastStateDescriptors);
c6c17befe flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kkloudas           2018-02-07 13:07:45 +0000 429)  	}
                                                                                                                                                                                   430)
859983cc2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:14:12 +0000 431)  	/**
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 432)  	 * Sets the partitioning of the {@link DataStream} so that the output elements
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 433)  	 * are shuffled uniformly randomly to the next operation.
32ddc9e60 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-12 07:59:04 +0000 434)  	 *
859983cc2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:14:12 +0000 435)  	 * @return The DataStream with shuffle partitioning set.
859983cc2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:14:12 +0000 436)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 437)  	@PublicEvolving
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 438)  	public DataStream<T> shuffle() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 439)  		return setConnectionType(new ShufflePartitioner<T>());
859983cc2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:14:12 +0000 440)  	}
                                                                                                                                                                                   441)
859983cc2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:14:12 +0000 442)  	/**
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 443)  	 * Sets the partitioning of the {@link DataStream} so that the output elements
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 444)  	 * are forwarded to the local subtask of the next operation.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 445)  	 *
32ddc9e60 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-12 07:59:04 +0000 446)  	 * @return The DataStream with forward partitioning set.
859983cc2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:14:12 +0000 447)  	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 448)  	public DataStream<T> forward() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 449)  		return setConnectionType(new ForwardPartitioner<T>());
859983cc2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:14:12 +0000 450)  	}
                                                                                                                                                                                   451)
2c4e195c7 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (Tofi007            2014-08-18 14:19:17 +0000 452)  	/**
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 453)  	 * Sets the partitioning of the {@link DataStream} so that the output elements
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 454)  	 * are distributed evenly to instances of the next operation in a round-robin
32ddc9e60 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-12 07:59:04 +0000 455)  	 * fashion.
32ddc9e60 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-12 07:59:04 +0000 456)  	 *
32ddc9e60 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-12 07:59:04 +0000 457)  	 * @return The DataStream with rebalance partitioning set.
2c4e195c7 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (Tofi007            2014-08-18 14:19:17 +0000 458)  	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 459)  	public DataStream<T> rebalance() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 460)  		return setConnectionType(new RebalancePartitioner<T>());
2c4e195c7 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (Tofi007            2014-08-18 14:19:17 +0000 461)  	}
                                                                                                                                                                                   462)
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 463)  	/**
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 464)  	 * Sets the partitioning of the {@link DataStream} so that the output elements
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 465)  	 * are distributed evenly to a subset of instances of the next operation in a round-robin
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 466)  	 * fashion.
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 467)  	 *
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 468)  	 * <p>The subset of downstream operations to which the upstream operation sends
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 469)  	 * elements depends on the degree of parallelism of both the upstream and downstream operation.
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 470)  	 * For example, if the upstream operation has parallelism 2 and the downstream operation
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 471)  	 * has parallelism 4, then one upstream operation would distribute elements to two
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 472)  	 * downstream operations while the other upstream operation would distribute to the other
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 473)  	 * two downstream operations. If, on the other hand, the downstream operation has parallelism
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 474)  	 * 2 while the upstream operation has parallelism 4 then two upstream operations will
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 475)  	 * distribute to one downstream operation while the other two upstream operations will
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 476)  	 * distribute to the other downstream operations.
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 477)  	 *
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 478)  	 * <p>In cases where the different parallelisms are not multiples of each other one or several
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 479)  	 * downstream operations will have a differing number of inputs from upstream operations.
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 480)  	 *
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 481)  	 * @return The DataStream with rescale partitioning set.
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 482)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 483)  	@PublicEvolving
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 484)  	public DataStream<T> rescale() {
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 485)  		return setConnectionType(new RescalePartitioner<T>());
9f6a8b6d0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-08 12:03:31 +0000 486)  	}
                                                                                                                                                                                   487)
10a818625 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-08 12:35:28 +0000 488)  	/**
10a818625 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-08 12:35:28 +0000 489)  	 * Sets the partitioning of the {@link DataStream} so that the output values
10a818625 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-08 12:35:28 +0000 490)  	 * all go to the first instance of the next processing operator. Use this
10a818625 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-08 12:35:28 +0000 491)  	 * setting with care since it might cause a serious performance bottleneck
10a818625 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-08 12:35:28 +0000 492)  	 * in the application.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 493)  	 *
10a818625 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-08 12:35:28 +0000 494)  	 * @return The DataStream with shuffle partitioning set.
10a818625 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-08 12:35:28 +0000 495)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 496)  	@PublicEvolving
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 497)  	public DataStream<T> global() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 498)  		return setConnectionType(new GlobalPartitioner<T>());
10a818625 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-08 12:35:28 +0000 499)  	}
                                                                                                                                                                                   500)
c524951f5 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (mbalassi           2014-08-18 14:11:42 +0000 501)  	/**
fbd006051 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-17 16:02:17 +0000 502)  	 * Initiates an iterative part of the program that feeds back data streams.
fbd006051 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-17 16:02:17 +0000 503)  	 * The iterative part needs to be closed by calling
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 504)  	 * {@link IterativeStream#closeWith(DataStream)}. The transformation of
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 505)  	 * this IterativeStream will be the iteration head. The data stream
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 506)  	 * given to the {@link IterativeStream#closeWith(DataStream)} method is
fbd006051 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-17 16:02:17 +0000 507)  	 * the data stream that will be fed back and used as the input for the
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 508)  	 * iteration head. The user can also use different feedback type than the
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 509)  	 * input of the iteration and treat the input and feedback streams as a
23d8e2643 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 510)  	 * {@link ConnectedStreams} be calling
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 511)  	 * {@link IterativeStream#withFeedbackType(TypeInformation)}
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 512)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 513)  	 * <p>A common usage pattern for streaming iterations is to use output
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 514)  	 * splitting to send a part of the closing data stream to the head. Refer to
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 515)  	 * {@link #split(OutputSelector)} for more information.
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 516)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 517)  	 * <p>The iteration edge will be partitioned the same way as the first input of
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 518)  	 * the iteration head unless it is changed in the
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 519)  	 * {@link IterativeStream#closeWith(DataStream)} call.
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 520)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 521)  	 * <p>By default a DataStream with iteration will never terminate, but the user
31641a68e flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mborgmann          2015-02-01 20:47:14 +0000 522)  	 * can use the maxWaitTime parameter to set a max waiting time for the
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 523)  	 * iteration head. If no data received in the set time, the stream
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 524)  	 * terminates.
c524951f5 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (mbalassi           2014-08-18 14:11:42 +0000 525)  	 *
c524951f5 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (mbalassi           2014-08-18 14:11:42 +0000 526)  	 * @return The iterative data stream created.
c524951f5 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (mbalassi           2014-08-18 14:11:42 +0000 527)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 528)  	@PublicEvolving
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 529)  	public IterativeStream<T> iterate() {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 530)  		return new IterativeStream<>(this, 0);
23f649e4d flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (mbalassi           2014-08-18 13:57:14 +0000 531)  	}
                                                                                                                                                                                   532)
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 533)  	/**
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 534)  	 * Initiates an iterative part of the program that feeds back data streams.
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 535)  	 * The iterative part needs to be closed by calling
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 536)  	 * {@link IterativeStream#closeWith(DataStream)}. The transformation of
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 537)  	 * this IterativeStream will be the iteration head. The data stream
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 538)  	 * given to the {@link IterativeStream#closeWith(DataStream)} method is
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 539)  	 * the data stream that will be fed back and used as the input for the
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 540)  	 * iteration head. The user can also use different feedback type than the
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 541)  	 * input of the iteration and treat the input and feedback streams as a
23d8e2643 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 542)  	 * {@link ConnectedStreams} be calling
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 543)  	 * {@link IterativeStream#withFeedbackType(TypeInformation)}
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 544)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 545)  	 * <p>A common usage pattern for streaming iterations is to use output
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 546)  	 * splitting to send a part of the closing data stream to the head. Refer to
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 547)  	 * {@link #split(OutputSelector)} for more information.
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 548)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 549)  	 * <p>The iteration edge will be partitioned the same way as the first input of
128d3bcfe flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-06-26 17:45:53 +0000 550)  	 * the iteration head unless it is changed in the
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 551)  	 * {@link IterativeStream#closeWith(DataStream)} call.
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 552)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 553)  	 * <p>By default a DataStream with iteration will never terminate, but the user
31641a68e flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mborgmann          2015-02-01 20:47:14 +0000 554)  	 * can use the maxWaitTime parameter to set a max waiting time for the
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 555)  	 * iteration head. If no data received in the set time, the stream
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 556)  	 * terminates.
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 557)  	 *
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 558)  	 * @param maxWaitTimeMillis
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 559)  	 *            Number of milliseconds to wait between inputs before shutting
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 560)  	 *            down
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 561)  	 *
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 562)  	 * @return The iterative data stream created.
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 563)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 564)  	@PublicEvolving
7b6e762fd flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 565)  	public IterativeStream<T> iterate(long maxWaitTimeMillis) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 566)  		return new IterativeStream<>(this, maxWaitTimeMillis);
f165c353c flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 567)  	}
                                                                                                                                                                                   568)
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 569)  	/**
5b05ca635 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (ghermann           2014-08-18 13:57:13 +0000 570)  	 * Applies a Map transformation on a {@link DataStream}. The transformation
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 571)  	 * calls a {@link MapFunction} for each element of the DataStream. Each
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 572)  	 * MapFunction call returns exactly one element. The user can also extend
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 573)  	 * {@link RichMapFunction} to gain access to other features provided by the
ba44459f6 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Henry Saputra      2014-10-17 23:37:36 +0000 574)  	 * {@link org.apache.flink.api.common.functions.RichFunction} interface.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 575)  	 *
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 576)  	 * @param mapper
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 577)  	 *            The MapFunction that is called for each element of the
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 578)  	 *            DataStream.
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 579)  	 * @param <R>
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 580)  	 *            output type
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:23:16 +0000 581)  	 * @return The transformed {@link DataStream}.
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 582)  	 */
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 583)  	public <R> SingleOutputStreamOperator<R> map(MapFunction<T, R> mapper) {
                                                                                                                                                                                   584)
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 585)  		TypeInformation<R> outType = TypeExtractor.getMapReturnTypes(clean(mapper), getType(),
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 586)  				Utils.getCallLocationName(), true);
                                                                                                                                                                                   587)
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 588)  		return transform("Map", outType, new StreamMap<>(clean(mapper)));
aede14fd3 flink-addons/flink-streaming/src/main/java/eu/stratosphere/api/datastream/DataStream.java                                  (Márton Balassi     2014-08-18 13:56:59 +0000 589)  	}
                                                                                                                                                                                   590)
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 591)  	/**
5b05ca635 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (ghermann           2014-08-18 13:57:13 +0000 592)  	 * Applies a FlatMap transformation on a {@link DataStream}. The
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 593)  	 * transformation calls a {@link FlatMapFunction} for each element of the
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 594)  	 * DataStream. Each FlatMapFunction call can return any number of elements
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 595)  	 * including none. The user can also extend {@link RichFlatMapFunction} to
a221796e2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-10-27 11:23:58 +0000 596)  	 * gain access to other features provided by the
a221796e2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-10-27 11:23:58 +0000 597)  	 * {@link org.apache.flink.api.common.functions.RichFunction} interface.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 598)  	 *
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 599)  	 * @param flatMapper
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 600)  	 *            The FlatMapFunction that is called for each element of the
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 601)  	 *            DataStream
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 602)  	 *
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 603)  	 * @param <R>
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 604)  	 *            output type
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:23:16 +0000 605)  	 * @return The transformed {@link DataStream}.
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 606)  	 */
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 607)  	public <R> SingleOutputStreamOperator<R> flatMap(FlatMapFunction<T, R> flatMapper) {
                                                                                                                                                                                   608)
34353f665 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 609)  		TypeInformation<R> outType = TypeExtractor.getFlatMapReturnTypes(clean(flatMapper),
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 610)  				getType(), Utils.getCallLocationName(), true);
                                                                                                                                                                                   611)
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 612)  		return transform("Flat Map", outType, new StreamFlatMap<>(clean(flatMapper)));
                                                                                                                                                                                   613)
453acfbf1 flink-addons/flink-streaming/src/main/java/eu/stratosphere/api/datastream/DataStream.java                                  (ghermann           2014-08-18 13:56:59 +0000 614)  	}
                                                                                                                                                                                   615)
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 616)  	/**
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 617)  	 * Applies the given {@link ProcessFunction} on the input stream, thereby
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 618)  	 * creating a transformed output stream.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 619)  	 *
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 620)  	 * <p>The function will be called for every element in the input streams and can produce zero
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 621)  	 * or more output elements.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 622)  	 *
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 623)  	 * @param processFunction The {@link ProcessFunction} that is called for each element
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 624)  	 *                      in the stream.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 625)  	 *
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 626)  	 * @param <R> The type of elements emitted by the {@code ProcessFunction}.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 627)  	 *
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 628)  	 * @return The transformed {@link DataStream}.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 629)  	 */
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 630)  	@PublicEvolving
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 631)  	public <R> SingleOutputStreamOperator<R> process(ProcessFunction<T, R> processFunction) {
                                                                                                                                                                                   632)
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 633)  		TypeInformation<R> outType = TypeExtractor.getUnaryOperatorReturnType(
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 634)  			processFunction,
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 635)  			ProcessFunction.class,
bcaf816dc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Dawid Wysakowicz   2017-06-08 08:42:41 +0000 636)  			0,
bcaf816dc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Dawid Wysakowicz   2017-06-08 08:42:41 +0000 637)  			1,
afb0b630c flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Dawid Wysakowicz   2017-06-17 10:00:49 +0000 638)  			TypeExtractor.NO_INDEX,
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 639)  			getType(),
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 640)  			Utils.getCallLocationName(),
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 641)  			true);
                                                                                                                                                                                   642)
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 643)  		return process(processFunction, outType);
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 644)  	}
                                                                                                                                                                                   645)
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 646)  	/**
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 647)  	 * Applies the given {@link ProcessFunction} on the input stream, thereby
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 648)  	 * creating a transformed output stream.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 649)  	 *
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 650)  	 * <p>The function will be called for every element in the input streams and can produce zero
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 651)  	 * or more output elements.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 652)  	 *
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 653)  	 * @param processFunction The {@link ProcessFunction} that is called for each element
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 654)  	 *                      in the stream.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 655)  	 * @param outputType {@link TypeInformation} for the result type of the function.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 656)  	 *
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 657)  	 * @param <R> The type of elements emitted by the {@code ProcessFunction}.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 658)  	 *
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 659)  	 * @return The transformed {@link DataStream}.
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 660)  	 */
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 661)  	@Internal
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 662)  	public <R> SingleOutputStreamOperator<R> process(
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 663)  			ProcessFunction<T, R> processFunction,
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 664)  			TypeInformation<R> outputType) {
                                                                                                                                                                                   665)
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 666)  		ProcessOperator<T, R> operator = new ProcessOperator<>(clean(processFunction));
                                                                                                                                                                                   667)
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 668)  		return transform("Process", outputType, operator);
0228676d6 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-03-06 11:26:16 +0000 669)  	}
                                                                                                                                                                                   670)
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 671)  	/**
5b05ca635 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (ghermann           2014-08-18 13:57:13 +0000 672)  	 * Applies a Filter transformation on a {@link DataStream}. The
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 673)  	 * transformation calls a {@link FilterFunction} for each element of the
5b05ca635 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (ghermann           2014-08-18 13:57:13 +0000 674)  	 * DataStream and retains only those element for which the function returns
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 675)  	 * true. Elements for which the function returns false are filtered. The
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 676)  	 * user can also extend {@link RichFilterFunction} to gain access to other
a221796e2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-10-27 11:23:58 +0000 677)  	 * features provided by the
a221796e2 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-10-27 11:23:58 +0000 678)  	 * {@link org.apache.flink.api.common.functions.RichFunction} interface.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 679)  	 *
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 680)  	 * @param filter
e73ea2959 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 681)  	 *            The FilterFunction that is called for each element of the
bc7f6d9e5 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (szape              2015-06-03 09:00:36 +0000 682)  	 *            DataStream.
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 683)  	 * @return The filtered DataStream.
3e83eb4fc flink-addons/flink-streaming/stratosphere-streaming-core/src/main/java/eu/stratosphere/streaming/api/DataStream.java       (gyfora             2014-08-18 13:57:12 +0000 684)  	 */
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 685)  	public SingleOutputStreamOperator<T> filter(FilterFunction<T> filter) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 686)  		return transform("Filter", getType(), new StreamFilter<>(clean(filter)));
                                                                                                                                                                                   687)
f8425f1d1 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (ghermann           2014-08-18 13:57:01 +0000 688)  	}
                                                                                                                                                                                   689)
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 690)  	/**
680b5a90d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Hubert Czerpak     2015-10-29 09:52:22 +0000 691)  	 * Initiates a Project transformation on a {@link Tuple} {@link DataStream}.<br>
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 692)  	 * <b>Note: Only Tuple DataStreams can be projected.</b>
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 693)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 694)  	 * <p>The transformation projects each Tuple of the DataSet onto a (sub)set of
0930179f4 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-05-29 13:08:33 +0000 695)  	 * fields.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 696)  	 *
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 697)  	 * @param fieldIndexes
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 698)  	 *            The field indexes of the input tuples that are retained. The
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 699)  	 *            order of fields in the output tuple corresponds to the order
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 700)  	 *            of field indexes.
0930179f4 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-05-29 13:08:33 +0000 701)  	 * @return The projected DataStream
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 702)  	 *
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 703)  	 * @see Tuple
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 704)  	 * @see DataStream
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 705)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 706)  	@PublicEvolving
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 707)  	public <R extends Tuple> SingleOutputStreamOperator<R> project(int... fieldIndexes) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 708)  		return new StreamProjection<>(this, fieldIndexes).projectTupleX();
4175dca89 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-09-24 17:54:39 +0000 709)  	}
                                                                                                                                                                                   710)
8634dbbe9 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-07 20:08:25 +0000 711)  	/**
8634dbbe9 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-07 20:08:25 +0000 712)  	 * Creates a join operation. See {@link CoGroupedStreams} for an example of how the keys
8634dbbe9 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-07 20:08:25 +0000 713)  	 * and window can be specified.
8634dbbe9 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-07 20:08:25 +0000 714)  	 */
69dfc40d4 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 715)  	public <T2> CoGroupedStreams<T, T2> coGroup(DataStream<T2> otherStream) {
69dfc40d4 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 716)  		return new CoGroupedStreams<>(this, otherStream);
8634dbbe9 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-07 20:08:25 +0000 717)  	}
                                                                                                                                                                                   718)
0ef399cf7 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-05 15:45:09 +0000 719)  	/**
8634dbbe9 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-07 20:08:25 +0000 720)  	 * Creates a join operation. See {@link JoinedStreams} for an example of how the keys
8634dbbe9 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-07 20:08:25 +0000 721)  	 * and window can be specified.
0ef399cf7 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-05 15:45:09 +0000 722)  	 */
69dfc40d4 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 723)  	public <T2> JoinedStreams<T, T2> join(DataStream<T2> otherStream) {
69dfc40d4 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-10-16 13:26:10 +0000 724)  		return new JoinedStreams<>(this, otherStream);
0ef399cf7 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2014-12-05 15:45:09 +0000 725)  	}
                                                                                                                                                                                   726)
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 727)  	/**
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 728)  	 * Windows this {@code DataStream} into tumbling time windows.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 729)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 730)  	 * <p>This is a shortcut for either {@code .window(TumblingEventTimeWindows.of(size))} or
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 731)  	 * {@code .window(TumblingProcessingTimeWindows.of(size))} depending on the time characteristic
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 732)  	 * set using
a7a1cbc24 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 16:21:58 +0000 733)  	 *
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 734)  	 * <p>Note: This operation is inherently non-parallel since all elements have to pass through
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 735)  	 * the same operator instance.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 736)  	 *
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 737)  	 * {@link org.apache.flink.streaming.api.environment.StreamExecutionEnvironment#setStreamTimeCharacteristic(org.apache.flink.streaming.api.TimeCharacteristic)}
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 738)  	 *
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 739)  	 * @param size The size of the window.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 740)  	 */
cf75f424a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-01-25 17:28:11 +0000 741)  	public AllWindowedStream<T, TimeWindow> timeWindowAll(Time size) {
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 742)  		if (environment.getStreamTimeCharacteristic() == TimeCharacteristic.ProcessingTime) {
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 743)  			return windowAll(TumblingProcessingTimeWindows.of(size));
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 744)  		} else {
9922d10a0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 19:29:11 +0000 745)  			return windowAll(TumblingEventTimeWindows.of(size));
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 746)  		}
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 747)  	}
                                                                                                                                                                                   748)
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 749)  	/**
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 750)  	 * Windows this {@code DataStream} into sliding time windows.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 751)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 752)  	 * <p>This is a shortcut for either {@code .window(SlidingEventTimeWindows.of(size, slide))} or
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 753)  	 * {@code .window(SlidingProcessingTimeWindows.of(size, slide))} depending on the time characteristic
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 754)  	 * set using
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 755)  	 * {@link org.apache.flink.streaming.api.environment.StreamExecutionEnvironment#setStreamTimeCharacteristic(org.apache.flink.streaming.api.TimeCharacteristic)}
a7a1cbc24 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 16:21:58 +0000 756)  	 *
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 757)  	 * <p>Note: This operation is inherently non-parallel since all elements have to pass through
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 758)  	 * the same operator instance.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 759)  	 *
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 760)  	 * @param size The size of the window.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 761)  	 */
cf75f424a flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-01-25 17:28:11 +0000 762)  	public AllWindowedStream<T, TimeWindow> timeWindowAll(Time size, Time slide) {
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 763)  		if (environment.getStreamTimeCharacteristic() == TimeCharacteristic.ProcessingTime) {
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 764)  			return windowAll(SlidingProcessingTimeWindows.of(size, slide));
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 765)  		} else {
9922d10a0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 19:29:11 +0000 766)  			return windowAll(SlidingEventTimeWindows.of(size, slide));
ce8f966c8 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-17 09:57:44 +0000 767)  		}
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 768)  	}
                                                                                                                                                                                   769)
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 770)  	/**
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 771)  	 * Windows this {@code DataStream} into tumbling count windows.
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 772)  	 *
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 773)  	 * <p>Note: This operation is inherently non-parallel since all elements have to pass through
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 774)  	 * the same operator instance.
a7a1cbc24 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 16:21:58 +0000 775)  	 *
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 776)  	 * @param size The size of the windows in number of elements.
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 777)  	 */
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 778)  	public AllWindowedStream<T, GlobalWindow> countWindowAll(long size) {
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 779)  		return windowAll(GlobalWindows.create()).trigger(PurgingTrigger.of(CountTrigger.of(size)));
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 780)  	}
                                                                                                                                                                                   781)
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 782)  	/**
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 783)  	 * Windows this {@code DataStream} into sliding count windows.
a7a1cbc24 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 16:21:58 +0000 784)  	 *
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 785)  	 * <p>Note: This operation is inherently non-parallel since all elements have to pass through
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 786)  	 * the same operator instance.
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 787)  	 *
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 788)  	 * @param size The size of the windows in number of elements.
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 789)  	 * @param slide The slide interval in number of elements.
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 790)  	 */
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 791)  	public AllWindowedStream<T, GlobalWindow> countWindowAll(long size, long slide) {
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 792)  		return windowAll(GlobalWindows.create())
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 793)  				.evictor(CountEvictor.of(size))
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 794)  				.trigger(CountTrigger.of(slide));
86080bb97 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-11 10:12:41 +0000 795)  	}
                                                                                                                                                                                   796)
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 797)  	/**
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 798)  	 * Windows this data stream to a {@code KeyedTriggerWindowDataStream}, which evaluates windows
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 799)  	 * over a key grouped stream. Elements are put into windows by a
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 800)  	 * {@link org.apache.flink.streaming.api.windowing.assigners.WindowAssigner}. The grouping of
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 801)  	 * elements is done both by key and by window.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 802)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 803)  	 * <p>A {@link org.apache.flink.streaming.api.windowing.triggers.Trigger} can be defined to specify
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 804)  	 * when windows are evaluated. However, {@code WindowAssigners} have a default {@code Trigger}
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 805)  	 * that is used if a {@code Trigger} is not specified.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 806)  	 *
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 807)  	 * <p>Note: This operation is inherently non-parallel since all elements have to pass through
128127a24 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Piotr Nowojski     2018-03-05 16:54:28 +0000 808)  	 * the same operator instance.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 809)  	 *
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 810)  	 * @param assigner The {@code WindowAssigner} that assigns elements to windows.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 811)  	 * @return The trigger windows data stream.
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 812)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 813)  	@PublicEvolving
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 814)  	public <W extends Window> AllWindowedStream<T, W> windowAll(WindowAssigner<? super T, W> assigner) {
9e6e0aeca flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-05 14:36:35 +0000 815)  		return new AllWindowedStream<>(this, assigner);
41717d123 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-01 09:04:00 +0000 816)  	}
                                                                                                                                                                                   817)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 818)  	// ------------------------------------------------------------------------
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 819)  	//  Timestamps and watermarks
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 820)  	// ------------------------------------------------------------------------
                                                                                                                                                                                   821)
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 822)  	/**
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 823)  	 * Extracts a timestamp from an element and assigns it as the internal timestamp of that element.
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 824)  	 * The internal timestamps are, for example, used to to event-time window operations.
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 825)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 826)  	 * <p>If you know that the timestamps are strictly increasing you can use an
6225aa6fb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-04-28 13:48:20 +0000 827)  	 * {@link AscendingTimestampExtractor}. Otherwise,
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 828)  	 * you should provide a {@link TimestampExtractor} that also implements
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 829)  	 * {@link TimestampExtractor#getCurrentWatermark()} to keep track of watermarks.
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 830)  	 *
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 831)  	 * @param extractor The TimestampExtractor that is called for each element of the DataStream.
5aa93a270 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 832)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 833)  	 * @deprecated Please use {@link #assignTimestampsAndWatermarks(AssignerWithPeriodicWatermarks)}
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 834)  	 *             of {@link #assignTimestampsAndWatermarks(AssignerWithPunctuatedWatermarks)}
6225aa6fb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-04-28 13:48:20 +0000 835)  	 *             instead.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 836)  	 * @see #assignTimestampsAndWatermarks(AssignerWithPeriodicWatermarks)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 837)  	 * @see #assignTimestampsAndWatermarks(AssignerWithPunctuatedWatermarks)
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 838)  	 */
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 839)  	@Deprecated
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 840)  	public SingleOutputStreamOperator<T> assignTimestamps(TimestampExtractor<T> extractor) {
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 841)  		// match parallelism to input, otherwise dop=1 sources could lead to some strange
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 842)  		// behaviour: the watermark will creep along very slowly because the elements
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 843)  		// from the source go to each extraction operator round robin.
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 844)  		int inputParallelism = getTransformation().getParallelism();
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 845)  		ExtractTimestampsOperator<T> operator = new ExtractTimestampsOperator<>(clean(extractor));
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 846)  		return transform("ExtractTimestamps", getTransformation().getOutputType(), operator)
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 847)  				.setParallelism(inputParallelism);
54668242b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-10-04 13:53:55 +0000 848)  	}
                                                                                                                                                                                   849)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 850)  	/**
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 851)  	 * Assigns timestamps to the elements in the data stream and periodically creates
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 852)  	 * watermarks to signal event time progress.
5aa93a270 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 853)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 854)  	 * <p>This method creates watermarks periodically (for example every second), based
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 855)  	 * on the watermarks indicated by the given watermark generator. Even when no new elements
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 856)  	 * in the stream arrive, the given watermark generator will be periodically checked for
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 857)  	 * new watermarks. The interval in which watermarks are generated is defined in
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 858)  	 * {@link ExecutionConfig#setAutoWatermarkInterval(long)}.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 859)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 860)  	 * <p>Use this method for the common cases, where some characteristic over all elements
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 861)  	 * should generate the watermarks, or where watermarks are simply trailing behind the
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 862)  	 * wall clock time by a certain amount.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 863)  	 *
6225aa6fb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-04-28 13:48:20 +0000 864)  	 * <p>For the second case and when the watermarks are required to lag behind the maximum
6225aa6fb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-04-28 13:48:20 +0000 865)  	 * timestamp seen so far in the elements of the stream by a fixed amount of time, and this
6225aa6fb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-04-28 13:48:20 +0000 866)  	 * amount is known in advance, use the
6225aa6fb flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-04-28 13:48:20 +0000 867)  	 * {@link BoundedOutOfOrdernessTimestampExtractor}.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 868)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 869)  	 * <p>For cases where watermarks should be created in an irregular fashion, for example
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 870)  	 * based on certain markers that some element carry, use the
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 871)  	 * {@link AssignerWithPunctuatedWatermarks}.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 872)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 873)  	 * @param timestampAndWatermarkAssigner The implementation of the timestamp assigner and
5aa93a270 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 874)  	 *                                      watermark generator.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 875)  	 * @return The stream after the transformation, with assigned timestamps and watermarks.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 876)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 877)  	 * @see AssignerWithPeriodicWatermarks
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 878)  	 * @see AssignerWithPunctuatedWatermarks
5aa93a270 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 879)  	 * @see #assignTimestampsAndWatermarks(AssignerWithPunctuatedWatermarks)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 880)  	 */
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 881)  	public SingleOutputStreamOperator<T> assignTimestampsAndWatermarks(
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 882)  			AssignerWithPeriodicWatermarks<T> timestampAndWatermarkAssigner) {
                                                                                                                                                                                   883)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 884)  		// match parallelism to input, otherwise dop=1 sources could lead to some strange
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 885)  		// behaviour: the watermark will creep along very slowly because the elements
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 886)  		// from the source go to each extraction operator round robin.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 887)  		final int inputParallelism = getTransformation().getParallelism();
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 888)  		final AssignerWithPeriodicWatermarks<T> cleanedAssigner = clean(timestampAndWatermarkAssigner);
                                                                                                                                                                                   889)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 890)  		TimestampsAndPeriodicWatermarksOperator<T> operator =
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 891)  				new TimestampsAndPeriodicWatermarksOperator<>(cleanedAssigner);
                                                                                                                                                                                   892)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 893)  		return transform("Timestamps/Watermarks", getTransformation().getOutputType(), operator)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 894)  				.setParallelism(inputParallelism);
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 895)  	}
                                                                                                                                                                                   896)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 897)  	/**
7ec6d7b55 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-06-22 16:32:09 +0000 898)  	 * Assigns timestamps to the elements in the data stream and creates watermarks to
7ec6d7b55 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (kl0u               2016-06-22 16:32:09 +0000 899)  	 * signal event time progress based on the elements themselves.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 900)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 901)  	 * <p>This method creates watermarks based purely on stream elements. For each element
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 902)  	 * that is handled via {@link AssignerWithPunctuatedWatermarks#extractTimestamp(Object, long)},
ceb64248d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-24 21:00:41 +0000 903)  	 * the {@link AssignerWithPunctuatedWatermarks#checkAndGetNextWatermark(Object, long)}
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 904)  	 * method is called, and a new watermark is emitted, if the returned watermark value is
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 905)  	 * non-negative and greater than the previous watermark.
ceb64248d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-24 21:00:41 +0000 906)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 907)  	 * <p>This method is useful when the data stream embeds watermark elements, or certain elements
5aa93a270 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 908)  	 * carry a marker that can be used to determine the current event time watermark.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 909)  	 * This operation gives the programmer full control over the watermark generation. Users
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 910)  	 * should be aware that too aggressive watermark generation (i.e., generating hundreds of
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 911)  	 * watermarks every second) can cost some performance.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 912)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 913)  	 * <p>For cases where watermarks should be created in a regular fashion, for example
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 914)  	 * every x milliseconds, use the {@link AssignerWithPeriodicWatermarks}.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 915)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 916)  	 * @param timestampAndWatermarkAssigner The implementation of the timestamp assigner and
5aa93a270 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 917)  	 *                                      watermark generator.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 918)  	 * @return The stream after the transformation, with assigned timestamps and watermarks.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 919)  	 *
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 920)  	 * @see AssignerWithPunctuatedWatermarks
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 921)  	 * @see AssignerWithPeriodicWatermarks
ceb64248d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-24 21:00:41 +0000 922)  	 * @see #assignTimestampsAndWatermarks(AssignerWithPeriodicWatermarks)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 923)  	 */
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 924)  	public SingleOutputStreamOperator<T> assignTimestampsAndWatermarks(
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 925)  			AssignerWithPunctuatedWatermarks<T> timestampAndWatermarkAssigner) {
                                                                                                                                                                                   926)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 927)  		// match parallelism to input, otherwise dop=1 sources could lead to some strange
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 928)  		// behaviour: the watermark will creep along very slowly because the elements
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 929)  		// from the source go to each extraction operator round robin.
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 930)  		final int inputParallelism = getTransformation().getParallelism();
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 931)  		final AssignerWithPunctuatedWatermarks<T> cleanedAssigner = clean(timestampAndWatermarkAssigner);
                                                                                                                                                                                   932)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 933)  		TimestampsAndPunctuatedWatermarksOperator<T> operator =
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 934)  				new TimestampsAndPunctuatedWatermarksOperator<>(cleanedAssigner);
                                                                                                                                                                                   935)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 936)  		return transform("Timestamps/Watermarks", getTransformation().getOutputType(), operator)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 937)  				.setParallelism(inputParallelism);
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 938)  	}
                                                                                                                                                                                   939)
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 940)  	// ------------------------------------------------------------------------
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 941)  	//  Data sinks
74c2b80bc flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2016-02-17 10:29:03 +0000 942)  	// ------------------------------------------------------------------------
                                                                                                                                                                                   943)
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 944)  	/**
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 945)  	 * Writes a DataStream to the standard output stream (stdout).
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 946)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 947)  	 * <p>For each element of the DataStream the result of {@link Object#toString()} is written.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 948)  	 *
518adb043 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2018-04-17 13:23:12 +0000 949)  	 * <p>NOTE: This will print to stdout on the machine where the code is executed, i.e. the Flink
518adb043 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2018-04-17 13:23:12 +0000 950)  	 * worker.
518adb043 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2018-04-17 13:23:12 +0000 951)  	 *
5b05ca635 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (ghermann           2014-08-18 13:57:13 +0000 952)  	 * @return The closed DataStream.
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 953)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 954)  	@PublicEvolving
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 955)  	public DataStreamSink<T> print() {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 956)  		PrintSinkFunction<T> printFunction = new PrintSinkFunction<>();
21491b271 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2018-02-18 21:24:35 +0000 957)  		return addSink(printFunction).name("Print to Std. Out");
e196ee635 flink-addons/flink-streaming/src/main/java/eu/stratosphere/api/datastream/DataStream.java                                  (gyfora             2014-08-18 13:56:59 +0000 958)  	}
                                                                                                                                                                                   959)
b5ac6ec7d flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-12-16 22:39:05 +0000 960)  	/**
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 961)  	 * Writes a DataStream to the standard output stream (stderr).
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 962)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 963)  	 * <p>For each element of the DataStream the result of {@link Object#toString()} is written.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 964)  	 *
518adb043 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2018-04-17 13:23:12 +0000 965)  	 * <p>NOTE: This will print to stderr on the machine where the code is executed, i.e. the Flink
518adb043 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2018-04-17 13:23:12 +0000 966)  	 * worker.
518adb043 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2018-04-17 13:23:12 +0000 967)  	 *
b5ac6ec7d flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-12-16 22:39:05 +0000 968)  	 * @return The closed DataStream.
b5ac6ec7d flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-12-16 22:39:05 +0000 969)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 970)  	@PublicEvolving
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 971)  	public DataStreamSink<T> printToErr() {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 972)  		PrintSinkFunction<T> printFunction = new PrintSinkFunction<>(true);
21491b271 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Stephan Ewen       2018-02-18 21:24:35 +0000 973)  		return addSink(printFunction).name("Print to Std. Err");
b5ac6ec7d flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (mbalassi           2014-12-16 22:39:05 +0000 974)  	}
                                                                                                                                                                                   975)
c79b48ba6 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (szape              2014-08-18 14:14:12 +0000 976)  	/**
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 977)  	 * Writes a DataStream to the file specified by path in text format.
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 978)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 979)  	 * <p>For every element of the DataStream the result of {@link Object#toString()} is written.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 980)  	 *
c79b48ba6 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (szape              2014-08-18 14:14:12 +0000 981)  	 * @param path
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 982)  	 *            The path pointing to the location the text file is written to.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 983)  	 *
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 984)  	 * @return The closed DataStream.
c79b48ba6 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (szape              2014-08-18 14:14:12 +0000 985)  	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 986)  	@PublicEvolving
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 987)  	public DataStreamSink<T> writeAsText(String path) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 988)  		return writeUsingOutputFormat(new TextOutputFormat<T>(new Path(path)));
c79b48ba6 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (szape              2014-08-18 14:14:12 +0000 989)  	}
                                                                                                                                                                                   990)
                                                                                                                                                                                   991)
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 992)  	/**
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 993)  	 * Writes a DataStream to the file specified by path in text format.
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 994)  	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 995)  	 * <p>For every element of the DataStream the result of {@link Object#toString()} is written.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 996)  	 *
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 997)  	 * @param path
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 998)  	 *            The path pointing to the location the text file is written to
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 999)  	 * @param writeMode
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1000) 	 *            Controls the behavior for existing files. Options are
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1001) 	 *            NO_OVERWRITE and OVERWRITE.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1002) 	 *
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1003) 	 * @return The closed DataStream.
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1004) 	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 1005) 	@PublicEvolving
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1006) 	public DataStreamSink<T> writeAsText(String path, WriteMode writeMode) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1007) 		TextOutputFormat<T> tof = new TextOutputFormat<>(new Path(path));
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1008) 		tof.setWriteMode(writeMode);
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1009) 		return writeUsingOutputFormat(tof);
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1010) 	}
                                                                                                                                                                                   1011)
                                                                                                                                                                                   1012)
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1013) 	/**
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1014) 	 * Writes a DataStream to the file specified by the path parameter.
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1015) 	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 1016) 	 * <p>For every field of an element of the DataStream the result of {@link Object#toString()}
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1017) 	 * is written. This method can only be used on data streams of tuples.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1018) 	 *
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1019) 	 * @param path
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1020) 	 *            the path pointing to the location the text file is written to
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1021) 	 *
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1022) 	 * @return the closed DataStream
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1023) 	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 1024) 	@PublicEvolving
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1025) 	public DataStreamSink<T> writeAsCsv(String path) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1026) 		return writeAsCsv(path, null, CsvOutputFormat.DEFAULT_LINE_DELIMITER, CsvOutputFormat.DEFAULT_FIELD_DELIMITER);
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1027) 	}
                                                                                                                                                                                   1028)
                                                                                                                                                                                   1029)
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1030) 	/**
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1031) 	 * Writes a DataStream to the file specified by the path parameter.
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1032) 	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 1033) 	 * <p>For every field of an element of the DataStream the result of {@link Object#toString()}
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1034) 	 * is written. This method can only be used on data streams of tuples.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1035) 	 *
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1036) 	 * @param path
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1037) 	 *            the path pointing to the location the text file is written to
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1038) 	 * @param writeMode
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1039) 	 *            Controls the behavior for existing files. Options are
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1040) 	 *            NO_OVERWRITE and OVERWRITE.
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1041) 	 *
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1042) 	 * @return the closed DataStream
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1043) 	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 1044) 	@PublicEvolving
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1045) 	public DataStreamSink<T> writeAsCsv(String path, WriteMode writeMode) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1046) 		return writeAsCsv(path, writeMode, CsvOutputFormat.DEFAULT_LINE_DELIMITER, CsvOutputFormat.DEFAULT_FIELD_DELIMITER);
dc0d81bb8 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (szape              2015-01-21 15:05:25 +0000 1047) 	}
                                                                                                                                                                                   1048)
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1049) 	/**
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1050) 	 * Writes a DataStream to the file specified by the path parameter. The
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1051) 	 * writing is performed periodically every millis milliseconds.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1052) 	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 1053) 	 * <p>For every field of an element of the DataStream the result of {@link Object#toString()}
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1054) 	 * is written. This method can only be used on data streams of tuples.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1055) 	 *
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1056) 	 * @param path
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1057) 	 *            the path pointing to the location the text file is written to
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1058) 	 * @param writeMode
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1059) 	 *            Controls the behavior for existing files. Options are
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1060) 	 *            NO_OVERWRITE and OVERWRITE.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1061) 	 * @param rowDelimiter
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1062) 	 *            the delimiter for two rows
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1063) 	 * @param fieldDelimiter
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1064) 	 *            the delimiter for two fields
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1065) 	 *
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1066) 	 * @return the closed DataStream
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1067) 	 */
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1068) 	@SuppressWarnings("unchecked")
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 1069) 	@PublicEvolving
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1070) 	public <X extends Tuple> DataStreamSink<T> writeAsCsv(
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1071) 			String path,
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1072) 			WriteMode writeMode,
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1073) 			String rowDelimiter,
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1074) 			String fieldDelimiter) {
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1075) 		Preconditions.checkArgument(
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1076) 			getType().isTupleType(),
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1077) 			"The writeAsCsv() method can only be used on data streams of tuples.");
                                                                                                                                                                                   1078)
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1079) 		CsvOutputFormat<X> of = new CsvOutputFormat<>(
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1080) 			new Path(path),
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1081) 			rowDelimiter,
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1082) 			fieldDelimiter);
                                                                                                                                                                                   1083)
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1084) 		if (writeMode != null) {
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1085) 			of.setWriteMode(writeMode);
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1086) 		}
                                                                                                                                                                                   1087)
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1088) 		return writeUsingOutputFormat((OutputFormat<T>) of);
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1089) 	}
                                                                                                                                                                                   1090)
117964957 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-03-22 11:11:05 +0000 1091) 	/**
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 1092) 	 * Writes the DataStream to a socket as a byte array. The format of the
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 1093) 	 * output is specified by a {@link SerializationSchema}.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1094) 	 *
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 1095) 	 * @param hostName
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 1096) 	 *            host of the socket
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 1097) 	 * @param port
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 1098) 	 *            port of the socket
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 1099) 	 * @param schema
1cf49e90c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-05 08:51:20 +0000 1100) 	 *            schema for serialization
117964957 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-03-22 11:11:05 +0000 1101) 	 * @return the closed DataStream
117964957 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-03-22 11:11:05 +0000 1102) 	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 1103) 	@PublicEvolving
09ea3dd0f flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2015-11-27 15:24:03 +0000 1104) 	public DataStreamSink<T> writeToSocket(String hostName, int port, SerializationSchema<T> schema) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1105) 		DataStreamSink<T> returnStream = addSink(new SocketClientSink<>(hostName, port, schema, 0));
c9c9450c2 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gabor Gevay        2015-05-04 08:00:35 +0000 1106) 		returnStream.setParallelism(1); // It would not work if multiple instances would connect to the same port
117964957 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-03-22 11:11:05 +0000 1107) 		return returnStream;
117964957 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-03-22 11:11:05 +0000 1108) 	}
                                                                                                                                                                                   1109)
b5e55918c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (yildirim           2015-06-04 12:27:00 +0000 1110) 	/**
8e49e7b5b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-06-04 12:27:00 +0000 1111) 	 * Writes the dataStream into an output, described by an OutputFormat.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1112) 	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 1113) 	 * <p>The output is not participating in Flink's checkpointing!
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1114) 	 *
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 1115) 	 * <p>For writing to a file system periodically, the use of the "flink-connector-filesystem"
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 1116) 	 * is recommended.
b5e55918c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (yildirim           2015-06-04 12:27:00 +0000 1117) 	 *
b5e55918c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (yildirim           2015-06-04 12:27:00 +0000 1118) 	 * @param format The output format
8e49e7b5b flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Stephan Ewen       2015-06-04 12:27:00 +0000 1119) 	 * @return The closed DataStream
b5e55918c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (yildirim           2015-06-04 12:27:00 +0000 1120) 	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 1121) 	@PublicEvolving
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1122) 	public DataStreamSink<T> writeUsingOutputFormat(OutputFormat<T> format) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1123) 		return addSink(new OutputFormatSinkFunction<>(format));
b5e55918c flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (yildirim           2015-06-04 12:27:00 +0000 1124) 	}
                                                                                                                                                                                   1125)
799424d1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (ghermann           2014-08-18 14:22:09 +0000 1126) 	/**
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 1127) 	 * Method for passing user defined operators along with the type
32ddc9e60 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (mbalassi           2015-06-12 07:59:04 +0000 1128) 	 * information that will transform the DataStream.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1129) 	 *
34353f665 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 1130) 	 * @param operatorName
34353f665 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 1131) 	 *            name of the operator, for logging purposes
34353f665 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 1132) 	 * @param outTypeInfo
34353f665 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 1133) 	 *            the output type of the operator
4754a97b1 flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Gyula Fora         2015-04-15 09:35:12 +0000 1134) 	 * @param operator
34353f665 flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (Gyula Fora         2015-01-02 17:34:38 +0000 1135) 	 *            the object containing the transformation logic
799424d1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (ghermann           2014-08-18 14:22:09 +0000 1136) 	 * @param <R>
799424d1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (ghermann           2014-08-18 14:22:09 +0000 1137) 	 *            type of the return stream
799424d1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (ghermann           2014-08-18 14:22:09 +0000 1138) 	 * @return the data stream constructed
799424d1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (ghermann           2014-08-18 14:22:09 +0000 1139) 	 */
572855daa flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Fabian Hueske      2016-02-10 10:51:26 +0000 1140) 	@PublicEvolving
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 1141) 	public <R> SingleOutputStreamOperator<R> transform(String operatorName, TypeInformation<R> outTypeInfo, OneInputStreamOperator<T, R> operator) {
                                                                                                                                                                                   1142)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1143) 		// read the output type of the input Transform to coax out errors about MissingTypeInfo
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1144) 		transformation.getOutputType();
                                                                                                                                                                                   1145)
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1146) 		OneInputTransformation<T, R> resultTransform = new OneInputTransformation<>(
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1147) 				this.transformation,
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1148) 				operatorName,
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1149) 				operator,
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1150) 				outTypeInfo,
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1151) 				environment.getParallelism());
                                                                                                                                                                                   1152)
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:23:16 +0000 1153) 		@SuppressWarnings({ "unchecked", "rawtypes" })
a922473c0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2016-02-29 20:37:19 +0000 1154) 		SingleOutputStreamOperator<R> returnStream = new SingleOutputStreamOperator(environment, resultTransform);
                                                                                                                                                                                   1155)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1156) 		getExecutionEnvironment().addOperator(resultTransform);
                                                                                                                                                                                   1157)
799424d1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (ghermann           2014-08-18 14:22:09 +0000 1158) 		return returnStream;
799424d1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (ghermann           2014-08-18 14:22:09 +0000 1159) 	}
                                                                                                                                                                                   1160)
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 1161) 	/**
2581a7b88 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Aljoscha Krettek   2017-04-26 08:36:50 +0000 1162) 	 * Internal function for setting the partitioner for the DataStream.
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 1163) 	 *
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 1164) 	 * @param partitioner
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 1165) 	 *            Partitioner to set.
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 1166) 	 * @return The modified DataStream.
d56d48f1a flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java  (gyfora             2014-08-18 14:23:16 +0000 1167) 	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1168) 	protected DataStream<T> setConnectionType(StreamPartitioner<T> partitioner) {
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1169) 		return new DataStream<>(this.getExecutionEnvironment(), new PartitionTransformation<>(this.getTransformation(), partitioner));
1fccb10ff flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (ghermann           2014-08-18 14:19:17 +0000 1170) 	}
                                                                                                                                                                                   1171)
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 1172) 	/**
776bd3f6d flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 1173) 	 * Adds the given sink to this DataStream. Only streams with sinks added
5b05ca635 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (ghermann           2014-08-18 13:57:13 +0000 1174) 	 * will be executed once the {@link StreamExecutionEnvironment#execute()}
5b05ca635 flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (ghermann           2014-08-18 13:57:13 +0000 1175) 	 * method is called.
c08bcf1e0 flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Till Rohrmann      2015-12-21 15:59:03 +0000 1176) 	 *
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 1177) 	 * @param sinkFunction
f08d55d0a flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (Márton Balassi     2014-08-18 13:57:07 +0000 1178) 	 *            The object containing the sink's invoke function.
776bd3f6d flink-addons/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/DataStream.java             (gyfora             2014-08-18 14:22:50 +0000 1179) 	 * @return The closed DataStream.
54a66d7aa flink-addons/flink-streaming/src/main/java/eu/stratosphere/streaming/api/DataStream.java                                   (jfeher             2014-08-18 13:57:06 +0000 1180) 	 */
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1181) 	public DataStreamSink<T> addSink(SinkFunction<T> sinkFunction) {
                                                                                                                                                                                   1182)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1183) 		// read the output type of the input Transform to coax out errors about MissingTypeInfo
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1184) 		transformation.getOutputType();
                                                                                                                                                                                   1185)
35dcceb9e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-09-18 10:17:16 +0000 1186) 		// configure the type if needed
35dcceb9e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-09-18 10:17:16 +0000 1187) 		if (sinkFunction instanceof InputTypeConfigurable) {
35dcceb9e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-09-18 10:17:16 +0000 1188) 			((InputTypeConfigurable) sinkFunction).setInputType(getType(), getExecutionConfig());
35dcceb9e flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-09-18 10:17:16 +0000 1189) 		}
                                                                                                                                                                                   1190)
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1191) 		StreamSink<T> sinkOperator = new StreamSink<>(clean(sinkFunction));
                                                                                                                                                                                   1192)
2714aaf3d flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-16 14:52:53 +0000 1193) 		DataStreamSink<T> sink = new DataStreamSink<>(this, sinkOperator);
                                                                                                                                                                                   1194)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1195) 		getExecutionEnvironment().addOperator(sink.getTransformation());
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1196) 		return sink;
ce7a8996a flink-addons/flink-streaming/src/main/java/eu/stratosphere/api/datastream/DataStream.java                                  (gyfora             2014-08-18 13:57:00 +0000 1197) 	}
                                                                                                                                                                                   1198)
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1199) 	/**
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1200) 	 * Returns the {@link StreamTransformation} that represents the operation that logically creates
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1201) 	 * this {@link DataStream}.
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1202) 	 *
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1203) 	 * @return The Transformation
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1204) 	 */
b54499b1c flink-streaming-java/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java                               (Robert Metzger     2016-02-05 13:43:49 +0000 1205) 	@Internal
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1206) 	public StreamTransformation<T> getTransformation() {
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1207) 		return transformation;
bac21bf5d flink-staging/flink-streaming/flink-streaming-core/src/main/java/org/apache/flink/streaming/api/datastream/DataStream.java (Aljoscha Krettek   2015-08-19 15:53:04 +0000 1208) 	}
453acfbf1 flink-addons/flink-streaming/src/main/java/eu/stratosphere/api/datastream/DataStream.java                                  (ghermann           2014-08-18 13:56:59 +0000 1209) }
