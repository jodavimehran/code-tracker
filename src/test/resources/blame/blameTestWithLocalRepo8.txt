513c71de5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2008-10-28 21:41:58 +0000 1)    /*
513c71de5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2008-10-28 21:41:58 +0000 2)     * Hibernate, Relational Persistence for Idiomatic Java
513c71de5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2008-10-28 21:41:58 +0000 3)     *
bd256e478 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-05-19 04:25:14 +0000 4)     * License: GNU Lesser General Public License (LGPL), version 2.1 or later.
bd256e478 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-05-19 04:25:14 +0000 5)     * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
513c71de5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2008-10-28 21:41:58 +0000 6)     */
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 7)    package org.hibernate.cfg;
                                                                                                                            8)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 9)    import java.util.ArrayList;
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 10)   import java.util.Arrays;
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 11)   import java.util.Collection;
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 12)   import java.util.Collections;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 13)   import java.util.EnumSet;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 14)   import java.util.HashMap;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 15)   import java.util.HashSet;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 16)   import java.util.Iterator;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 17)   import java.util.List;
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 18)   import java.util.Locale;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 19)   import java.util.Map;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 20)   import java.util.Properties;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 21)   import java.util.Set;
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 22)   import javax.persistence.AttributeOverride;
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 23)   import javax.persistence.AttributeOverrides;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 24)   import javax.persistence.Basic;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 25)   import javax.persistence.CollectionTable;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 26)   import javax.persistence.Column;
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 27)   import javax.persistence.ConstraintMode;
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 28)   import javax.persistence.DiscriminatorColumn;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 29)   import javax.persistence.DiscriminatorType;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 30)   import javax.persistence.DiscriminatorValue;
11668ca67 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-05-07 21:34:21 +0000 31)   import javax.persistence.ElementCollection;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 32)   import javax.persistence.Embeddable;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 33)   import javax.persistence.Embedded;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 34)   import javax.persistence.EmbeddedId;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 35)   import javax.persistence.Entity;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 36)   import javax.persistence.FetchType;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 37)   import javax.persistence.GeneratedValue;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 38)   import javax.persistence.Id;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 39)   import javax.persistence.IdClass;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 40)   import javax.persistence.InheritanceType;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 41)   import javax.persistence.JoinColumn;
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 42)   import javax.persistence.JoinColumns;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 43)   import javax.persistence.JoinTable;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 44)   import javax.persistence.ManyToMany;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 45)   import javax.persistence.ManyToOne;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 46)   import javax.persistence.MapKey;
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 47)   import javax.persistence.MapKeyColumn;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 48)   import javax.persistence.MapKeyJoinColumn;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 49)   import javax.persistence.MapKeyJoinColumns;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 50)   import javax.persistence.MappedSuperclass;
6588ede3a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-19 18:57:19 +0000 51)   import javax.persistence.MapsId;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 52)   import javax.persistence.NamedNativeQueries;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 53)   import javax.persistence.NamedNativeQuery;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 54)   import javax.persistence.NamedQueries;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 55)   import javax.persistence.NamedQuery;
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 56)   import javax.persistence.NamedStoredProcedureQueries;
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 57)   import javax.persistence.NamedStoredProcedureQuery;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 58)   import javax.persistence.OneToMany;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 59)   import javax.persistence.OneToOne;
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 60)   import javax.persistence.OrderColumn;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 61)   import javax.persistence.PrimaryKeyJoinColumn;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 62)   import javax.persistence.PrimaryKeyJoinColumns;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 63)   import javax.persistence.SequenceGenerator;
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 64)   import javax.persistence.SequenceGenerators;
d24ed1a1d annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-01-22 07:22:50 +0000 65)   import javax.persistence.SharedCacheMode;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 66)   import javax.persistence.SqlResultSetMapping;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 67)   import javax.persistence.SqlResultSetMappings;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 68)   import javax.persistence.Table;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 69)   import javax.persistence.TableGenerator;
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 70)   import javax.persistence.TableGenerators;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 71)   import javax.persistence.UniqueConstraint;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 72)   import javax.persistence.Version;
                                                                                                                            73)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 74)   import org.hibernate.AnnotationException;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 75)   import org.hibernate.AssertionFailure;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 76)   import org.hibernate.EntityMode;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 77)   import org.hibernate.FetchMode;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 78)   import org.hibernate.MappingException;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 79)   import org.hibernate.annotations.BatchSize;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 80)   import org.hibernate.annotations.Cache;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 81)   import org.hibernate.annotations.Cascade;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 82)   import org.hibernate.annotations.CascadeType;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 83)   import org.hibernate.annotations.Check;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 84)   import org.hibernate.annotations.CollectionId;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 85)   import org.hibernate.annotations.Columns;
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 86)   import org.hibernate.annotations.DiscriminatorFormula;
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 87)   import org.hibernate.annotations.DiscriminatorOptions;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 88)   import org.hibernate.annotations.Fetch;
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 89)   import org.hibernate.annotations.FetchProfile;
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 90)   import org.hibernate.annotations.FetchProfiles;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 91)   import org.hibernate.annotations.Filter;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 92)   import org.hibernate.annotations.FilterDef;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 93)   import org.hibernate.annotations.FilterDefs;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 94)   import org.hibernate.annotations.Filters;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 95)   import org.hibernate.annotations.ForeignKey;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 96)   import org.hibernate.annotations.Formula;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 97)   import org.hibernate.annotations.GenericGenerator;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 98)   import org.hibernate.annotations.GenericGenerators;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 99)   import org.hibernate.annotations.Index;
1e44e7420 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-16 21:43:11 +0000 100)  import org.hibernate.annotations.LazyGroup;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 101)  import org.hibernate.annotations.LazyToOne;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 102)  import org.hibernate.annotations.LazyToOneOption;
54bc9fbf9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 17:26:33 +0000 103)  import org.hibernate.annotations.ListIndexBase;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 104)  import org.hibernate.annotations.ManyToAny;
232a77e5d core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-26 21:00:47 +0000 105)  import org.hibernate.annotations.MapKeyType;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 106)  import org.hibernate.annotations.NaturalId;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 107)  import org.hibernate.annotations.NotFound;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 108)  import org.hibernate.annotations.NotFoundAction;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 109)  import org.hibernate.annotations.OnDelete;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 110)  import org.hibernate.annotations.OnDeleteAction;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 111)  import org.hibernate.annotations.OrderBy;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 112)  import org.hibernate.annotations.ParamDef;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 113)  import org.hibernate.annotations.Parameter;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 114)  import org.hibernate.annotations.Parent;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 115)  import org.hibernate.annotations.Proxy;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 116)  import org.hibernate.annotations.Sort;
33640ae2b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 21:25:12 +0000 117)  import org.hibernate.annotations.SortComparator;
33640ae2b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 21:25:12 +0000 118)  import org.hibernate.annotations.SortNatural;
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 119)  import org.hibernate.annotations.Source;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 120)  import org.hibernate.annotations.Tuplizer;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 121)  import org.hibernate.annotations.Tuplizers;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 122)  import org.hibernate.annotations.TypeDef;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 123)  import org.hibernate.annotations.TypeDefs;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 124)  import org.hibernate.annotations.Where;
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 125)  import org.hibernate.annotations.common.reflection.ClassLoadingException;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 126)  import org.hibernate.annotations.common.reflection.XAnnotatedElement;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 127)  import org.hibernate.annotations.common.reflection.XClass;
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 128)  import org.hibernate.annotations.common.reflection.XMethod;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 129)  import org.hibernate.annotations.common.reflection.XPackage;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 130)  import org.hibernate.annotations.common.reflection.XProperty;
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 131)  import org.hibernate.boot.model.IdGeneratorStrategyInterpreter;
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 132)  import org.hibernate.boot.model.IdentifierGeneratorDefinition;
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 133)  import org.hibernate.boot.model.TypeDefinition;
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 134)  import org.hibernate.boot.spi.InFlightMetadataCollector;
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 135)  import org.hibernate.boot.spi.InFlightMetadataCollector.EntityTableXref;
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 136)  import org.hibernate.boot.spi.MetadataBuildingContext;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 137)  import org.hibernate.cfg.annotations.CollectionBinder;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 138)  import org.hibernate.cfg.annotations.EntityBinder;
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 139)  import org.hibernate.cfg.annotations.HCANNHelper;
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 140)  import org.hibernate.cfg.annotations.MapKeyColumnDelegator;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 141)  import org.hibernate.cfg.annotations.MapKeyJoinColumnDelegator;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 142)  import org.hibernate.cfg.annotations.Nullability;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 143)  import org.hibernate.cfg.annotations.PropertyBinder;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 144)  import org.hibernate.cfg.annotations.QueryBinder;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 145)  import org.hibernate.cfg.annotations.SimpleValueBinder;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 146)  import org.hibernate.cfg.annotations.TableBinder;
b51164aef hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-26 23:50:39 +0000 147)  import org.hibernate.engine.OptimisticLockStyle;
fb44ad936 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2011-05-04 22:15:47 +0000 148)  import org.hibernate.engine.spi.FilterDefinition;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 149)  import org.hibernate.id.PersistentIdentifierGenerator;
6504cb6d7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2011-04-08 14:44:13 +0000 150)  import org.hibernate.internal.CoreMessageLogger;
1811b48f7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-12-09 20:14:56 +0000 151)  import org.hibernate.internal.util.StringHelper;
803c73c55 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-10-09 03:13:52 +0000 152)  import org.hibernate.loader.PropertyPath;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 153)  import org.hibernate.mapping.Any;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 154)  import org.hibernate.mapping.Component;
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 155)  import org.hibernate.mapping.Constraint;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 156)  import org.hibernate.mapping.DependantValue;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 157)  import org.hibernate.mapping.Join;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 158)  import org.hibernate.mapping.JoinedSubclass;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 159)  import org.hibernate.mapping.KeyValue;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 160)  import org.hibernate.mapping.PersistentClass;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 161)  import org.hibernate.mapping.Property;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 162)  import org.hibernate.mapping.RootClass;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 163)  import org.hibernate.mapping.SimpleValue;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 164)  import org.hibernate.mapping.SingleTableSubclass;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 165)  import org.hibernate.mapping.Subclass;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 166)  import org.hibernate.mapping.ToOne;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 167)  import org.hibernate.mapping.UnionSubclass;
                                                                                                                            168)
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 169)  import static org.hibernate.internal.CoreLogging.messageLogger;
                                                                                                                            170)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 171)  /**
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 172)   * JSR 175 annotation binder which reads the annotations from classes, applies the
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 173)   * principles of the EJB3 spec and produces the Hibernate configuration-time metamodel
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 174)   * (the classes in the {@code org.hibernate.mapping} package)
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 175)   * <p/>
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 176)   * Some design description
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 177)   * I tried to remove any link to annotation except from the 2 first level of
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 178)   * method call.
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 179)   * It'll enable to:
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 180)   *   - facilitate annotation overriding
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 181)   *   - mutualize one day xml and annotation binder (probably a dream though)
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 182)   *   - split this huge class in smaller mapping oriented classes
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 183)   *
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 184)   * bindSomething usually create the mapping container and is accessed by one of the 2 first level method
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 185)   * makeSomething usually create the mapping container and is accessed by bindSomething[else]
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 186)   * fillSomething take the container into parameter and fill it.
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 187)   *
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 188)   * @author Emmanuel Bernard
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 189)   * @author Hardy Ferentschik
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 190)   */
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 191)  @SuppressWarnings("unchecked")
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 192)  public final class AnnotationBinder {
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 193)  	private static final CoreMessageLogger LOG = messageLogger( AnnotationBinder.class );
                                                                                                                            194)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 195)  	private AnnotationBinder() {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 196)  	}
                                                                                                                            197)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 198)  	public static void bindDefaults(MetadataBuildingContext context) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 199)  		Map defaults = context.getBootstrapContext().getReflectionManager().getDefaults();
                                                                                                                            200)
14993a463 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-17 17:50:19 +0000 201)  		// id generators ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                            202)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 203)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 204)  			List<SequenceGenerator> anns = ( List<SequenceGenerator> ) defaults.get( SequenceGenerator.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 205)  			if ( anns != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 206)  				for ( SequenceGenerator ann : anns ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 207)  					IdentifierGeneratorDefinition idGen = buildIdGenerator( ann, context );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 208)  					if ( idGen != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 209)  						context.getMetadataCollector().addDefaultIdentifierGenerator( idGen );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 210)  					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 211)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 212)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 213)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 214)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 215)  			List<TableGenerator> anns = ( List<TableGenerator> ) defaults.get( TableGenerator.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 216)  			if ( anns != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 217)  				for ( TableGenerator ann : anns ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 218)  					IdentifierGeneratorDefinition idGen = buildIdGenerator( ann, context );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 219)  					if ( idGen != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 220)  						context.getMetadataCollector().addDefaultIdentifierGenerator( idGen );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 221)  					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 222)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 223)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 224)  		}
                                                                                                                            225)
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 226)  		{
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 227)  			List<TableGenerators> anns = (List<TableGenerators>) defaults.get( TableGenerators.class );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 228)  			if ( anns != null ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 229)  				anns.forEach( tableGenerators -> {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 230)  					for ( TableGenerator tableGenerator : tableGenerators.value() ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 231)  						IdentifierGeneratorDefinition idGen = buildIdGenerator( tableGenerator, context );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 232)  						if ( idGen != null ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 233)  							context.getMetadataCollector().addDefaultIdentifierGenerator( idGen );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 234)  						}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 235)  					}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 236)  				} );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 237)  			}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 238)  		}
                                                                                                                            239)
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 240)  		{
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 241)  			List<SequenceGenerators> anns = (List<SequenceGenerators>) defaults.get( SequenceGenerators.class );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 242)  			if ( anns != null ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 243)  				anns.forEach( sequenceGenerators -> {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 244)  					for ( SequenceGenerator ann : sequenceGenerators.value() ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 245)  						IdentifierGeneratorDefinition idGen = buildIdGenerator( ann, context );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 246)  						if ( idGen != null ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 247)  							context.getMetadataCollector().addDefaultIdentifierGenerator( idGen );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 248)  						}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 249)  					}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 250)  				} );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 251)  			}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 252)  		}
                                                                                                                            253)
14993a463 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-17 17:50:19 +0000 254)  		// queries ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                            255)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 256)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 257)  			List<NamedQuery> anns = ( List<NamedQuery> ) defaults.get( NamedQuery.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 258)  			if ( anns != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 259)  				for ( NamedQuery ann : anns ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 260)  					QueryBinder.bindQuery( ann, context, true );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 261)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 262)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 263)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 264)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 265)  			List<NamedNativeQuery> anns = ( List<NamedNativeQuery> ) defaults.get( NamedNativeQuery.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 266)  			if ( anns != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 267)  				for ( NamedNativeQuery ann : anns ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 268)  					QueryBinder.bindNativeQuery( ann, context, true );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 269)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 270)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 271)  		}
                                                                                                                            272)
14993a463 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-17 17:50:19 +0000 273)  		// result-set-mappings ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                            274)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 275)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 276)  			List<SqlResultSetMapping> anns = ( List<SqlResultSetMapping> ) defaults.get( SqlResultSetMapping.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 277)  			if ( anns != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 278)  				for ( SqlResultSetMapping ann : anns ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 279)  					QueryBinder.bindSqlResultSetMapping( ann, context, true );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 280)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 281)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 282)  		}
                                                                                                                            283)
14993a463 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-17 17:50:19 +0000 284)  		// stored procs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                            285)
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 286)  		{
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 287)  			final List<NamedStoredProcedureQuery> annotations =
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 288)  					(List<NamedStoredProcedureQuery>) defaults.get( NamedStoredProcedureQuery.class );
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 289)  			if ( annotations != null ) {
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 290)  				for ( NamedStoredProcedureQuery annotation : annotations ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 291)  					bindNamedStoredProcedureQuery( annotation, context, true );
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 292)  				}
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 293)  			}
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 294)  		}
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 295)  		{
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 296)  			final List<NamedStoredProcedureQueries> annotations =
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 297)  					(List<NamedStoredProcedureQueries>) defaults.get( NamedStoredProcedureQueries.class );
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 298)  			if ( annotations != null ) {
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 299)  				for ( NamedStoredProcedureQueries annotation : annotations ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 300)  					bindNamedStoredProcedureQueries( annotation, context, true );
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 301)  				}
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 302)  			}
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 303)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 304)  	}
                                                                                                                            305)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 306)  	public static void bindPackage(String packageName, MetadataBuildingContext context) {
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 307)  		XPackage pckg;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 308)  		try {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 309)  			pckg = context.getBootstrapContext().getReflectionManager().packageForName( packageName );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 310)  		}
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 311)  		catch (ClassLoadingException e) {
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 312)  			LOG.packageNotFound( packageName );
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 313)  			return;
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 314)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 315)  		catch ( ClassNotFoundException cnf ) {
a9b1425f3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (JPAV              2011-01-18 21:35:49 +0000 316)  			LOG.packageNotFound( packageName );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 317)  			return;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 318)  		}
                                                                                                                            319)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 320)  		if ( pckg.isAnnotationPresent( SequenceGenerator.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 321)  			SequenceGenerator ann = pckg.getAnnotation( SequenceGenerator.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 322)  			IdentifierGeneratorDefinition idGen = buildIdGenerator( ann, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 323)  			context.getMetadataCollector().addIdentifierGenerator( idGen );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 324)  			if ( LOG.isTraceEnabled() ) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 325)  				LOG.tracev( "Add sequence generator with name: {0}", idGen.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 326)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 327)  		}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 328)  		if ( pckg.isAnnotationPresent( SequenceGenerators.class ) ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 329)  			SequenceGenerators ann = pckg.getAnnotation( SequenceGenerators.class );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 330)  			for ( SequenceGenerator tableGenerator : ann.value() ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 331)  				context.getMetadataCollector().addIdentifierGenerator( buildIdGenerator( tableGenerator, context ) );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 332)  			}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 333)  		}
                                                                                                                            334)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 335)  		if ( pckg.isAnnotationPresent( TableGenerator.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 336)  			TableGenerator ann = pckg.getAnnotation( TableGenerator.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 337)  			IdentifierGeneratorDefinition idGen = buildIdGenerator( ann, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 338)  			context.getMetadataCollector().addIdentifierGenerator( idGen );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 339)  		}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 340)  		if ( pckg.isAnnotationPresent( TableGenerators.class ) ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 341)  			TableGenerators ann = pckg.getAnnotation( TableGenerators.class );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 342)  			for ( TableGenerator tableGenerator : ann.value() ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 343)  				context.getMetadataCollector().addIdentifierGenerator( buildIdGenerator( tableGenerator, context ) );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 344)  			}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 345)  		}
                                                                                                                            346)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 347)  		bindGenericGenerators( pckg, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 348)  		bindQueries( pckg, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 349)  		bindFilterDefs( pckg, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 350)  		bindTypeDefs( pckg, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 351)  		bindFetchProfiles( pckg, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 352)  		BinderHelper.bindAnyMetaDefs( pckg, context );
                                                                                                                            353)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 354)  	}
                                                                                                                            355)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 356)  	private static void bindGenericGenerators(XAnnotatedElement annotatedElement, MetadataBuildingContext context) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 357)  		GenericGenerator defAnn = annotatedElement.getAnnotation( GenericGenerator.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 358)  		GenericGenerators defsAnn = annotatedElement.getAnnotation( GenericGenerators.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 359)  		if ( defAnn != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 360)  			bindGenericGenerator( defAnn, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 361)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 362)  		if ( defsAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 363)  			for ( GenericGenerator def : defsAnn.value() ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 364)  				bindGenericGenerator( def, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 365)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 366)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 367)  	}
                                                                                                                            368)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 369)  	private static void bindGenericGenerator(GenericGenerator def, MetadataBuildingContext context) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 370)  		context.getMetadataCollector().addIdentifierGenerator( buildIdGenerator( def, context ) );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 371)  	}
                                                                                                                            372)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 373)  	private static void bindQueries(XAnnotatedElement annotatedElement, MetadataBuildingContext context) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 374)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 375)  			SqlResultSetMapping ann = annotatedElement.getAnnotation( SqlResultSetMapping.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 376)  			QueryBinder.bindSqlResultSetMapping( ann, context, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 377)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 378)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 379)  			SqlResultSetMappings ann = annotatedElement.getAnnotation( SqlResultSetMappings.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 380)  			if ( ann != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 381)  				for ( SqlResultSetMapping current : ann.value() ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 382)  					QueryBinder.bindSqlResultSetMapping( current, context, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 383)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 384)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 385)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 386)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 387)  			NamedQuery ann = annotatedElement.getAnnotation( NamedQuery.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 388)  			QueryBinder.bindQuery( ann, context, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 389)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 390)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 391)  			org.hibernate.annotations.NamedQuery ann = annotatedElement.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 392)  					org.hibernate.annotations.NamedQuery.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 393)  			);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 394)  			QueryBinder.bindQuery( ann, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 395)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 396)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 397)  			NamedQueries ann = annotatedElement.getAnnotation( NamedQueries.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 398)  			QueryBinder.bindQueries( ann, context, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 399)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 400)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 401)  			org.hibernate.annotations.NamedQueries ann = annotatedElement.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 402)  					org.hibernate.annotations.NamedQueries.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 403)  			);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 404)  			QueryBinder.bindQueries( ann, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 405)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 406)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 407)  			NamedNativeQuery ann = annotatedElement.getAnnotation( NamedNativeQuery.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 408)  			QueryBinder.bindNativeQuery( ann, context, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 409)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 410)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 411)  			org.hibernate.annotations.NamedNativeQuery ann = annotatedElement.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 412)  					org.hibernate.annotations.NamedNativeQuery.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 413)  			);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 414)  			QueryBinder.bindNativeQuery( ann, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 415)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 416)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 417)  			NamedNativeQueries ann = annotatedElement.getAnnotation( NamedNativeQueries.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 418)  			QueryBinder.bindNativeQueries( ann, context, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 419)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 420)  		{
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 421)  			org.hibernate.annotations.NamedNativeQueries ann = annotatedElement.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 422)  					org.hibernate.annotations.NamedNativeQueries.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 423)  			);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 424)  			QueryBinder.bindNativeQueries( ann, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 425)  		}
                                                                                                                            426)
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 427)  		// NamedStoredProcedureQuery handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 428)  		bindNamedStoredProcedureQuery(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 429)  				annotatedElement.getAnnotation( NamedStoredProcedureQuery.class ),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 430)  				context,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 431)  				false
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 432)  		);
                                                                                                                            433)
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 434)  		// NamedStoredProcedureQueries handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a03d44f29 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-21 03:37:16 +0000 435)  		bindNamedStoredProcedureQueries(
5ea40ce3f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-23 23:09:46 +0000 436)  				annotatedElement.getAnnotation( NamedStoredProcedureQueries.class ),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 437)  				context,
5ea40ce3f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-23 23:09:46 +0000 438)  				false
a03d44f29 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-21 03:37:16 +0000 439)  		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 440)  	}
                                                                                                                            441)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 442)  	private static void bindNamedStoredProcedureQueries(NamedStoredProcedureQueries annotation, MetadataBuildingContext context, boolean isDefault) {
a03d44f29 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-21 03:37:16 +0000 443)  		if ( annotation != null ) {
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 444)  			for ( NamedStoredProcedureQuery queryAnnotation : annotation.value() ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 445)  				bindNamedStoredProcedureQuery( queryAnnotation, context, isDefault );
8c95a6077 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-05-09 19:47:58 +0000 446)  			}
a03d44f29 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-21 03:37:16 +0000 447)  		}
a03d44f29 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-21 03:37:16 +0000 448)  	}
                                                                                                                            449)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 450)  	private static void bindNamedStoredProcedureQuery(NamedStoredProcedureQuery annotation, MetadataBuildingContext context, boolean isDefault) {
a03d44f29 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-21 03:37:16 +0000 451)  		if ( annotation != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 452)  			QueryBinder.bindNamedStoredProcedureQuery( annotation, context, isDefault );
a03d44f29 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-21 03:37:16 +0000 453)  		}
a03d44f29 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-05-21 03:37:16 +0000 454)  	}
                                                                                                                            455)
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 456)  	private static IdentifierGeneratorDefinition buildIdGenerator(
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 457)  			java.lang.annotation.Annotation generatorAnn,
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 458)  			MetadataBuildingContext context) {
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 459)  		if ( generatorAnn == null ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 460)  			return null;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 461)  		}
                                                                                                                            462)
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 463)  		IdentifierGeneratorDefinition.Builder definitionBuilder = new IdentifierGeneratorDefinition.Builder();
                                                                                                                            464)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 465)  		if ( context.getMappingDefaults().getImplicitSchemaName() != null ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 466)  			definitionBuilder.addParam(
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 467)  					PersistentIdentifierGenerator.SCHEMA,
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 468)  					context.getMappingDefaults().getImplicitSchemaName()
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 469)  			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 470)  		}
                                                                                                                            471)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 472)  		if ( context.getMappingDefaults().getImplicitCatalogName() != null ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 473)  			definitionBuilder.addParam(
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 474)  					PersistentIdentifierGenerator.CATALOG,
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 475)  					context.getMappingDefaults().getImplicitCatalogName()
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 476)  			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 477)  		}
                                                                                                                            478)
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 479)  		if ( generatorAnn instanceof TableGenerator ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 480)  			context.getBuildingOptions().getIdGenerationTypeInterpreter().interpretTableGenerator(
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 481)  					(TableGenerator) generatorAnn,
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 482)  					definitionBuilder
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 483)  			);
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 484)  			if ( LOG.isTraceEnabled() ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 485)  				LOG.tracev( "Add table generator with name: {0}", definitionBuilder.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 486)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 487)  		}
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 488)  		else if ( generatorAnn instanceof SequenceGenerator ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 489)  			context.getBuildingOptions().getIdGenerationTypeInterpreter().interpretSequenceGenerator(
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 490)  					(SequenceGenerator) generatorAnn,
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 491)  					definitionBuilder
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 492)  			);
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 493)  			if ( LOG.isTraceEnabled() ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 494)  				LOG.tracev( "Add sequence generator with name: {0}", definitionBuilder.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 495)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 496)  		}
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 497)  		else if ( generatorAnn instanceof GenericGenerator ) {
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 498)  			GenericGenerator genGen = ( GenericGenerator ) generatorAnn;
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 499)  			definitionBuilder.setName( genGen.name() );
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 500)  			definitionBuilder.setStrategy( genGen.strategy() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 501)  			Parameter[] params = genGen.parameters();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 502)  			for ( Parameter parameter : params ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 503)  				definitionBuilder.addParam( parameter.name(), parameter.value() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 504)  			}
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 505)  			if ( LOG.isTraceEnabled() ) {
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 506)  				LOG.tracev( "Add generic generator with name: {0}", definitionBuilder.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 507)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 508)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 509)  		else {
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 510)  			throw new AssertionFailure( "Unknown Generator annotation: " + generatorAnn );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 511)  		}
                                                                                                                            512)
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 513)  		return definitionBuilder.build();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 514)  	}
                                                                                                                            515)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 516)  	/**
3a813dcbb hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Richard Bradley   2017-05-03 08:54:37 +0000 517)  	 * Bind a class having JSR175 annotations. Subclasses <b>have to</b> be bound after its parent class.
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 518)  	 *
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 519)  	 * @param clazzToProcess entity to bind as {@code XClass} instance
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 520)  	 * @param inheritanceStatePerClass Meta data about the inheritance relationships for all mapped classes
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 521)  	 *
8b11d5ecf hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Roland Illig      2018-03-14 12:17:55 +0000 522)  	 * @throws MappingException in case there is a configuration error
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 523)  	 */
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 524)  	public static void bindClass(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 525)  			XClass clazzToProcess,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 526)  			Map<XClass, InheritanceState> inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 527)  			MetadataBuildingContext context) throws MappingException {
422ecc653 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-04-16 10:11:32 +0000 528)  		//@Entity and @MappedSuperclass on the same class leads to a NPE down the road
422ecc653 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-04-16 10:11:32 +0000 529)  		if ( clazzToProcess.isAnnotationPresent( Entity.class )
422ecc653 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-04-16 10:11:32 +0000 530)  				&&  clazzToProcess.isAnnotationPresent( MappedSuperclass.class ) ) {
422ecc653 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-04-16 10:11:32 +0000 531)  			throw new AnnotationException( "An entity cannot be annotated with both @Entity and @MappedSuperclass: "
422ecc653 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-04-16 10:11:32 +0000 532)  					+ clazzToProcess.getName() );
422ecc653 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-04-16 10:11:32 +0000 533)  		}
                                                                                                                            534)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 535)  		//TODO: be more strict with secondarytable allowance (not for ids, not for secondary table join columns etc)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 536)  		InheritanceState inheritanceState = inheritanceStatePerClass.get( clazzToProcess );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 537)  		AnnotatedClassType classType = context.getMetadataCollector().getClassType( clazzToProcess );
                                                                                                                            538)
88caf4d95 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-09-22 17:19:24 +0000 539)  		//Queries declared in MappedSuperclass should be usable in Subclasses
88caf4d95 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-09-22 17:19:24 +0000 540)  		if ( AnnotatedClassType.EMBEDDABLE_SUPERCLASS.equals( classType ) ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 541)  			bindQueries( clazzToProcess, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 542)  			bindTypeDefs( clazzToProcess, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 543)  			bindFilterDefs( clazzToProcess, context );
88caf4d95 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-09-22 17:19:24 +0000 544)  		}
                                                                                                                            545)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 546)  		if ( !isEntityClassType( clazzToProcess, classType ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 547)  			return;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 548)  		}
                                                                                                                            549)
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 550)  		if ( LOG.isDebugEnabled() ) {
ad17f89c4 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2011-04-12 14:07:31 +0000 551)  			LOG.debugf( "Binding entity from annotated class: %s", clazzToProcess.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 552)  		}
                                                                                                                            553)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 554)  		PersistentClass superEntity = getSuperEntity(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 555)  				clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 556)  				inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 557)  				context,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 558)  				inheritanceState
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 559)  		);
                                                                                                                            560)
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 561)  		if(superEntity != null && (
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 562)  				clazzToProcess.getAnnotation( AttributeOverride.class ) != null ||
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 563)  				clazzToProcess.getAnnotation( AttributeOverrides.class ) != null ) ) {
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 564)  			throw new AnnotationException(
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 565)  					"An entity annotated with @Inheritance cannot use @AttributeOverride or @AttributeOverrides: " +
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 566)  							clazzToProcess.getName()
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 567)  			);
ebca36a76 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2018-06-20 14:03:04 +0000 568)  		}
                                                                                                                            569)
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 570)  		PersistentClass persistentClass = makePersistentClass( inheritanceState, superEntity, context );
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 571)  		Entity entityAnn = clazzToProcess.getAnnotation( Entity.class );
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 572)  		org.hibernate.annotations.Entity hibEntityAnn = clazzToProcess.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 573)  				org.hibernate.annotations.Entity.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 574)  		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 575)  		EntityBinder entityBinder = new EntityBinder(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 576)  				entityAnn,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 577)  				hibEntityAnn,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 578)  				clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 579)  				persistentClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 580)  				context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 581)  		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 582)  		entityBinder.setInheritanceState( inheritanceState );
                                                                                                                            583)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 584)  		bindQueries( clazzToProcess, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 585)  		bindFilterDefs( clazzToProcess, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 586)  		bindTypeDefs( clazzToProcess, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 587)  		bindFetchProfiles( clazzToProcess, context );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 588)  		BinderHelper.bindAnyMetaDefs( clazzToProcess, context );
                                                                                                                            589)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 590)  		String schema = "";
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 591)  		String table = ""; //might be no @Table annotation on the annotated class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 592)  		String catalog = "";
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 593)  		List<UniqueConstraintHolder> uniqueConstraints = new ArrayList<>();
1d9b7a06a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-05 16:09:08 +0000 594)  		javax.persistence.Table tabAnn = null;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 595)  		if ( clazzToProcess.isAnnotationPresent( javax.persistence.Table.class ) ) {
1d9b7a06a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-05 16:09:08 +0000 596)  			tabAnn = clazzToProcess.getAnnotation( javax.persistence.Table.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 597)  			table = tabAnn.name();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 598)  			schema = tabAnn.schema();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 599)  			catalog = tabAnn.catalog();
a2bf14ae7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2009-12-06 22:20:58 +0000 600)  			uniqueConstraints = TableBinder.buildUniqueConstraintHolders( tabAnn.uniqueConstraints() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 601)  		}
                                                                                                                            602)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 603)  		Ejb3JoinColumn[] inheritanceJoinedColumns = makeInheritanceJoinColumns(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 604)  				clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 605)  				context,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 606)  				inheritanceState,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 607)  				superEntity
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 608)  		);
                                                                                                                            609)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 610)  		final Ejb3DiscriminatorColumn discriminatorColumn;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 611)  		if ( InheritanceType.SINGLE_TABLE.equals( inheritanceState.getType() ) ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 612)  			discriminatorColumn = processSingleTableDiscriminatorProperties(
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 613)  					clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 614)  					context,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 615)  					inheritanceState,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 616)  					entityBinder
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 617)  			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 618)  		}
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 619)  		else if ( InheritanceType.JOINED.equals( inheritanceState.getType() ) ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 620)  			discriminatorColumn = processJoinedDiscriminatorProperties(
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 621)  					clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 622)  					context,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 623)  					inheritanceState,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 624)  					entityBinder
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 625)  			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 626)  		}
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 627)  		else {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 628)  			discriminatorColumn = null;
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 629)  		}
                                                                                                                            630)
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 631)  		entityBinder.setProxy( clazzToProcess.getAnnotation( Proxy.class ) );
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 632)  		entityBinder.setBatchSize( clazzToProcess.getAnnotation( BatchSize.class ) );
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 633)  		entityBinder.setWhere( clazzToProcess.getAnnotation( Where.class ) );
59c3baae3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:32 +0000 634)  		applyCacheSettings( entityBinder, clazzToProcess, context );
                                                                                                                            635)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 636)  		bindFilters( clazzToProcess, entityBinder, context );
                                                                                                                            637)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 638)  		entityBinder.bindEntity();
                                                                                                                            639)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 640)  		if ( inheritanceState.hasTable() ) {
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 641)  			Check checkAnn = clazzToProcess.getAnnotation( Check.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 642)  			String constraints = checkAnn == null
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 643)  					? null
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 644)  					: checkAnn.constraints();
                                                                                                                            645)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 646)  			EntityTableXref denormalizedTableXref = inheritanceState.hasDenormalizedTable()
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 647)  					? context.getMetadataCollector().getEntityTableXref( superEntity.getEntityName() )
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 648)  					: null;
                                                                                                                            649)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 650)  			entityBinder.bindTable(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 651)  					schema,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 652)  					catalog,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 653)  					table,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 654)  					uniqueConstraints,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 655)  					constraints,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 656)  					denormalizedTableXref
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 657)  			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 658)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 659)  		else {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 660)  			if ( clazzToProcess.isAnnotationPresent( Table.class ) ) {
a9b1425f3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (JPAV              2011-01-18 21:35:49 +0000 661)  				LOG.invalidTableAnnotation( clazzToProcess.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 662)  			}
                                                                                                                            663)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 664)  			if ( inheritanceState.getType() == InheritanceType.SINGLE_TABLE ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 665)  				// we at least need to properly set up the EntityTableXref
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 666)  				entityBinder.bindTableForDiscriminatedSubclass(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 667)  						context.getMetadataCollector().getEntityTableXref( superEntity.getEntityName() )
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 668)  				);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 669)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 670)  		}
                                                                                                                            671)
                                                                                                                            672)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 673)  		PropertyHolder propertyHolder = PropertyHolderBuilder.buildPropertyHolder(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 674)  				clazzToProcess,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 675)  				persistentClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 676)  				entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 677)  				context,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 678)  				inheritanceStatePerClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 679)  		);
                                                                                                                            680)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 681)  		javax.persistence.SecondaryTable secTabAnn = clazzToProcess.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 682)  				javax.persistence.SecondaryTable.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 683)  		);
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 684)  		javax.persistence.SecondaryTables secTabsAnn = clazzToProcess.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 685)  				javax.persistence.SecondaryTables.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 686)  		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 687)  		entityBinder.firstLevelSecondaryTablesBinding( secTabAnn, secTabsAnn );
                                                                                                                            688)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 689)  		OnDelete onDeleteAnn = clazzToProcess.getAnnotation( OnDelete.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 690)  		boolean onDeleteAppropriate = false;
                                                                                                                            691)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 692)  		// todo : sucks that this is separate from RootClass distinction
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 693)  		final boolean isInheritanceRoot = !inheritanceState.hasParents();
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 694)  		final boolean hasSubclasses = inheritanceState.hasSiblings();
                                                                                                                            695)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 696)  		if ( InheritanceType.JOINED.equals( inheritanceState.getType() ) ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 697)  			if ( inheritanceState.hasParents() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 698)  				onDeleteAppropriate = true;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 699)  				final JoinedSubclass jsc = ( JoinedSubclass ) persistentClass;
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 700)  				SimpleValue key = new DependantValue( context, jsc.getTable(), jsc.getIdentifier() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 701)  				jsc.setKey( key );
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 702)  				ForeignKey fk = clazzToProcess.getAnnotation( ForeignKey.class );
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 703)  				if ( fk != null && !BinderHelper.isEmptyAnnotationValue( fk.name() ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 704)  					key.setForeignKeyName( fk.name() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 705)  				}
2ea122aed hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2016-06-13 23:58:32 +0000 706)  				else {
2ea122aed hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2016-06-13 23:58:32 +0000 707)  					final PrimaryKeyJoinColumn pkJoinColumn = clazzToProcess.getAnnotation( PrimaryKeyJoinColumn.class );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 708)  					final PrimaryKeyJoinColumns pkJoinColumns = clazzToProcess.getAnnotation( PrimaryKeyJoinColumns.class );
                                                                                                                            709)
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 710)  					if ( pkJoinColumns != null && pkJoinColumns.foreignKey().value() == ConstraintMode.NO_CONSTRAINT ) {
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 711)  						// don't apply a constraint based on ConstraintMode
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 712)  						key.setForeignKeyName( "none" );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 713)  					}
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 714)  					else if ( pkJoinColumns != null && !StringHelper.isEmpty( pkJoinColumns.foreignKey().name() ) ) {
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 715)  						key.setForeignKeyName( pkJoinColumns.foreignKey().name() );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 716)  					}
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 717)  					else if ( pkJoinColumn != null && pkJoinColumn.foreignKey().value() == ConstraintMode.NO_CONSTRAINT ) {
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 718)  						// don't apply a constraint based on ConstraintMode
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 719)  						key.setForeignKeyName( "none" );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 720)  					}
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 721)  					else if ( pkJoinColumn != null && !StringHelper.isEmpty( pkJoinColumn.foreignKey().name() ) ) {
2ea122aed hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2016-06-13 23:58:32 +0000 722)  						key.setForeignKeyName( pkJoinColumn.foreignKey().name() );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 723)  					}
2ea122aed hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2016-06-13 23:58:32 +0000 724)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 725)  				if ( onDeleteAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 726)  					key.setCascadeDeleteEnabled( OnDeleteAction.CASCADE.equals( onDeleteAnn.action() ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 727)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 728)  				else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 729)  					key.setCascadeDeleteEnabled( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 730)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 731)  				//we are never in a second pass at that stage, so queue it
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 732)  				context.getMetadataCollector().addSecondPass( new JoinedSubclassFkSecondPass( jsc, inheritanceJoinedColumns, key, context ) );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 733)  				context.getMetadataCollector().addSecondPass( new CreateKeySecondPass( jsc ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 734)  			}
                                                                                                                            735)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 736)  			if ( isInheritanceRoot ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 737)  				// the class we are processing is the root of the hierarchy, see if we had a discriminator column
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 738)  				// (it is perfectly valid for joined subclasses to not have discriminators).
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 739)  				if ( discriminatorColumn != null ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 740)  					// we have a discriminator column
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 741)  					if ( hasSubclasses || !discriminatorColumn.isImplicit() ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 742)  						bindDiscriminatorColumnToRootPersistentClass(
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 743)  								(RootClass) persistentClass,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 744)  								discriminatorColumn,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 745)  								entityBinder.getSecondaryTables(),
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 746)  								propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 747)  								context
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 748)  						);
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 749)  						//bind it again since the type might have changed
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 750)  						entityBinder.bindDiscriminatorValue();
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 751)  					}
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 752)  				}
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 753)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 754)  		}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 755)  		else if ( InheritanceType.SINGLE_TABLE.equals( inheritanceState.getType() ) ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 756)  			if ( isInheritanceRoot ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 757)  				if ( hasSubclasses || !discriminatorColumn.isImplicit() ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 758)  					bindDiscriminatorColumnToRootPersistentClass(
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 759)  							(RootClass) persistentClass,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 760)  							discriminatorColumn,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 761)  							entityBinder.getSecondaryTables(),
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 762)  							propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 763)  							context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 764)  					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 765)  					//bind it again since the type might have changed
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 766)  					entityBinder.bindDiscriminatorValue();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 767)  				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 768)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 769)  		}
                                                                                                                            770)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 771)  		if ( onDeleteAnn != null && !onDeleteAppropriate ) {
a9b1425f3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (JPAV              2011-01-18 21:35:49 +0000 772)  			LOG.invalidOnDeleteAnnotation(propertyHolder.getEntityName());
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 773)  		}
                                                                                                                            774)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 775)  		// try to find class level generators
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 776)  		HashMap<String, IdentifierGeneratorDefinition> classGenerators = buildGenerators( clazzToProcess, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 777)  		// check properties
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 778)  		final InheritanceState.ElementsToProcess elementsToProcess = inheritanceState.getElementsToProcess();
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 779)  		inheritanceState.postProcess( persistentClass, entityBinder );
                                                                                                                            780)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 781)  		final boolean subclassAndSingleTableStrategy = inheritanceState.getType() == InheritanceType.SINGLE_TABLE
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 782)  				&& inheritanceState.hasParents();
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 783)  		Set<String> idPropertiesIfIdClass = new HashSet<>();
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 784)  		boolean isIdClass = mapAsIdClass(
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 785)  				inheritanceStatePerClass,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 786)  				inheritanceState,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 787)  				persistentClass,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 788)  				entityBinder,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 789)  				propertyHolder,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 790)  				elementsToProcess,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 791)  				idPropertiesIfIdClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 792)  				context
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 793)  		);
                                                                                                                            794)
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 795)  		if ( !isIdClass ) {
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 796)  			entityBinder.setWrapIdsInEmbeddedComponents( elementsToProcess.getIdPropertyCount() > 1 );
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 797)  		}
                                                                                                                            798)
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 799)  		processIdPropertiesIfNotAlready(
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 800)  				inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 801)  				context,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 802)  				persistentClass,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 803)  				entityBinder,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 804)  				propertyHolder,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 805)  				classGenerators,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 806)  				elementsToProcess,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 807)  				subclassAndSingleTableStrategy,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 808)  				idPropertiesIfIdClass
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 809)  		);
                                                                                                                            810)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 811)  		if ( !inheritanceState.hasParents() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 812)  			final RootClass rootClass = ( RootClass ) persistentClass;
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 813)  			context.getMetadataCollector().addSecondPass( new CreateKeySecondPass( rootClass ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 814)  		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 815)  		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 816)  			superEntity.addSubclass( ( Subclass ) persistentClass );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 817)  		}
                                                                                                                            818)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 819)  		context.getMetadataCollector().addEntityBinding( persistentClass );
                                                                                                                            820)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 821)  		//Process secondary tables and complementary definitions (ie o.h.a.Table)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 822)  		context.getMetadataCollector().addSecondPass(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 823)  				new SecondaryTableSecondPass(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 824)  						entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 825)  						propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 826)  						clazzToProcess
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 827)  				)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 828)  		);
                                                                                                                            829)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 830)  		//add process complementary Table definition (index & all)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 831)  		entityBinder.processComplementaryTableDefinitions( clazzToProcess.getAnnotation( org.hibernate.annotations.Table.class ) );
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 832)  		entityBinder.processComplementaryTableDefinitions( clazzToProcess.getAnnotation( org.hibernate.annotations.Tables.class ) );
1d9b7a06a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-05 16:09:08 +0000 833)  		entityBinder.processComplementaryTableDefinitions( tabAnn );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 834)  	}
                                                                                                                            835)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 836)  	/**
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 837)  	 * Process all discriminator-related metadata per rules for "single table" inheritance
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 838)  	 */
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 839)  	private static Ejb3DiscriminatorColumn processSingleTableDiscriminatorProperties(
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 840)  			XClass clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 841)  			MetadataBuildingContext context,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 842)  			InheritanceState inheritanceState,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 843)  			EntityBinder entityBinder) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 844)  		final boolean isRoot = !inheritanceState.hasParents();
                                                                                                                            845)
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 846)  		Ejb3DiscriminatorColumn discriminatorColumn = null;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 847)  		javax.persistence.DiscriminatorColumn discAnn = clazzToProcess.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 848)  				javax.persistence.DiscriminatorColumn.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 849)  		);
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 850)  		DiscriminatorType discriminatorType = discAnn != null
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 851)  				? discAnn.discriminatorType()
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 852)  				: DiscriminatorType.STRING;
                                                                                                                            853)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 854)  		org.hibernate.annotations.DiscriminatorFormula discFormulaAnn = clazzToProcess.getAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 855)  				org.hibernate.annotations.DiscriminatorFormula.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 856)  		);
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 857)  		if ( isRoot ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 858)  			discriminatorColumn = Ejb3DiscriminatorColumn.buildDiscriminatorColumn(
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 859)  					discriminatorType,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 860)  					discAnn,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 861)  					discFormulaAnn,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 862)  					context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 863)  			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 864)  		}
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 865)  		if ( discAnn != null && !isRoot ) {
62da5aa5b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2011-04-12 02:59:50 +0000 866)  			LOG.invalidDiscriminatorAnnotation( clazzToProcess.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 867)  		}
                                                                                                                            868)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 869)  		final String discriminatorValue = clazzToProcess.isAnnotationPresent( DiscriminatorValue.class )
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 870)  				? clazzToProcess.getAnnotation( DiscriminatorValue.class ).value()
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 871)  				: null;
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 872)  		entityBinder.setDiscriminatorValue( discriminatorValue );
                                                                                                                            873)
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 874)  		DiscriminatorOptions discriminatorOptions = clazzToProcess.getAnnotation( DiscriminatorOptions.class );
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 875)  		if ( discriminatorOptions != null) {
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 876)  			entityBinder.setForceDiscriminator( discriminatorOptions.force() );
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 877)  			entityBinder.setInsertableDiscriminator( discriminatorOptions.insert() );
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 878)  		}
                                                                                                                            879)
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 880)  		return discriminatorColumn;
bf7607e24 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-29 10:45:08 +0000 881)  	}
                                                                                                                            882)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 883)  	/**
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 884)  	 * Process all discriminator-related metadata per rules for "joined" inheritance
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 885)  	 */
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 886)  	private static Ejb3DiscriminatorColumn processJoinedDiscriminatorProperties(
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 887)  			XClass clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 888)  			MetadataBuildingContext context,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 889)  			InheritanceState inheritanceState,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 890)  			EntityBinder entityBinder) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 891)  		if ( clazzToProcess.isAnnotationPresent( DiscriminatorFormula.class ) ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 892)  			throw new MappingException( "@DiscriminatorFormula on joined inheritance not supported at this time" );
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 893)  		}
                                                                                                                            894)
                                                                                                                            895)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 896)  		// DiscriminatorValue handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                            897)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 898)  		final DiscriminatorValue discriminatorValueAnnotation = clazzToProcess.getAnnotation( DiscriminatorValue.class );
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 899)  		final String discriminatorValue = discriminatorValueAnnotation != null
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 900)  				? clazzToProcess.getAnnotation( DiscriminatorValue.class ).value()
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 901)  				: null;
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 902)  		entityBinder.setDiscriminatorValue( discriminatorValue );
                                                                                                                            903)
                                                                                                                            904)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 905)  		// DiscriminatorColumn handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                                                                                            906)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 907)  		final DiscriminatorColumn discriminatorColumnAnnotation = clazzToProcess.getAnnotation( DiscriminatorColumn.class );
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 908)  		if ( !inheritanceState.hasParents() ) {
b70148a85 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 909)  			// we want to process the discriminator column if either:
b70148a85 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 910)  			//		1) There is an explicit DiscriminatorColumn annotation && we are not told to ignore them
b70148a85 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 911)  			//		2) There is not an explicit DiscriminatorColumn annotation && we are told to create them implicitly
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 912)  			final boolean generateDiscriminatorColumn;
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 913)  			if ( discriminatorColumnAnnotation != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 914)  				if ( context.getBuildingOptions().ignoreExplicitDiscriminatorsForJoinedInheritance() ) {
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 915)  					LOG.debugf( "Ignoring explicit DiscriminatorColumn annotation on ", clazzToProcess.getName() );
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 916)  					generateDiscriminatorColumn = false;
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 917)  				}
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 918)  				else {
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 919)  					LOG.applyingExplicitDiscriminatorColumnForJoined(
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 920)  							clazzToProcess.getName(),
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 921)  							AvailableSettings.IGNORE_EXPLICIT_DISCRIMINATOR_COLUMNS_FOR_JOINED_SUBCLASS
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 922)  					);
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 923)  					generateDiscriminatorColumn = true;
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 924)  				}
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 925)  			}
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 926)  			else {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 927)  				if ( context.getBuildingOptions().createImplicitDiscriminatorsForJoinedInheritance() ) {
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 928)  					LOG.debug( "Applying implicit DiscriminatorColumn using DiscriminatorColumn defaults" );
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 929)  					generateDiscriminatorColumn = true;
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 930)  				}
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 931)  				else {
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 932)  					LOG.debug( "Ignoring implicit (absent) DiscriminatorColumn" );
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 933)  					generateDiscriminatorColumn = false;
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 934)  				}
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 935)  			}
                                                                                                                            936)
26820e8a7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 16:40:36 +0000 937)  			if ( generateDiscriminatorColumn ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 938)  				final DiscriminatorType discriminatorType = discriminatorColumnAnnotation != null
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 939)  						? discriminatorColumnAnnotation.discriminatorType()
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 940)  						: DiscriminatorType.STRING;
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 941)  				return Ejb3DiscriminatorColumn.buildDiscriminatorColumn(
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 942)  						discriminatorType,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 943)  						discriminatorColumnAnnotation,
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 944)  						null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 945)  						context
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 946)  				);
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 947)  			}
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 948)  		}
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 949)  		else {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 950)  			if ( discriminatorColumnAnnotation != null ) {
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 951)  				LOG.invalidDiscriminatorAnnotation( clazzToProcess.getName() );
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 952)  			}
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 953)  		}
                                                                                                                            954)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 955)  		return null;
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 956)  	}
                                                                                                                            957)
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 958)  	private static void processIdPropertiesIfNotAlready(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 959)  			Map<XClass, InheritanceState> inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 960)  			MetadataBuildingContext context,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 961)  			PersistentClass persistentClass,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 962)  			EntityBinder entityBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 963)  			PropertyHolder propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 964)  			HashMap<String, IdentifierGeneratorDefinition> classGenerators,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 965)  			InheritanceState.ElementsToProcess elementsToProcess,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 966)  			boolean subclassAndSingleTableStrategy,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 967)  			Set<String> idPropertiesIfIdClass) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 968)  		Set<String> missingIdProperties = new HashSet<>( idPropertiesIfIdClass );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 969)  		for ( PropertyData propertyAnnotatedElement : elementsToProcess.getElements() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 970)  			String propertyName = propertyAnnotatedElement.getPropertyName();
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 971)  			if ( !idPropertiesIfIdClass.contains( propertyName ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 972)  				processElementAnnotations(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 973)  						propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 974)  						subclassAndSingleTableStrategy
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 975)  								? Nullability.FORCED_NULL
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 976)  								: Nullability.NO_CONSTRAINT,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 977)  						propertyAnnotatedElement,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 978)  						classGenerators,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 979)  						entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 980)  						false,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 981)  						false,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 982)  						false,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 983)  						context,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 984)  						inheritanceStatePerClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 985)  				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 986)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 987)  			else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 988)  				missingIdProperties.remove( propertyName );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 989)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 990)  		}
                                                                                                                            991)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 992)  		if ( missingIdProperties.size() != 0 ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 993)  			StringBuilder missings = new StringBuilder();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 994)  			for ( String property : missingIdProperties ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 995)  				missings.append( property ).append( ", " );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 996)  			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 997)  			throw new AnnotationException(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 998)  					"Unable to find properties ("
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 999)  							+ missings.substring( 0, missings.length() - 2 )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1000) 							+ ") in entity annotated with @IdClass:" + persistentClass.getEntityName()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1001) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1002) 		}
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1003) 	}
                                                                                                                            1004)
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1005) 	private static boolean mapAsIdClass(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1006) 			Map<XClass, InheritanceState> inheritanceStatePerClass,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1007) 			InheritanceState inheritanceState,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1008) 			PersistentClass persistentClass,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1009) 			EntityBinder entityBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1010) 			PropertyHolder propertyHolder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1011) 			InheritanceState.ElementsToProcess elementsToProcess,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1012) 			Set<String> idPropertiesIfIdClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1013) 			MetadataBuildingContext context) {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1014) 		/*
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1015) 		 * We are looking for @IdClass
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1016) 		 * In general we map the id class as identifier using the mapping metadata of the main entity's properties
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1017) 		 * and we create an identifier mapper containing the id properties of the main entity
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1018) 		 *
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1019) 		 * In JPA 2, there is a shortcut if the id class is the Pk of the associated class pointed to by the id
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1020) 		 * it ought to be treated as an embedded and not a real IdClass (at least in the Hibernate's internal way
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1021) 		 */
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1022) 		XClass classWithIdClass = inheritanceState.getClassWithIdClass( false );
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1023) 		if ( classWithIdClass != null ) {
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1024) 			IdClass idClass = classWithIdClass.getAnnotation( IdClass.class );
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 1025) 			XClass compositeClass = context.getBootstrapContext().getReflectionManager().toXClass( idClass.value() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1026) 			PropertyData inferredData = new PropertyPreloadedData(
2dd470af1 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-01-05 21:51:35 +0000 1027) 					entityBinder.getPropertyAccessType(), "id", compositeClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1028) 			);
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 1029) 			PropertyData baseInferredData = new PropertyPreloadedData(
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1030) 					entityBinder.getPropertyAccessType(), "id", classWithIdClass
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 1031) 			);
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 1032) 			AccessType propertyAccessor = entityBinder.getPropertyAccessor( compositeClass );
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1033) 			//In JPA 2, there is a shortcut if the IdClass is the Pk of the associated class pointed to by the id
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1034) 			//it ought to be treated as an embedded and not a real IdClass (at least in the Hibernate's internal way
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1035) 			final boolean isFakeIdClass = isIdClassPkOfTheAssociatedEntity(
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1036) 					elementsToProcess,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1037) 					compositeClass,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1038) 					inferredData,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1039) 					baseInferredData,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1040) 					propertyAccessor,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1041) 					inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1042) 					context
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1043) 			);
                                                                                                                            1044)
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1045) 			if ( isFakeIdClass ) {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1046) 				return false;
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1047) 			}
                                                                                                                            1048)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1049) 			boolean isComponent = true;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1050) 			String generatorType = "assigned";
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1051) 			String generator = BinderHelper.ANNOTATION_STRING_DEFAULT;
                                                                                                                            1052)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1053) 			boolean ignoreIdAnnotations = entityBinder.isIgnoreIdAnnotations();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1054) 			entityBinder.setIgnoreIdAnnotations( true );
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 1055) 			propertyHolder.setInIdClass( true );
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1056) 			bindIdClass(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1057) 					generatorType,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1058) 					generator,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1059) 					inferredData,
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 1060) 					baseInferredData,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1061) 					null,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1062) 					propertyHolder,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1063) 					isComponent,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1064) 					propertyAccessor,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1065) 					entityBinder,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1066) 					true,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1067) 					false,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1068) 					context,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1069) 					inheritanceStatePerClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1070) 			);
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 1071) 			propertyHolder.setInIdClass( null );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1072) 			inferredData = new PropertyPreloadedData(
803c73c55 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-10-09 03:13:52 +0000 1073) 					propertyAccessor, PropertyPath.IDENTIFIER_MAPPER_PROPERTY, compositeClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1074) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1075) 			Component mapper = fillComponent(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1076) 					propertyHolder,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1077) 					inferredData,
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 1078) 					baseInferredData,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1079) 					propertyAccessor,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1080) 					false,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1081) 					entityBinder,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1082) 					true,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1083) 					true,
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 1084) 					false,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1085) 					context,
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 1086) 					inheritanceStatePerClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1087) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1088) 			entityBinder.setIgnoreIdAnnotations( ignoreIdAnnotations );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1089) 			persistentClass.setIdentifierMapper( mapper );
                                                                                                                            1090)
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1091) 			//If id definition is on a mapped superclass, update the mapping
4d5174f55 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-21 03:05:24 +0000 1092) 			final org.hibernate.mapping.MappedSuperclass superclass = BinderHelper.getMappedSuperclassOrNull(
4d5174f55 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-21 03:05:24 +0000 1093) 					classWithIdClass,
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1094) 					inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1095) 					context
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1096) 			);
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1097) 			if ( superclass != null ) {
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1098) 				superclass.setDeclaredIdentifierMapper( mapper );
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1099) 			}
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1100) 			else {
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1101) 				//we are for sure on the entity
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1102) 				persistentClass.setDeclaredIdentifierMapper( mapper );
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1103) 			}
                                                                                                                            1104)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1105) 			Property property = new Property();
803c73c55 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-10-09 03:13:52 +0000 1106) 			property.setName( PropertyPath.IDENTIFIER_MAPPER_PROPERTY );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1107) 			property.setUpdateable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1108) 			property.setInsertable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1109) 			property.setValue( mapper );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1110) 			property.setPropertyAccessorName( "embedded" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1111) 			persistentClass.addProperty( property );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1112) 			entityBinder.setIgnoreIdAnnotations( true );
                                                                                                                            1113)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1114) 			Iterator properties = mapper.getPropertyIterator();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1115) 			while ( properties.hasNext() ) {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1116) 				idPropertiesIfIdClass.add( ( ( Property ) properties.next() ).getName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1117) 			}
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1118) 			return true;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1119) 		}
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1120) 		else {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1121) 			return false;
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1122) 		}
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1123) 	}
                                                                                                                            1124)
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1125) 	private static boolean isIdClassPkOfTheAssociatedEntity(
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1126) 			InheritanceState.ElementsToProcess elementsToProcess,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1127) 			XClass compositeClass,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1128) 			PropertyData inferredData,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1129) 			PropertyData baseInferredData,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1130) 			AccessType propertyAccessor,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1131) 			Map<XClass, InheritanceState> inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1132) 			MetadataBuildingContext context) {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1133) 		if ( elementsToProcess.getIdPropertyCount() == 1 ) {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1134) 			final PropertyData idPropertyOnBaseClass = getUniqueIdPropertyFromBaseClass(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1135) 					inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1136) 					baseInferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1137) 					propertyAccessor,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1138) 					context
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1139) 			);
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1140) 			final InheritanceState state = inheritanceStatePerClass.get( idPropertyOnBaseClass.getClassOrElement() );
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1141) 			if ( state == null ) {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1142) 				return false; //while it is likely a user error, let's consider it is something that might happen
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1143) 			}
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1144) 			final XClass associatedClassWithIdClass = state.getClassWithIdClass( true );
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1145) 			if ( associatedClassWithIdClass == null ) {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1146) 				//we cannot know for sure here unless we try and find the @EmbeddedId
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1147) 				//Let's not do this thorough checking but do some extra validation
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1148) 				final XProperty property = idPropertyOnBaseClass.getProperty();
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1149) 				return property.isAnnotationPresent( ManyToOne.class )
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1150) 						|| property.isAnnotationPresent( OneToOne.class );
                                                                                                                            1151)
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1152) 			}
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1153) 			else {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 1154) 				final XClass idClass = context.getBootstrapContext().getReflectionManager().toXClass(
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1155) 						associatedClassWithIdClass.getAnnotation( IdClass.class ).value()
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1156) 				);
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1157) 				return idClass.equals( compositeClass );
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1158) 			}
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1159) 		}
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1160) 		else {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1161) 			return false;
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1162) 		}
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1163) 	}
                                                                                                                            1164)
59c3baae3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:32 +0000 1165) 	private static void applyCacheSettings(EntityBinder binder, XClass clazzToProcess, MetadataBuildingContext context) {
59c3baae3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:32 +0000 1166) 		binder.applyCaching(
59c3baae3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:32 +0000 1167) 				clazzToProcess,
59c3baae3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:32 +0000 1168) 				determineSharedCacheMode( context ),
59c3baae3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:32 +0000 1169) 				context
                                                                                                                            1170)
59c3baae3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:32 +0000 1171) 		);
59c3baae3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:32 +0000 1172) 	}
                                                                                                                            1173)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1174) 	private static SharedCacheMode determineSharedCacheMode(MetadataBuildingContext context) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1175) 		return context.getBuildingOptions().getSharedCacheMode();
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1176) 	}
                                                                                                                            1177)
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 1178) 	private static PersistentClass makePersistentClass(
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 1179) 			InheritanceState inheritanceState,
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 1180) 			PersistentClass superEntity,
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 1181) 			MetadataBuildingContext metadataBuildingContext) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1182) 		//we now know what kind of persistent entity it is
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1183) 		if ( !inheritanceState.hasParents() ) {
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 1184) 			return new RootClass( metadataBuildingContext );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1185) 		}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1186) 		else if ( InheritanceType.SINGLE_TABLE.equals( inheritanceState.getType() ) ) {
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 1187) 			return new SingleTableSubclass( superEntity, metadataBuildingContext );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1188) 		}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1189) 		else if ( InheritanceType.JOINED.equals( inheritanceState.getType() ) ) {
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 1190) 			return new JoinedSubclass( superEntity, metadataBuildingContext );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1191) 		}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1192) 		else if ( InheritanceType.TABLE_PER_CLASS.equals( inheritanceState.getType() ) ) {
9e063ffa2 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-06-04 19:12:17 +0000 1193) 			return new UnionSubclass( superEntity, metadataBuildingContext );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1194) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1195) 		else {
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1196) 			throw new AssertionFailure( "Unknown inheritance type: " + inheritanceState.getType() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1197) 		}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1198) 	}
                                                                                                                            1199)
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1200) 	private static Ejb3JoinColumn[] makeInheritanceJoinColumns(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1201) 			XClass clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1202) 			MetadataBuildingContext context,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1203) 			InheritanceState inheritanceState,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1204) 			PersistentClass superEntity) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1205) 		Ejb3JoinColumn[] inheritanceJoinedColumns = null;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1206) 		final boolean hasJoinedColumns = inheritanceState.hasParents()
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1207) 				&& InheritanceType.JOINED.equals( inheritanceState.getType() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1208) 		if ( hasJoinedColumns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1209) 			//@Inheritance(JOINED) subclass need to link back to the super entity
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1210) 			PrimaryKeyJoinColumns jcsAnn = clazzToProcess.getAnnotation( PrimaryKeyJoinColumns.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1211) 			boolean explicitInheritanceJoinedColumns = jcsAnn != null && jcsAnn.value().length != 0;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1212) 			if ( explicitInheritanceJoinedColumns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1213) 				int nbrOfInhJoinedColumns = jcsAnn.value().length;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1214) 				PrimaryKeyJoinColumn jcAnn;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1215) 				inheritanceJoinedColumns = new Ejb3JoinColumn[nbrOfInhJoinedColumns];
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1216) 				for ( int colIndex = 0; colIndex < nbrOfInhJoinedColumns; colIndex++ ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1217) 					jcAnn = jcsAnn.value()[colIndex];
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1218) 					inheritanceJoinedColumns[colIndex] = Ejb3JoinColumn.buildJoinColumn(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1219) 							jcAnn,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1220) 							null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1221) 							superEntity.getIdentifier(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1222) 							null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1223) 							null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1224) 							context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1225) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1226) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1227) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1228) 			else {
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1229) 				PrimaryKeyJoinColumn jcAnn = clazzToProcess.getAnnotation( PrimaryKeyJoinColumn.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1230) 				inheritanceJoinedColumns = new Ejb3JoinColumn[1];
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1231) 				inheritanceJoinedColumns[0] = Ejb3JoinColumn.buildJoinColumn(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1232) 						jcAnn,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1233) 						null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1234) 						superEntity.getIdentifier(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1235) 						null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1236) 						null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1237) 						context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1238) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1239) 			}
3712e1ad7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (JPAV              2011-01-18 22:00:59 +0000 1240) 			LOG.trace( "Subclass joined column(s) created" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1241) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1242) 		else {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1243) 			if ( clazzToProcess.isAnnotationPresent( PrimaryKeyJoinColumns.class )
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1244) 					|| clazzToProcess.isAnnotationPresent( PrimaryKeyJoinColumn.class ) ) {
de6d80a67 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Dominique Toupin  2016-03-30 14:55:05 +0000 1245) 				LOG.invalidPrimaryKeyJoinColumnAnnotation( clazzToProcess.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1246) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1247) 		}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1248) 		return inheritanceJoinedColumns;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1249) 	}
                                                                                                                            1250)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1251) 	private static PersistentClass getSuperEntity(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1252) 			XClass clazzToProcess,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1253) 			Map<XClass, InheritanceState> inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1254) 			MetadataBuildingContext context,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1255) 			InheritanceState inheritanceState) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1256) 		InheritanceState superEntityState = InheritanceState.getInheritanceStateOfSuperEntity(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1257) 				clazzToProcess, inheritanceStatePerClass
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1258) 		);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1259) 		PersistentClass superEntity = superEntityState != null
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1260) 				? context.getMetadataCollector().getEntityBinding( superEntityState.getClazz().getName() )
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1261) 				: null;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1262) 		if ( superEntity == null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1263) 			//check if superclass is not a potential persistent class
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1264) 			if ( inheritanceState.hasParents() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1265) 				throw new AssertionFailure(
3a813dcbb hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Richard Bradley   2017-05-03 08:54:37 +0000 1266) 						"Subclass has to be binded after it's mother class: "
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1267) 								+ superEntityState.getClazz().getName()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1268) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1269) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1270) 		}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1271) 		return superEntity;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1272) 	}
                                                                                                                            1273)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1274) 	private static boolean isEntityClassType(XClass clazzToProcess, AnnotatedClassType classType) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1275) 		if ( AnnotatedClassType.EMBEDDABLE_SUPERCLASS.equals( classType ) //will be processed by their subentities
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1276) 				|| AnnotatedClassType.NONE.equals( classType ) //to be ignored
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1277) 				|| AnnotatedClassType.EMBEDDABLE.equals( classType ) //allow embeddable element declaration
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1278) 				) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1279) 			if ( AnnotatedClassType.NONE.equals( classType )
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1280) 					&& clazzToProcess.isAnnotationPresent( org.hibernate.annotations.Entity.class ) ) {
a9b1425f3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (JPAV              2011-01-18 21:35:49 +0000 1281) 				LOG.missingEntityAnnotation( clazzToProcess.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1282) 			}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1283) 			return false;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1284) 		}
                                                                                                                            1285)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1286) 		if ( !classType.equals( AnnotatedClassType.ENTITY ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1287) 			throw new AnnotationException(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1288) 					"Annotated class should have a @javax.persistence.Entity, @javax.persistence.Embeddable or @javax.persistence.EmbeddedSuperclass annotation: " + clazzToProcess
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1289) 							.getName()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1290) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1291) 		}
                                                                                                                            1292)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1293) 		return true;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1294) 	}
                                                                                                                            1295)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1296) 	/*
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1297) 	 * Process the filters defined on the given class, as well as all filters defined
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1298) 	 * on the MappedSuperclass(s) in the inheritance hierarchy
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1299) 	 */
                                                                                                                            1300)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1301) 	private static void bindFilters(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1302) 			XClass annotatedClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1303) 			EntityBinder entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1304) 			MetadataBuildingContext context) {
                                                                                                                            1305)
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1306) 		bindFilters( annotatedClass, entityBinder );
                                                                                                                            1307)
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1308) 		XClass classToProcess = annotatedClass.getSuperclass();
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1309) 		while ( classToProcess != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1310) 			AnnotatedClassType classType = context.getMetadataCollector().getClassType( classToProcess );
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1311) 			if ( AnnotatedClassType.EMBEDDABLE_SUPERCLASS.equals( classType ) ) {
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1312) 				bindFilters( classToProcess, entityBinder );
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1313) 			}
83f29d1e1 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Maxim Frolov      2014-09-30 14:40:40 +0000 1314) 			else {
83f29d1e1 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Maxim Frolov      2014-09-30 14:40:40 +0000 1315) 				break;
83f29d1e1 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Maxim Frolov      2014-09-30 14:40:40 +0000 1316) 			}
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1317) 			classToProcess = classToProcess.getSuperclass();
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1318) 		}
                                                                                                                            1319)
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1320) 	}
                                                                                                                            1321)
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1322) 	private static void bindFilters(XAnnotatedElement annotatedElement, EntityBinder entityBinder) {
                                                                                                                            1323)
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1324) 		Filters filtersAnn = annotatedElement.getAnnotation( Filters.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1325) 		if ( filtersAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1326) 			for ( Filter filter : filtersAnn.value() ) {
05dcc209a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Rob Worsnop       2012-07-12 14:58:11 +0000 1327) 				entityBinder.addFilter(filter);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1328) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1329) 		}
                                                                                                                            1330)
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1331) 		Filter filterAnn = annotatedElement.getAnnotation( Filter.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1332) 		if ( filterAnn != null ) {
05dcc209a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Rob Worsnop       2012-07-12 14:58:11 +0000 1333) 			entityBinder.addFilter(filterAnn);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1334) 		}
a1e8d7cb0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-28 10:57:21 +0000 1335) 	}
                                                                                                                            1336)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1337) 	private static void bindFilterDefs(XAnnotatedElement annotatedElement, MetadataBuildingContext context) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1338) 		FilterDef defAnn = annotatedElement.getAnnotation( FilterDef.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1339) 		FilterDefs defsAnn = annotatedElement.getAnnotation( FilterDefs.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1340) 		if ( defAnn != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1341) 			bindFilterDef( defAnn, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1342) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1343) 		if ( defsAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1344) 			for ( FilterDef def : defsAnn.value() ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1345) 				bindFilterDef( def, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1346) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1347) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1348) 	}
                                                                                                                            1349)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1350) 	private static void bindFilterDef(FilterDef defAnn, MetadataBuildingContext context) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 1351) 		Map<String, org.hibernate.type.Type> params = new HashMap<>();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1352) 		for ( ParamDef param : defAnn.parameters() ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1353) 			params.put( param.name(), context.getMetadataCollector().getTypeResolver().heuristicType( param.type() ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1354) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1355) 		FilterDefinition def = new FilterDefinition( defAnn.name(), defAnn.defaultCondition(), params );
ad17f89c4 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2011-04-12 14:07:31 +0000 1356) 		LOG.debugf( "Binding filter definition: %s", def.getFilterName() );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1357) 		context.getMetadataCollector().addFilterDefinition( def );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1358) 	}
                                                                                                                            1359)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1360) 	private static void bindTypeDefs(XAnnotatedElement annotatedElement, MetadataBuildingContext context) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1361) 		TypeDef defAnn = annotatedElement.getAnnotation( TypeDef.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1362) 		TypeDefs defsAnn = annotatedElement.getAnnotation( TypeDefs.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1363) 		if ( defAnn != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1364) 			bindTypeDef( defAnn, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1365) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1366) 		if ( defsAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1367) 			for ( TypeDef def : defsAnn.value() ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1368) 				bindTypeDef( def, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1369) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1370) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1371) 	}
                                                                                                                            1372)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1373) 	private static void bindTypeDef(TypeDef defAnn, MetadataBuildingContext context) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1374) 		Properties params = new Properties();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1375) 		for ( Parameter param : defAnn.parameters() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1376) 			params.setProperty( param.name(), param.value() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1377) 		}
                                                                                                                            1378)
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 1379) 		if ( BinderHelper.isEmptyAnnotationValue( defAnn.name() ) && defAnn.defaultForType().equals( void.class ) ) {
d26c00225 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-21 17:16:57 +0000 1380) 			throw new AnnotationException(
d26c00225 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Sharath Reddy     2009-10-21 17:16:57 +0000 1381) 					"Either name or defaultForType (or both) attribute should be set in TypeDef having typeClass " +
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1382) 							defAnn.typeClass().getName()
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1383) 			);
c6a32b933 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-06 07:50:35 +0000 1384) 		}
                                                                                                                            1385)
ad17f89c4 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2011-04-12 14:07:31 +0000 1386) 		final String typeBindMessageF = "Binding type definition: %s";
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 1387) 		if ( !BinderHelper.isEmptyAnnotationValue( defAnn.name() ) ) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1388) 			if ( LOG.isDebugEnabled() ) {
ad17f89c4 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2011-04-12 14:07:31 +0000 1389) 				LOG.debugf( typeBindMessageF, defAnn.name() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1390) 			}
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1391) 			context.getMetadataCollector().addTypeDefinition(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1392) 					new TypeDefinition(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1393) 							defAnn.name(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1394) 							defAnn.typeClass(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1395) 							null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1396) 							params
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1397) 					)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1398) 			);
c6a32b933 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-06 07:50:35 +0000 1399) 		}
                                                                                                                            1400)
c6a32b933 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-06 07:50:35 +0000 1401) 		if ( !defAnn.defaultForType().equals( void.class ) ) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1402) 			if ( LOG.isDebugEnabled() ) {
ad17f89c4 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2011-04-12 14:07:31 +0000 1403) 				LOG.debugf( typeBindMessageF, defAnn.defaultForType().getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1404) 			}
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1405) 			context.getMetadataCollector().addTypeDefinition(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1406) 					new TypeDefinition(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1407) 							defAnn.defaultForType().getName(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1408) 							defAnn.typeClass(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1409) 							new String[]{ defAnn.defaultForType().getName() },
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1410) 							params
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1411) 					)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1412) 			);
c6a32b933 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-06 07:50:35 +0000 1413) 		}
                                                                                                                            1414)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1415) 	}
                                                                                                                            1416)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1417) 	private static void bindFetchProfiles(XAnnotatedElement annotatedElement, MetadataBuildingContext context) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1418) 		FetchProfile fetchProfileAnnotation = annotatedElement.getAnnotation( FetchProfile.class );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1419) 		FetchProfiles fetchProfileAnnotations = annotatedElement.getAnnotation( FetchProfiles.class );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1420) 		if ( fetchProfileAnnotation != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1421) 			bindFetchProfile( fetchProfileAnnotation, context );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1422) 		}
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1423) 		if ( fetchProfileAnnotations != null ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1424) 			for ( FetchProfile profile : fetchProfileAnnotations.value() ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1425) 				bindFetchProfile( profile, context );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1426) 			}
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1427) 		}
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1428) 	}
                                                                                                                            1429)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1430) 	private static void bindFetchProfile(FetchProfile fetchProfileAnnotation, MetadataBuildingContext context) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1431) 		for ( FetchProfile.FetchOverride fetch : fetchProfileAnnotation.fetchOverrides() ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1432) 			org.hibernate.annotations.FetchMode mode = fetch.mode();
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1433) 			if ( !mode.equals( org.hibernate.annotations.FetchMode.JOIN ) ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1434) 				throw new MappingException( "Only FetchMode.JOIN is currently supported" );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1435) 			}
                                                                                                                            1436)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1437) 			context.getMetadataCollector().addSecondPass(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1438) 					new VerifyFetchProfileReferenceSecondPass(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1439) 							fetchProfileAnnotation.name(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1440) 							fetch,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1441) 							context
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1442) 					)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1443) 			);
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1444) 		}
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1445) 	}
                                                                                                                            1446)
                                                                                                                            1447)
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 1448) 	private static void bindDiscriminatorColumnToRootPersistentClass(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1449) 			RootClass rootClass,
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 1450) 			Ejb3DiscriminatorColumn discriminatorColumn,
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 1451) 			Map<String, Join> secondaryTables,
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 1452) 			PropertyHolder propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1453) 			MetadataBuildingContext context) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1454) 		if ( rootClass.getDiscriminator() == null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1455) 			if ( discriminatorColumn == null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1456) 				throw new AssertionFailure( "discriminator column should have been built" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1457) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1458) 			discriminatorColumn.setJoins( secondaryTables );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1459) 			discriminatorColumn.setPropertyHolder( propertyHolder );
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 1460) 			SimpleValue discriminatorColumnBinding = new SimpleValue( context, rootClass.getTable() );
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 1461) 			rootClass.setDiscriminator( discriminatorColumnBinding );
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 1462) 			discriminatorColumn.linkWithValue( discriminatorColumnBinding );
5329bba1e hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-12-13 06:57:47 +0000 1463) 			discriminatorColumnBinding.setTypeName( discriminatorColumn.getDiscriminatorTypeName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1464) 			rootClass.setPolymorphic( true );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1465) 			if ( LOG.isTraceEnabled() ) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1466) 				LOG.tracev( "Setting discriminator for entity {0}", rootClass.getEntityName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1467) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1468) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1469) 	}
                                                                                                                            1470)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1471) 	/**
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 1472) 	 * @param elements List of {@code ProperyData} instances
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 1473) 	 * @param propertyContainer Metadata about a class and its properties
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1474) 	 *
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 1475) 	 * @return the number of id properties found while iterating the elements of {@code annotatedClass} using
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1476) 	 *         the determined access strategy, {@code false} otherwise.
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1477) 	 */
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1478) 	static int addElementsOfClass(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1479) 			List<PropertyData> elements,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1480) 			PropertyContainer propertyContainer,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1481) 			MetadataBuildingContext context) {
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1482) 		int idPropertyCounter = 0;
                                                                                                                            1483)
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 1484) 		Collection<XProperty> properties = propertyContainer.getProperties();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1485) 		for ( XProperty p : properties ) {
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1486) 			final int currentIdPropertyCounter = addProperty(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1487) 					propertyContainer,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1488) 					p,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1489) 					elements,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1490) 					context
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 1491) 			);
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1492) 			idPropertyCounter += currentIdPropertyCounter;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1493) 		}
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1494) 		return idPropertyCounter;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1495) 	}
                                                                                                                            1496)
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1497) 	private static int addProperty(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1498) 			PropertyContainer propertyContainer,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1499) 			XProperty property,
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1500) 			List<PropertyData> inFlightPropertyDataList,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1501) 			MetadataBuildingContext context) {
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1502) 		// see if inFlightPropertyDataList already contains a PropertyData for this name,
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1503) 		// and if so, skip it..
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1504) 		for ( PropertyData propertyData : inFlightPropertyDataList ) {
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1505) 			if ( propertyData.getPropertyName().equals( property.getName() ) ) {
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1506) 				// EARLY EXIT!!!
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1507) 				return 0;
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1508) 			}
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1509) 		}
                                                                                                                            1510)
6588ede3a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-19 18:57:19 +0000 1511) 		final XClass declaringClass = propertyContainer.getDeclaringClass();
6588ede3a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-19 18:57:19 +0000 1512) 		final XClass entity = propertyContainer.getEntityAtStake();
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1513) 		int idPropertyCounter = 0;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1514) 		PropertyData propertyAnnotatedElement = new PropertyInferredData(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1515) 				declaringClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1516) 				property,
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 1517) 				propertyContainer.getClassLevelAccessType().getType(),
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 1518) 				context.getBootstrapContext().getReflectionManager()
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1519) 		);
                                                                                                                            1520)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1521) 		/*
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1522) 		 * put element annotated by @Id in front
3a813dcbb hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Richard Bradley   2017-05-03 08:54:37 +0000 1523) 		 * since it has to be parsed before any association by Hibernate
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1524) 		 */
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1525) 		final XAnnotatedElement element = propertyAnnotatedElement.getProperty();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1526) 		if ( element.isAnnotationPresent( Id.class ) || element.isAnnotationPresent( EmbeddedId.class ) ) {
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1527) 			inFlightPropertyDataList.add( 0, propertyAnnotatedElement );
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1528) 			/**
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1529) 			 * The property must be put in hibernate.properties as it's a system wide property. Fixable?
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1530) 			 * TODO support true/false/default on the property instead of present / not present
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1531) 			 * TODO is @Column mandatory?
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1532) 			 * TODO add method support
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1533) 			 */
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1534) 			if ( context.getBuildingOptions().isSpecjProprietarySyntaxEnabled() ) {
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1535) 				if ( element.isAnnotationPresent( Id.class ) && element.isAnnotationPresent( Column.class ) ) {
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1536) 					String columnName = element.getAnnotation( Column.class ).name();
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1537) 					for ( XProperty prop : declaringClass.getDeclaredProperties( AccessType.FIELD.getType() ) ) {
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1538) 						if ( !prop.isAnnotationPresent( MapsId.class ) ) {
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1539) 							/**
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1540) 							 * The detection of a configured individual JoinColumn differs between Annotation
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1541) 							 * and XML configuration processing.
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1542) 							 */
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1543) 							boolean isRequiredAnnotationPresent = false;
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1544) 							JoinColumns groupAnnotation = prop.getAnnotation( JoinColumns.class );
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1545) 							if ( (prop.isAnnotationPresent( JoinColumn.class )
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1546) 									&& prop.getAnnotation( JoinColumn.class ).name().equals( columnName )) ) {
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1547) 								isRequiredAnnotationPresent = true;
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1548) 							}
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1549) 							else if ( prop.isAnnotationPresent( JoinColumns.class ) ) {
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1550) 								for ( JoinColumn columnAnnotation : groupAnnotation.value() ) {
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1551) 									if ( columnName.equals( columnAnnotation.name() ) ) {
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1552) 										isRequiredAnnotationPresent = true;
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1553) 										break;
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1554) 									}
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1555) 								}
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1556) 							}
961caf770 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Jeremy Whiting    2012-09-05 17:06:31 +0000 1557) 							if ( isRequiredAnnotationPresent ) {
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1558) 								//create a PropertyData fpr the specJ property holding the mapping
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1559) 								PropertyData specJPropertyData = new PropertyInferredData(
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1560) 										declaringClass,
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1561) 										//same dec
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1562) 										prop,
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1563) 										// the actual @XToOne property
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 1564) 										propertyContainer.getClassLevelAccessType().getType(),
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1565) 										//TODO we should get the right accessor but the same as id would do
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 1566) 										context.getBootstrapContext().getReflectionManager()
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1567) 								);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1568) 								context.getMetadataCollector().addPropertyAnnotatedWithMapsIdSpecj(
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1569) 										entity,
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1570) 										specJPropertyData,
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1571) 										element.toString()
6a48cccd5 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-09-05 17:34:03 +0000 1572) 								);
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1573) 							}
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1574) 						}
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1575) 					}
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1576) 				}
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 1577) 			}
                                                                                                                            1578)
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 1579) 			if ( element.isAnnotationPresent( ManyToOne.class ) || element.isAnnotationPresent( OneToOne.class ) ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1580) 				context.getMetadataCollector().addToOneAndIdProperty( entity, propertyAnnotatedElement );
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 1581) 			}
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1582) 			idPropertyCounter++;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1583) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1584) 		else {
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1585) 			inFlightPropertyDataList.add( propertyAnnotatedElement );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1586) 		}
6588ede3a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-19 18:57:19 +0000 1587) 		if ( element.isAnnotationPresent( MapsId.class ) ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1588) 			context.getMetadataCollector().addPropertyAnnotatedWithMapsId( entity, propertyAnnotatedElement );
6588ede3a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-19 18:57:19 +0000 1589) 		}
                                                                                                                            1590)
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1591) 		return idPropertyCounter;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1592) 	}
                                                                                                                            1593)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1594) 	/*
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1595) 	 * Process annotation of a particular property
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1596) 	 */
                                                                                                                            1597)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1598) 	private static void processElementAnnotations(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1599) 			PropertyHolder propertyHolder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1600) 			Nullability nullability,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1601) 			PropertyData inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1602) 			HashMap<String, IdentifierGeneratorDefinition> classGenerators,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1603) 			EntityBinder entityBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1604) 			boolean isIdentifierMapper,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1605) 			boolean isComponentEmbedded,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1606) 			boolean inSecondPass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1607) 			MetadataBuildingContext context,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 1608) 			Map<XClass, InheritanceState> inheritanceStatePerClass) throws MappingException {
                                                                                                                            1609)
62bfbf8bd hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2016-08-18 22:44:31 +0000 1610) 		if ( !propertyHolder.isComponent() ) {
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1611) 			if ( entityBinder.isPropertyDefinedInSuperHierarchy( inferredData.getPropertyName() ) ) {
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1612) 				LOG.debugf(
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1613) 						"Skipping attribute [%s : %s] as it was already processed as part of super hierarchy",
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1614) 						inferredData.getClassOrElementName(),
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1615) 						inferredData.getPropertyName()
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1616) 				);
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1617) 				return;
a5cbe326d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2016-02-22 22:36:05 +0000 1618) 			}
62bfbf8bd hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2016-08-18 22:44:31 +0000 1619) 		}
                                                                                                                            1620)
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1621) 		/**
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1622) 		 * inSecondPass can only be used to apply right away the second pass of a composite-element
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1623) 		 * Because it's a value type, there is no bidirectional association, hence second pass
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1624) 		 * ordering does not matter
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1625) 		 */
                                                                                                                            1626)
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1627) 		final boolean traceEnabled = LOG.isTraceEnabled();
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1628) 		if ( traceEnabled ) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1629) 			LOG.tracev( "Processing annotations of {0}.{1}" , propertyHolder.getEntityName(), inferredData.getPropertyName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1630) 		}
                                                                                                                            1631)
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 1632) 		final XProperty property = inferredData.getProperty();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1633) 		if ( property.isAnnotationPresent( Parent.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1634) 			if ( propertyHolder.isComponent() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1635) 				propertyHolder.setParentProperty( property.getName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1636) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1637) 			else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1638) 				throw new AnnotationException(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1639) 						"@Parent cannot be applied outside an embeddable object: "
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 1640) 								+ BinderHelper.getPath( propertyHolder, inferredData )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1641) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1642) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1643) 			return;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1644) 		}
                                                                                                                            1645)
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1646) 		ColumnsBuilder columnsBuilder = new ColumnsBuilder(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1647) 				propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1648) 				nullability,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1649) 				property,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1650) 				inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1651) 				entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1652) 				context
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1653) 		).extractMetadata();
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1654) 		Ejb3Column[] columns = columnsBuilder.getColumns();
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 1655) 		Ejb3JoinColumn[] joinColumns = columnsBuilder.getJoinColumns();
                                                                                                                            1656)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1657) 		final XClass returnedClass = inferredData.getClassOrElement();
                                                                                                                            1658)
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1659) 		//prepare PropertyBinder
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1660) 		PropertyBinder propertyBinder = new PropertyBinder();
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1661) 		propertyBinder.setName( inferredData.getPropertyName() );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1662) 		propertyBinder.setReturnedClassName( inferredData.getTypeName() );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1663) 		propertyBinder.setAccessType( inferredData.getDefaultAccess() );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1664) 		propertyBinder.setHolder( propertyHolder );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1665) 		propertyBinder.setProperty( property );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1666) 		propertyBinder.setReturnedClass( inferredData.getPropertyClass() );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1667) 		propertyBinder.setBuildingContext( context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1668) 		if ( isIdentifierMapper ) {
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1669) 			propertyBinder.setInsertable( false );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1670) 			propertyBinder.setUpdatable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1671) 		}
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1672) 		propertyBinder.setDeclaringClass( inferredData.getDeclaringClass() );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1673) 		propertyBinder.setEntityBinder( entityBinder );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1674) 		propertyBinder.setInheritanceStatePerClass( inheritanceStatePerClass );
                                                                                                                            1675)
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1676) 		boolean isId = !entityBinder.isIgnoreIdAnnotations() &&
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1677) 				( property.isAnnotationPresent( Id.class )
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1678) 						|| property.isAnnotationPresent( EmbeddedId.class ) );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1679) 		propertyBinder.setId( isId );
                                                                                                                            1680)
1e44e7420 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-16 21:43:11 +0000 1681) 		final LazyGroup lazyGroupAnnotation = property.getAnnotation( LazyGroup.class );
1e44e7420 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-16 21:43:11 +0000 1682) 		if ( lazyGroupAnnotation != null ) {
1e44e7420 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-16 21:43:11 +0000 1683) 			propertyBinder.setLazyGroup( lazyGroupAnnotation.value() );
1e44e7420 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-16 21:43:11 +0000 1684) 		}
                                                                                                                            1685)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1686) 		if ( property.isAnnotationPresent( Version.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1687) 			if ( isIdentifierMapper ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1688) 				throw new AnnotationException(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1689) 						"@IdClass class should not have @Version property"
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1690) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1691) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1692) 			if ( !( propertyHolder.getPersistentClass() instanceof RootClass ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1693) 				throw new AnnotationException(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1694) 						"Unable to define/override @Version on a subclass: "
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1695) 								+ propertyHolder.getEntityName()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1696) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1697) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1698) 			if ( !propertyHolder.isEntity() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1699) 				throw new AnnotationException(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1700) 						"Unable to define @Version on an embedded class: "
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1701) 								+ propertyHolder.getEntityName()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1702) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1703) 			}
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1704) 			if ( traceEnabled ) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1705) 				LOG.tracev( "{0} is a version property", inferredData.getPropertyName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1706) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1707) 			RootClass rootClass = ( RootClass ) propertyHolder.getPersistentClass();
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 1708) 			propertyBinder.setColumns( columns );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1709) 			Property prop = propertyBinder.makePropertyValueAndBind();
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 1710) 			setVersionInformation( property, propertyBinder );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1711) 			rootClass.setVersion( prop );
                                                                                                                            1712)
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1713) 			//If version is on a mapped superclass, update the mapping
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1714) 			final org.hibernate.mapping.MappedSuperclass superclass = BinderHelper.getMappedSuperclassOrNull(
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1715) 					inferredData.getDeclaringClass(),
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1716) 					inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1717) 					context
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1718) 			);
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1719) 			if ( superclass != null ) {
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1720) 				superclass.setDeclaredVersion( prop );
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1721) 			}
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1722) 			else {
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1723) 				//we know the property is on the actual entity
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1724) 				rootClass.setDeclaredVersion( prop );
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 1725) 			}
                                                                                                                            1726)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1727) 			SimpleValue simpleValue = ( SimpleValue ) prop.getValue();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1728) 			simpleValue.setNullValue( "undefined" );
b51164aef hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-26 23:50:39 +0000 1729) 			rootClass.setOptimisticLockStyle( OptimisticLockStyle.VERSION );
cbbadea53 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Nikolay Shestakov 2013-04-12 13:56:41 +0000 1730) 			if ( traceEnabled ) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1731) 				LOG.tracev( "Version name: {0}, unsavedValue: {1}", rootClass.getVersion().getName(),
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1732) 						( (SimpleValue) rootClass.getVersion().getValue() ).getNullValue() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 1733) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1734) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1735) 		else {
3d911bd65 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 13:22:43 +0000 1736) 			final boolean forcePersist = property.isAnnotationPresent( MapsId.class )
3d911bd65 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 13:22:43 +0000 1737) 					|| property.isAnnotationPresent( Id.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1738) 			if ( property.isAnnotationPresent( ManyToOne.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1739) 				ManyToOne ann = property.getAnnotation( ManyToOne.class );
                                                                                                                            1740)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1741) 				//check validity
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1742) 				if ( property.isAnnotationPresent( Column.class )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1743) 						|| property.isAnnotationPresent( Columns.class ) ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1744) 					throw new AnnotationException(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1745) 							"@Column(s) not allowed on a @ManyToOne property: "
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1746) 									+ BinderHelper.getPath( propertyHolder, inferredData )
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1747) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1748) 				}
                                                                                                                            1749)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1750) 				Cascade hibernateCascade = property.getAnnotation( Cascade.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1751) 				NotFound notFound = property.getAnnotation( NotFound.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1752) 				boolean ignoreNotFound = notFound != null && notFound.action().equals( NotFoundAction.IGNORE );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1753) 				OnDelete onDeleteAnn = property.getAnnotation( OnDelete.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1754) 				boolean onDeleteCascade = onDeleteAnn != null && OnDeleteAction.CASCADE.equals( onDeleteAnn.action() );
b1f925458 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-12 18:48:42 +0000 1755) 				JoinTable assocTable = propertyHolder.getJoinTable( property );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1756) 				if ( assocTable != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1757) 					Join join = propertyHolder.addJoin( assocTable, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1758) 					for ( Ejb3JoinColumn joinColumn : joinColumns ) {
1f9c157db hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-22 19:41:00 +0000 1759) 						joinColumn.setExplicitTableName( join.getTable().getName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1760) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1761) 				}
3d911bd65 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 13:22:43 +0000 1762) 				final boolean mandatory = !ann.optional() || forcePersist;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1763) 				bindManyToOne(
3d911bd65 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 13:22:43 +0000 1764) 						getCascadeStrategy( ann.cascade(), hibernateCascade, false, forcePersist ),
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1765) 						joinColumns,
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 1766) 						!mandatory,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1767) 						ignoreNotFound,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1768) 						onDeleteCascade,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1769) 						ToOneBinder.getTargetEntity( inferredData, context ),
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1770) 						propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1771) 						inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1772) 						false,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1773) 						isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1774) 						inSecondPass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1775) 						propertyBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1776) 						context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1777) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1778) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1779) 			else if ( property.isAnnotationPresent( OneToOne.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1780) 				OneToOne ann = property.getAnnotation( OneToOne.class );
                                                                                                                            1781)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1782) 				//check validity
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1783) 				if ( property.isAnnotationPresent( Column.class )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1784) 						|| property.isAnnotationPresent( Columns.class ) ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1785) 					throw new AnnotationException(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1786) 							"@Column(s) not allowed on a @OneToOne property: "
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1787) 									+ BinderHelper.getPath( propertyHolder, inferredData )
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1788) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1789) 				}
                                                                                                                            1790)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1791) 				//FIXME support a proper PKJCs
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1792) 				boolean trueOneToOne = property.isAnnotationPresent( PrimaryKeyJoinColumn.class )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1793) 						|| property.isAnnotationPresent( PrimaryKeyJoinColumns.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1794) 				Cascade hibernateCascade = property.getAnnotation( Cascade.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1795) 				NotFound notFound = property.getAnnotation( NotFound.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1796) 				boolean ignoreNotFound = notFound != null && notFound.action().equals( NotFoundAction.IGNORE );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1797) 				OnDelete onDeleteAnn = property.getAnnotation( OnDelete.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1798) 				boolean onDeleteCascade = onDeleteAnn != null && OnDeleteAction.CASCADE.equals( onDeleteAnn.action() );
b1f925458 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-12 18:48:42 +0000 1799) 				JoinTable assocTable = propertyHolder.getJoinTable( property );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1800) 				if ( assocTable != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1801) 					Join join = propertyHolder.addJoin( assocTable, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1802) 					for ( Ejb3JoinColumn joinColumn : joinColumns ) {
1f9c157db hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-22 19:41:00 +0000 1803) 						joinColumn.setExplicitTableName( join.getTable().getName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1804) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1805) 				}
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 1806) 				//MapsId means the columns belong to the pk => not null
c180d721c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Gail Badner       2011-10-12 08:59:08 +0000 1807) 				//@OneToOne with @PKJC can still be optional
c180d721c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Gail Badner       2011-10-12 08:59:08 +0000 1808) 				final boolean mandatory = !ann.optional() || forcePersist;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1809) 				bindOneToOne(
3d911bd65 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 13:22:43 +0000 1810) 						getCascadeStrategy( ann.cascade(), hibernateCascade, ann.orphanRemoval(), forcePersist ),
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1811) 						joinColumns,
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 1812) 						!mandatory,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1813) 						getFetchMode( ann.fetch() ),
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1814) 						ignoreNotFound, onDeleteCascade,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1815) 						ToOneBinder.getTargetEntity( inferredData, context ),
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1816) 						propertyHolder,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1817) 						inferredData,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1818) 						ann.mappedBy(),
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1819) 						trueOneToOne,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1820) 						isIdentifierMapper,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1821) 						inSecondPass,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 1822) 						propertyBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1823) 						context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1824) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1825) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1826) 			else if ( property.isAnnotationPresent( org.hibernate.annotations.Any.class ) ) {
                                                                                                                            1827)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1828) 				//check validity
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1829) 				if ( property.isAnnotationPresent( Column.class )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1830) 						|| property.isAnnotationPresent( Columns.class ) ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1831) 					throw new AnnotationException(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1832) 							"@Column(s) not allowed on a @Any property: "
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1833) 									+ BinderHelper.getPath( propertyHolder, inferredData )
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1834) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1835) 				}
                                                                                                                            1836)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1837) 				Cascade hibernateCascade = property.getAnnotation( Cascade.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1838) 				OnDelete onDeleteAnn = property.getAnnotation( OnDelete.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1839) 				boolean onDeleteCascade = onDeleteAnn != null && OnDeleteAction.CASCADE.equals( onDeleteAnn.action() );
b1f925458 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-12 18:48:42 +0000 1840) 				JoinTable assocTable = propertyHolder.getJoinTable( property );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1841) 				if ( assocTable != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1842) 					Join join = propertyHolder.addJoin( assocTable, false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1843) 					for ( Ejb3JoinColumn joinColumn : joinColumns ) {
1f9c157db hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-22 19:41:00 +0000 1844) 						joinColumn.setExplicitTableName( join.getTable().getName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1845) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1846) 				}
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1847) 				bindAny(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1848) 						getCascadeStrategy( null, hibernateCascade, false, forcePersist ),
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1849) 						//@Any has not cascade attribute
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1850) 						joinColumns,
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1851) 						onDeleteCascade,
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1852) 						nullability,
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1853) 						propertyHolder,
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1854) 						inferredData,
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1855) 						entityBinder,
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1856) 						isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1857) 						context
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1858) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1859) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1860) 			else if ( property.isAnnotationPresent( OneToMany.class )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1861) 					|| property.isAnnotationPresent( ManyToMany.class )
11668ca67 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-05-07 21:34:21 +0000 1862) 					|| property.isAnnotationPresent( ElementCollection.class )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1863) 					|| property.isAnnotationPresent( ManyToAny.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1864) 				OneToMany oneToManyAnn = property.getAnnotation( OneToMany.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1865) 				ManyToMany manyToManyAnn = property.getAnnotation( ManyToMany.class );
11668ca67 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-05-07 21:34:21 +0000 1866) 				ElementCollection elementCollectionAnn = property.getAnnotation( ElementCollection.class );
                                                                                                                            1867)
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1868) 				if ( ( oneToManyAnn != null || manyToManyAnn != null || elementCollectionAnn != null ) &&
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1869) 						isToManyAssociationWithinEmbeddableCollection(
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1870) 								propertyHolder ) ) {
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1871) 					throw new AnnotationException(
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1872) 							"@OneToMany, @ManyToMany or @ElementCollection cannot be used inside an @Embeddable that is also contained within an @ElementCollection: "
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1873) 									+ BinderHelper.getPath(
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1874) 									propertyHolder,
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1875) 									inferredData
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1876) 							)
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1877) 					);
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 1878) 				}
                                                                                                                            1879)
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1880) 				final IndexColumn indexColumn;
                                                                                                                            1881)
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1882) 				if ( property.isAnnotationPresent( OrderColumn.class ) ) {
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1883) 					indexColumn = IndexColumn.buildColumnFromAnnotation(
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1884) 							property.getAnnotation( OrderColumn.class ),
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1885) 							propertyHolder,
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1886) 							inferredData,
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1887) 							entityBinder.getSecondaryTables(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1888) 							context
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1889) 					);
54bc9fbf9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 17:26:33 +0000 1890) 					if ( property.isAnnotationPresent( ListIndexBase.class ) ) {
54bc9fbf9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 17:26:33 +0000 1891) 						indexColumn.setBase( ( property.getAnnotation( ListIndexBase.class ) ).value() );
54bc9fbf9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 17:26:33 +0000 1892) 					}
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1893) 				}
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1894) 				else {
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1895) 					//if @IndexColumn is not there, the generated IndexColumn is an implicit column and not used.
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1896) 					//so we can leave the legacy processing as the default
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1897) 					indexColumn = IndexColumn.buildColumnFromAnnotation(
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1898) 							property.getAnnotation( org.hibernate.annotations.IndexColumn.class ),
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1899) 							propertyHolder,
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1900) 							inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1901) 							context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1902) 					);
eeb136fa7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 20:40:50 +0000 1903) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1904) 				CollectionBinder collectionBinder = CollectionBinder.getCollectionBinder(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1905) 						propertyHolder.getEntityName(),
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1906) 						property,
43dd13073 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-04 18:50:45 +0000 1907) 						!indexColumn.isImplicit(),
36c135ab6 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-03-05 16:24:47 +0000 1908) 						property.isAnnotationPresent( MapKeyType.class ),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1909) 						context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1910) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1911) 				collectionBinder.setIndexColumn( indexColumn );
232a77e5d core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-26 21:00:47 +0000 1912) 				collectionBinder.setMapKey( property.getAnnotation( MapKey.class ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1913) 				collectionBinder.setPropertyName( inferredData.getPropertyName() );
                                                                                                                            1914)
33640ae2b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 21:25:12 +0000 1915) 				collectionBinder.setBatchSize( property.getAnnotation( BatchSize.class ) );
                                                                                                                            1916)
33640ae2b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 21:25:12 +0000 1917) 				collectionBinder.setJpaOrderBy( property.getAnnotation( javax.persistence.OrderBy.class ) );
33640ae2b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 21:25:12 +0000 1918) 				collectionBinder.setSqlOrderBy( property.getAnnotation( OrderBy.class ) );
                                                                                                                            1919)
33640ae2b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 21:25:12 +0000 1920) 				collectionBinder.setSort( property.getAnnotation( Sort.class ) );
33640ae2b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 21:25:12 +0000 1921) 				collectionBinder.setNaturalSort( property.getAnnotation( SortNatural.class ) );
33640ae2b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-04-10 21:25:12 +0000 1922) 				collectionBinder.setComparatorSort( property.getAnnotation( SortComparator.class ) );
                                                                                                                            1923)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1924) 				Cache cachAnn = property.getAnnotation( Cache.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1925) 				collectionBinder.setCache( cachAnn );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1926) 				collectionBinder.setPropertyHolder( propertyHolder );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1927) 				Cascade hibernateCascade = property.getAnnotation( Cascade.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1928) 				NotFound notFound = property.getAnnotation( NotFound.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1929) 				boolean ignoreNotFound = notFound != null && notFound.action().equals( NotFoundAction.IGNORE );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1930) 				collectionBinder.setIgnoreNotFound( ignoreNotFound );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1931) 				collectionBinder.setCollectionType( inferredData.getProperty().getElementClass() );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1932) 				collectionBinder.setBuildingContext( context );
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 1933) 				collectionBinder.setAccessType( inferredData.getDefaultAccess() );
                                                                                                                            1934)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 1935) 				Ejb3Column[] elementColumns;
8b061f993 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-07 13:56:47 +0000 1936) 				//do not use "element" if you are a JPA 2 @ElementCollection only for legacy Hibernate mappings
8b061f993 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-07 13:56:47 +0000 1937) 				boolean isJPA2ForValueMapping = property.isAnnotationPresent( ElementCollection.class );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1938) 				PropertyData virtualProperty = isJPA2ForValueMapping ? inferredData : new WrappedInferredData(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1939) 						inferredData, "element"
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 1940) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1941) 				if ( property.isAnnotationPresent( Column.class ) || property.isAnnotationPresent(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1942) 						Formula.class
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1943) 				) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1944) 					Column ann = property.getAnnotation( Column.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1945) 					Formula formulaAnn = property.getAnnotation( Formula.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1946) 					elementColumns = Ejb3Column.buildColumnFromAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1947) 							new Column[] { ann },
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1948) 							formulaAnn,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1949) 							nullability,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1950) 							propertyHolder,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1951) 							virtualProperty,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1952) 							entityBinder.getSecondaryTables(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1953) 							context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1954) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1955) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1956) 				else if ( property.isAnnotationPresent( Columns.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1957) 					Columns anns = property.getAnnotation( Columns.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1958) 					elementColumns = Ejb3Column.buildColumnFromAnnotation(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1959) 							anns.columns(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1960) 							null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1961) 							nullability,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1962) 							propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1963) 							virtualProperty,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1964) 							entityBinder.getSecondaryTables(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1965) 							context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1966) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1967) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1968) 				else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1969) 					elementColumns = Ejb3Column.buildColumnFromAnnotation(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1970) 							null,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1971) 							null,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1972) 							nullability,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1973) 							propertyHolder,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1974) 							virtualProperty,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1975) 							entityBinder.getSecondaryTables(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 1976) 							context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1977) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1978) 				}
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 1979) 				{
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 1980) 					Column[] keyColumns = null;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 1981) 					//JPA 2 has priority and has different default column values, differenciate legacy from JPA 2
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 1982) 					Boolean isJPA2 = null;
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 1983) 					if ( property.isAnnotationPresent( MapKeyColumn.class ) ) {
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 1984) 						isJPA2 = Boolean.TRUE;
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 1985) 						keyColumns = new Column[] { new MapKeyColumnDelegator( property.getAnnotation( MapKeyColumn.class ) ) };
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 1986) 					}
                                                                                                                            1987)
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 1988) 					//not explicitly legacy
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 1989) 					if ( isJPA2 == null ) {
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 1990) 						isJPA2 = Boolean.TRUE;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 1991) 					}
                                                                                                                            1992)
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 1993) 					//nullify empty array
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 1994) 					keyColumns = keyColumns != null && keyColumns.length > 0 ? keyColumns : null;
                                                                                                                            1995)
ef1cb9f06 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-04 16:47:08 +0000 1996) 					//"mapkey" is the legacy column name of the key column pre JPA 2
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1997) 					PropertyData mapKeyVirtualProperty = new WrappedInferredData( inferredData, "mapkey" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 1998) 					Ejb3Column[] mapColumns = Ejb3Column.buildColumnFromAnnotation(
20d22941c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-21 02:07:50 +0000 1999) 							keyColumns,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2000) 							null,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2001) 							Nullability.FORCED_NOT_NULL,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2002) 							propertyHolder,
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2003) 							isJPA2 ? inferredData : mapKeyVirtualProperty,
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2004) 							isJPA2 ? "_KEY" : null,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2005) 							entityBinder.getSecondaryTables(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2006) 							context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2007) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2008) 					collectionBinder.setMapKeyColumns( mapColumns );
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2009) 				}
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2010) 				{
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2011) 					JoinColumn[] joinKeyColumns = null;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2012) 					//JPA 2 has priority and has different default column values, differenciate legacy from JPA 2
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2013) 					Boolean isJPA2 = null;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2014) 					if ( property.isAnnotationPresent( MapKeyJoinColumns.class ) ) {
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2015) 						isJPA2 = Boolean.TRUE;
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2016) 						final MapKeyJoinColumn[] mapKeyJoinColumns = property.getAnnotation( MapKeyJoinColumns.class )
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2017) 								.value();
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2018) 						joinKeyColumns = new JoinColumn[mapKeyJoinColumns.length];
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2019) 						int index = 0;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2020) 						for ( MapKeyJoinColumn joinColumn : mapKeyJoinColumns ) {
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2021) 							joinKeyColumns[index] = new MapKeyJoinColumnDelegator( joinColumn );
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2022) 							index++;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2023) 						}
74df160f3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Emmanuel Bernard  2011-03-14 17:55:15 +0000 2024) 						if ( property.isAnnotationPresent( MapKeyJoinColumn.class ) ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2025) 							throw new AnnotationException(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2026) 									"@MapKeyJoinColumn and @MapKeyJoinColumns used on the same property: "
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2027) 											+ BinderHelper.getPath( propertyHolder, inferredData )
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2028) 							);
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2029) 						}
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2030) 					}
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2031) 					else if ( property.isAnnotationPresent( MapKeyJoinColumn.class ) ) {
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2032) 						isJPA2 = Boolean.TRUE;
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2033) 						joinKeyColumns = new JoinColumn[] {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2034) 								new MapKeyJoinColumnDelegator(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2035) 										property.getAnnotation(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2036) 												MapKeyJoinColumn.class
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2037) 										)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2038) 								)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2039) 						};
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2040) 					}
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2041) 					//not explicitly legacy
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2042) 					if ( isJPA2 == null ) {
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2043) 						isJPA2 = Boolean.TRUE;
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2044) 					}
                                                                                                                            2045)
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2046) 					PropertyData mapKeyVirtualProperty = new WrappedInferredData( inferredData, "mapkey" );
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2047) 					Ejb3JoinColumn[] mapJoinColumns = Ejb3JoinColumn.buildJoinColumnsWithDefaultColumnSuffix(
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2048) 							joinKeyColumns,
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2049) 							null,
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2050) 							entityBinder.getSecondaryTables(),
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2051) 							propertyHolder,
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2052) 							isJPA2 ? inferredData.getPropertyName() : mapKeyVirtualProperty.getPropertyName(),
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2053) 							isJPA2 ? "_KEY" : null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2054) 							context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2055) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2056) 					collectionBinder.setMapKeyManyToManyColumns( mapJoinColumns );
e093ee46c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-22 00:16:59 +0000 2057) 				}
                                                                                                                            2058)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2059) 				//potential element
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2060) 				collectionBinder.setEmbedded( property.isAnnotationPresent( Embedded.class ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2061) 				collectionBinder.setElementColumns( elementColumns );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2062) 				collectionBinder.setProperty( property );
                                                                                                                            2063)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2064) 				//TODO enhance exception with @ManyToAny and @CollectionOfElements
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2065) 				if ( oneToManyAnn != null && manyToManyAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2066) 					throw new AnnotationException(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2067) 							"@OneToMany and @ManyToMany on the same property is not allowed: "
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2068) 									+ propertyHolder.getEntityName() + "." + inferredData.getPropertyName()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2069) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2070) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2071) 				String mappedBy = null;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2072) 				if ( oneToManyAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2073) 					for ( Ejb3JoinColumn column : joinColumns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2074) 						if ( column.isSecondary() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2075) 							throw new NotYetImplementedException( "Collections having FK in secondary table" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2076) 						}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2077) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2078) 					collectionBinder.setFkJoinColumns( joinColumns );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2079) 					mappedBy = oneToManyAnn.mappedBy();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2080) 					collectionBinder.setTargetEntity(
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2081) 							context.getBootstrapContext().getReflectionManager().toXClass( oneToManyAnn.targetEntity() )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2082) 					);
165f2e5f7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2009-12-22 18:07:38 +0000 2083) 					collectionBinder.setCascadeStrategy(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2084) 							getCascadeStrategy(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2085) 									oneToManyAnn.cascade(), hibernateCascade, oneToManyAnn.orphanRemoval(), false
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2086) 							)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2087) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2088) 					collectionBinder.setOneToMany( true );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2089) 				}
ffb14b28b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2011-06-28 08:29:16 +0000 2090) 				else if ( elementCollectionAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2091) 					for ( Ejb3JoinColumn column : joinColumns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2092) 						if ( column.isSecondary() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2093) 							throw new NotYetImplementedException( "Collections having FK in secondary table" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2094) 						}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2095) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2096) 					collectionBinder.setFkJoinColumns( joinColumns );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2097) 					mappedBy = "";
ffb14b28b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2011-06-28 08:29:16 +0000 2098) 					final Class<?> targetElement = elementCollectionAnn.targetClass();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2099) 					collectionBinder.setTargetEntity(
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2100) 							context.getBootstrapContext().getReflectionManager().toXClass( targetElement )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2101) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2102) 					//collectionBinder.setCascadeStrategy( getCascadeStrategy( embeddedCollectionAnn.cascade(), hibernateCascade ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2103) 					collectionBinder.setOneToMany( true );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2104) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2105) 				else if ( manyToManyAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2106) 					mappedBy = manyToManyAnn.mappedBy();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2107) 					collectionBinder.setTargetEntity(
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2108) 							context.getBootstrapContext().getReflectionManager().toXClass( manyToManyAnn.targetEntity() )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2109) 					);
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2110) 					collectionBinder.setCascadeStrategy(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2111) 							getCascadeStrategy(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2112) 									manyToManyAnn.cascade(), hibernateCascade, false, false
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2113) 							)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2114) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2115) 					collectionBinder.setOneToMany( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2116) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2117) 				else if ( property.isAnnotationPresent( ManyToAny.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2118) 					mappedBy = "";
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2119) 					collectionBinder.setTargetEntity(
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2120) 							context.getBootstrapContext().getReflectionManager().toXClass( void.class )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2121) 					);
016a02ff5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-27 18:58:28 +0000 2122) 					collectionBinder.setCascadeStrategy( getCascadeStrategy( null, hibernateCascade, false, false ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2123) 					collectionBinder.setOneToMany( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2124) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2125) 				collectionBinder.setMappedBy( mappedBy );
                                                                                                                            2126)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2127) 				bindJoinedTableAssociation(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2128) 						property,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2129) 						context,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2130) 						entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2131) 						collectionBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2132) 						propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2133) 						inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2134) 						mappedBy
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2135) 				);
                                                                                                                            2136)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2137) 				OnDelete onDeleteAnn = property.getAnnotation( OnDelete.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2138) 				boolean onDeleteCascade = onDeleteAnn != null && OnDeleteAction.CASCADE.equals( onDeleteAnn.action() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2139) 				collectionBinder.setCascadeDeleteEnabled( onDeleteCascade );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2140) 				if ( isIdentifierMapper ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2141) 					collectionBinder.setInsertable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2142) 					collectionBinder.setUpdatable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2143) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2144) 				if ( property.isAnnotationPresent( CollectionId.class ) ) { //do not compute the generators unless necessary
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2145) 					HashMap<String, IdentifierGeneratorDefinition> localGenerators = ( HashMap<String, IdentifierGeneratorDefinition> ) classGenerators.clone();
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2146) 					localGenerators.putAll( buildGenerators( property, context ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2147) 					collectionBinder.setLocalGenerators( localGenerators );
                                                                                                                            2148)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2149) 				}
c7c6981a5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-28 18:14:25 +0000 2150) 				collectionBinder.setInheritanceStatePerClass( inheritanceStatePerClass );
c7c6981a5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-28 18:14:25 +0000 2151) 				collectionBinder.setDeclaringClass( inferredData.getDeclaringClass() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2152) 				collectionBinder.bind();
                                                                                                                            2153)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2154) 			}
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2155) 			//Either a regular property or a basic @Id or @EmbeddedId while not ignoring id annotations
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2156) 			else if ( !isId || !entityBinder.isIgnoreIdAnnotations() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2157) 				//define whether the type is a component or not
                                                                                                                            2158)
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2159) 				boolean isComponent = false;
                                                                                                                            2160)
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2161) 				//Overrides from @MapsId if needed
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2162) 				boolean isOverridden = false;
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2163) 				if ( isId || propertyHolder.isOrWithinEmbeddedId() || propertyHolder.isInIdClass() ) {
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2164) 					//the associated entity could be using an @IdClass making the overridden property a component
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2165) 					final PropertyData overridingProperty = BinderHelper.getPropertyOverriddenByMapperOrMapsId(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2166) 							isId,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2167) 							propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2168) 							property.getName(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2169) 							context
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2170) 					);
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2171) 					if ( overridingProperty != null ) {
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2172) 						isOverridden = true;
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2173) 						final InheritanceState state = inheritanceStatePerClass.get( overridingProperty.getClassOrElement() );
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2174) 						if ( state != null ) {
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2175) 							isComponent = isComponent || state.hasIdClassOrEmbeddedId();
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2176) 						}
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2177) 						//Get the new column
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2178) 						columns = columnsBuilder.overrideColumnFromMapperOrMapsIdProperty( isId );
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2179) 					}
01720257b annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 18:36:34 +0000 2180) 				}
                                                                                                                            2181)
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2182) 				isComponent = isComponent
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2183) 						|| property.isAnnotationPresent( Embedded.class )
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2184) 						|| property.isAnnotationPresent( EmbeddedId.class )
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2185) 						|| returnedClass.isAnnotationPresent( Embeddable.class );
                                                                                                                            2186)
                                                                                                                            2187)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2188) 				if ( isComponent ) {
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2189) 					String referencedEntityName = null;
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2190) 					if ( isOverridden ) {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2191) 						final PropertyData mapsIdProperty = BinderHelper.getPropertyOverriddenByMapperOrMapsId(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2192) 								isId, propertyHolder, property.getName(), context
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2193) 						);
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2194) 						referencedEntityName = mapsIdProperty.getClassOrElementName();
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2195) 					}
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 2196) 					AccessType propertyAccessor = entityBinder.getPropertyAccessor( property );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2197) 					propertyBinder = bindComponent(
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2198) 							inferredData,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2199) 							propertyHolder,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2200) 							propertyAccessor,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2201) 							entityBinder,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2202) 							isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2203) 							context,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2204) 							isComponentEmbedded,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2205) 							isId,
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2206) 							inheritanceStatePerClass,
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2207) 							referencedEntityName,
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2208) 							isOverridden ? ( Ejb3JoinColumn[] ) columns : null
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2209) 					);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2210) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2211) 				else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2212) 					//provide the basic property mapping
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2213) 					boolean optional = true;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2214) 					boolean lazy = false;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2215) 					if ( property.isAnnotationPresent( Basic.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2216) 						Basic ann = property.getAnnotation( Basic.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2217) 						optional = ann.optional();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2218) 						lazy = ann.fetch() == FetchType.LAZY;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2219) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2220) 					//implicit type will check basic types and Serializable classes
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2221) 					if ( isId || ( !optional && nullability != Nullability.FORCED_NULL ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2222) 						//force columns to not null
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2223) 						for ( Ejb3Column col : columns ) {
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2224) 							if ( isId && col.isFormula() ) {
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2225) 								throw new CannotForceNonNullableException(
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2226) 										String.format(
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2227) 												Locale.ROOT,
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2228) 												"Identifier property [%s] cannot contain formula mapping [%s]",
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2229) 												HCANNHelper.annotatedElementSignature( property ),
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2230) 												col.getFormulaString()
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2231) 										)
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2232) 								);
8fd64a3b8 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-06 22:51:30 +0000 2233) 							}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2234) 							col.forceNotNull();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2235) 						}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2236) 					}
                                                                                                                            2237)
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2238) 					propertyBinder.setLazy( lazy );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 2239) 					propertyBinder.setColumns( columns );
66072429f annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-27 18:46:51 +0000 2240) 					if ( isOverridden ) {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2241) 						final PropertyData mapsIdProperty = BinderHelper.getPropertyOverriddenByMapperOrMapsId(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2242) 								isId, propertyHolder, property.getName(), context
66072429f annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-27 18:46:51 +0000 2243) 						);
66072429f annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-27 18:46:51 +0000 2244) 						propertyBinder.setReferencedEntityName( mapsIdProperty.getClassOrElementName() );
66072429f annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-27 18:46:51 +0000 2245) 					}
                                                                                                                            2246)
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2247) 					propertyBinder.makePropertyValueAndBind();
                                                                                                                            2248)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2249) 				}
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2250) 				if ( isOverridden ) {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2251) 					final PropertyData mapsIdProperty = BinderHelper.getPropertyOverriddenByMapperOrMapsId(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2252) 							isId, propertyHolder, property.getName(), context
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2253) 					);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2254) 					final IdentifierGeneratorDefinition.Builder foreignGeneratorBuilder = new IdentifierGeneratorDefinition.Builder();
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2255) 					foreignGeneratorBuilder.setName( "Hibernate-local--foreign generator" );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2256) 					foreignGeneratorBuilder.setStrategy( "foreign" );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2257) 					foreignGeneratorBuilder.addParam( "property", mapsIdProperty.getPropertyName() );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2258) 					final IdentifierGeneratorDefinition foreignGenerator = foreignGeneratorBuilder.build();
                                                                                                                            2259)
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2260) 					if ( isGlobalGeneratorNameGlobal( context ) ) {
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2261) 						SecondPass secondPass = new IdGeneratorResolverSecondPass(
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2262) 								(SimpleValue) propertyBinder.getValue(),
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2263) 								property,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2264) 								foreignGenerator.getStrategy(),
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2265) 								foreignGenerator.getName(),
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2266) 								context,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2267) 								foreignGenerator
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2268) 						);
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2269) 						context.getMetadataCollector().addSecondPass( secondPass );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2270) 					}
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2271) 					else {
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2272) 						Map<String, IdentifierGeneratorDefinition> localGenerators = (HashMap<String, IdentifierGeneratorDefinition>) classGenerators
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2273) 								.clone();
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2274) 						localGenerators.put( foreignGenerator.getName(), foreignGenerator );
                                                                                                                            2275)
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2276) 						BinderHelper.makeIdGenerator(
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2277) 								(SimpleValue) propertyBinder.getValue(),
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2278) 								property,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2279) 								foreignGenerator.getStrategy(),
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2280) 								foreignGenerator.getName(),
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2281) 								context,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2282) 								localGenerators
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2283) 						);
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2284) 					}
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2285) 				}
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2286) 				if ( isId ) {
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2287) 					//components and regular basic types create SimpleValue objects
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2288) 					final SimpleValue value = ( SimpleValue ) propertyBinder.getValue();
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2289) 					if ( !isOverridden ) {
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 2290) 						processId(
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 2291) 								propertyHolder,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2292) 								inferredData,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2293) 								value,
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 2294) 								classGenerators,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2295) 								isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2296) 								context
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 2297) 						);
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2298) 					}
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2299) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2300) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2301) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2302) 		//init index
3a813dcbb hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Richard Bradley   2017-05-03 08:54:37 +0000 2303) 		//process indexes after everything: in second pass, many to one has to be done before indexes
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2304) 		Index index = property.getAnnotation( Index.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2305) 		if ( index != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2306) 			if ( joinColumns != null ) {
                                                                                                                            2307)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2308) 				for ( Ejb3Column column : joinColumns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2309) 					column.addIndex( index, inSecondPass );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2310) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2311) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2312) 			else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2313) 				if ( columns != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2314) 					for ( Ejb3Column column : columns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2315) 						column.addIndex( index, inSecondPass );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2316) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2317) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2318) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2319) 		}
                                                                                                                            2320)
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 2321) 		// Natural ID columns must reside in one single UniqueKey within the Table.
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 2322) 		// For now, simply ensure consistent naming.
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 2323) 		// TODO: AFAIK, there really isn't a reason for these UKs to be created
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 2324) 		// on the secondPass.  This whole area should go away...
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2325) 		NaturalId naturalIdAnn = property.getAnnotation( NaturalId.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2326) 		if ( naturalIdAnn != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2327) 			if ( joinColumns != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2328) 				for ( Ejb3Column column : joinColumns ) {
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 2329) 					String keyName = "UK_" + Constraint.hashedName( column.getTable().getName() + "_NaturalID" );
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 2330) 					column.addUniqueKey( keyName, inSecondPass );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2331) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2332) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2333) 			else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2334) 				for ( Ejb3Column column : columns ) {
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 2335) 					String keyName = "UK_" + Constraint.hashedName( column.getTable().getName() + "_NaturalID" );
9030fa015 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-05-07 16:36:54 +0000 2336) 					column.addUniqueKey( keyName, inSecondPass );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2337) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2338) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2339) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2340) 	}
                                                                                                                            2341)
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2342) 	private static boolean isGlobalGeneratorNameGlobal(MetadataBuildingContext context) {
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2343) 		return context.getBootstrapContext().getJpaCompliance().isGlobalGeneratorScopeEnabled();
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2344) 	}
                                                                                                                            2345)
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 2346) 	private static boolean isToManyAssociationWithinEmbeddableCollection(PropertyHolder propertyHolder) {
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 2347) 		if(propertyHolder instanceof ComponentPropertyHolder) {
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 2348) 			ComponentPropertyHolder componentPropertyHolder = (ComponentPropertyHolder) propertyHolder;
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 2349) 			return componentPropertyHolder.isWithinElementCollection();
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 2350) 		}
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 2351) 		return false;
b1c761590 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Vlad Mihalcea     2016-12-06 12:50:52 +0000 2352) 	}
                                                                                                                            2353)
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2354) 	private static void setVersionInformation(XProperty property, PropertyBinder propertyBinder) {
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 2355) 		propertyBinder.getSimpleValueBinder().setVersion( true );
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2356) 		if(property.isAnnotationPresent( Source.class )) {
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2357) 			Source source = property.getAnnotation( Source.class );
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2358) 			propertyBinder.getSimpleValueBinder().setTimestampVersionType( source.value().typeName() );
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2359) 		}
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2360) 	}
                                                                                                                            2361)
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2362) 	private static void processId(
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2363) 			PropertyHolder propertyHolder,
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2364) 			PropertyData inferredData,
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2365) 			SimpleValue idValue,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2366) 			HashMap<String, IdentifierGeneratorDefinition> classGenerators,
7c72886f6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 17:15:37 +0000 2367) 			boolean isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2368) 			MetadataBuildingContext buildingContext) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2369) 		if ( isIdentifierMapper ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2370) 			throw new AnnotationException(
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 2371) 					"@IdClass class should not have @Id nor @EmbeddedId properties: "
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 2372) 							+ BinderHelper.getPath( propertyHolder, inferredData )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2373) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2374) 		}
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2375) 		XClass entityXClass = inferredData.getClassOrElement();
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2376) 		XProperty idXProperty = inferredData.getProperty();
                                                                                                                            2377)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2378) 		//manage composite related metadata
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2379) 		//guess if its a component and find id data access (property, field etc)
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2380) 		final boolean isComponent = entityXClass.isAnnotationPresent( Embeddable.class )
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2381) 				|| idXProperty.isAnnotationPresent( EmbeddedId.class );
                                                                                                                            2382)
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2383) 		GeneratedValue generatedValue = idXProperty.getAnnotation( GeneratedValue.class );
7a1c15509 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-21 19:45:44 +0000 2384) 		String generatorType = generatedValue != null
99428251c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2385) 				? generatorType( generatedValue, buildingContext, entityXClass )
7a1c15509 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-21 19:45:44 +0000 2386) 				: "assigned";
7a1c15509 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-21 19:45:44 +0000 2387) 		String generatorName = generatedValue != null
7a1c15509 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-21 19:45:44 +0000 2388) 				? generatedValue.generator()
7a1c15509 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-21 19:45:44 +0000 2389) 				: BinderHelper.ANNOTATION_STRING_DEFAULT;
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2390) 		if ( isComponent ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2391) 			//a component must not have any generator
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2392) 			generatorType = "assigned";
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2393) 		}
                                                                                                                            2394)
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2395) 		if ( isGlobalGeneratorNameGlobal( buildingContext ) ) {
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2396) 			buildGenerators( idXProperty, buildingContext );
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2397) 			SecondPass secondPass = new IdGeneratorResolverSecondPass(
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2398) 					idValue,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2399) 					idXProperty,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2400) 					generatorType,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2401) 					generatorName,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2402) 					buildingContext
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2403) 			);
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2404) 			buildingContext.getMetadataCollector().addSecondPass( secondPass );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2405) 		}
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2406) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2407) 			//clone classGenerator and override with local values
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2408) 			HashMap<String, IdentifierGeneratorDefinition> localGenerators = (HashMap<String, IdentifierGeneratorDefinition>) classGenerators
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2409) 					.clone();
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2410) 			localGenerators.putAll( buildGenerators( idXProperty, buildingContext ) );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2411) 			BinderHelper.makeIdGenerator(
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2412) 					idValue,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2413) 					idXProperty,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2414) 					generatorType,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2415) 					generatorName,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2416) 					buildingContext,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2417) 					localGenerators
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2418) 			);
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2419) 		}
                                                                                                                            2420)
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 2421) 		if ( LOG.isTraceEnabled() ) {
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 2422) 			LOG.tracev( "Bind {0} on {1}", ( isComponent ? "@EmbeddedId" : "@Id" ), inferredData.getPropertyName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 2423) 		}
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 2424) 	}
                                                                                                                            2425)
9a75fa8d9 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2426) 	public static String generatorType(
99428251c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2427) 			GeneratedValue generatedValueAnn,
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2428) 			final MetadataBuildingContext buildingContext,
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2429) 			final XClass javaTypeXClass) {
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2430) 		return buildingContext.getBuildingOptions().getIdGenerationTypeInterpreter().determineGeneratorName(
99428251c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2431) 				generatedValueAnn.strategy(),
1f50efa34 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-27 03:54:01 +0000 2432) 				new IdGeneratorStrategyInterpreter.GeneratorNameDeterminationContext() {
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2433) 					Class javaType = null;
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2434) 					@Override
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2435) 					public Class getIdType() {
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2436) 						if ( javaType == null ) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2437) 							javaType = buildingContext
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2438) 									.getBootstrapContext()
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2439) 									.getReflectionManager()
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2440) 									.toClass( javaTypeXClass );
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2441) 						}
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2442) 						return javaType;
5d365cfa0 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-26 21:18:40 +0000 2443) 					}
                                                                                                                            2444)
99428251c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2445) 					@Override
99428251c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2446) 					public String getGeneratedValueGeneratorName() {
99428251c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2447) 						return generatedValueAnn.generator();
99428251c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2448) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2449) 				}
4ec26fa4c annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-01-27 08:00:27 +0000 2450) 		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2451) 	}
                                                                                                                            2452)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2453) 	//TODO move that to collection binder?
                                                                                                                            2454)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2455) 	private static void bindJoinedTableAssociation(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2456) 			XProperty property,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2457) 			MetadataBuildingContext buildingContext,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2458) 			EntityBinder entityBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2459) 			CollectionBinder collectionBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2460) 			PropertyHolder propertyHolder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2461) 			PropertyData inferredData,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2462) 			String mappedBy) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2463) 		TableBinder associationTableBinder = new TableBinder();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2464) 		JoinColumn[] annJoins;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2465) 		JoinColumn[] annInverseJoins;
b1f925458 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-12 18:48:42 +0000 2466) 		JoinTable assocTable = propertyHolder.getJoinTable( property );
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2467) 		CollectionTable collectionTable = property.getAnnotation( CollectionTable.class );
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2468) 		if ( assocTable != null || collectionTable != null ) {
                                                                                                                            2469)
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2470) 			final String catalog;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2471) 			final String schema;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2472) 			final String tableName;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2473) 			final UniqueConstraint[] uniqueConstraints;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2474) 			final JoinColumn[] joins;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2475) 			final JoinColumn[] inverseJoins;
3335710a3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-27 16:20:51 +0000 2476) 			final javax.persistence.Index[] jpaIndexes;
                                                                                                                            2477)
                                                                                                                            2478)
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2479) 			//JPA 2 has priority
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2480) 			if ( collectionTable != null ) {
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2481) 				catalog = collectionTable.catalog();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2482) 				schema = collectionTable.schema();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2483) 				tableName = collectionTable.name();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2484) 				uniqueConstraints = collectionTable.uniqueConstraints();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2485) 				joins = collectionTable.joinColumns();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2486) 				inverseJoins = null;
3335710a3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-27 16:20:51 +0000 2487) 				jpaIndexes = collectionTable.indexes();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2488) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2489) 			else {
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2490) 				catalog = assocTable.catalog();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2491) 				schema = assocTable.schema();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2492) 				tableName = assocTable.name();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2493) 				uniqueConstraints = assocTable.uniqueConstraints();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2494) 				joins = assocTable.joinColumns();
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2495) 				inverseJoins = assocTable.inverseJoinColumns();
3335710a3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-27 16:20:51 +0000 2496) 				jpaIndexes = assocTable.indexes();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2497) 			}
                                                                                                                            2498)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2499) 			collectionBinder.setExplicitAssociationTable( true );
3335710a3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-27 16:20:51 +0000 2500) 			if ( jpaIndexes != null && jpaIndexes.length > 0 ) {
3335710a3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-27 16:20:51 +0000 2501) 				associationTableBinder.setJpaIndex( jpaIndexes );
3335710a3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-27 16:20:51 +0000 2502) 			}
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2503) 			if ( !BinderHelper.isEmptyAnnotationValue( schema ) ) {
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2504) 				associationTableBinder.setSchema( schema );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2505) 			}
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2506) 			if ( !BinderHelper.isEmptyAnnotationValue( catalog ) ) {
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2507) 				associationTableBinder.setCatalog( catalog );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2508) 			}
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 2509) 			if ( !BinderHelper.isEmptyAnnotationValue( tableName ) ) {
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2510) 				associationTableBinder.setName( tableName );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2511) 			}
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2512) 			associationTableBinder.setUniqueConstraints( uniqueConstraints );
3335710a3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2013-02-27 16:20:51 +0000 2513) 			associationTableBinder.setJpaIndex( jpaIndexes );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2514) 			//set check constaint in the second pass
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2515) 			annJoins = joins.length == 0 ? null : joins;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2516) 			annInverseJoins = inverseJoins == null || inverseJoins.length == 0 ? null : inverseJoins;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2517) 		}
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2518) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2519) 			annJoins = null;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2520) 			annInverseJoins = null;
d9a1022f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-07-20 23:24:38 +0000 2521) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2522) 		Ejb3JoinColumn[] joinColumns = Ejb3JoinColumn.buildJoinTableJoinColumns(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2523) 				annJoins,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2524) 				entityBinder.getSecondaryTables(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2525) 				propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2526) 				inferredData.getPropertyName(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2527) 				mappedBy,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2528) 				buildingContext
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2529) 		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2530) 		Ejb3JoinColumn[] inverseJoinColumns = Ejb3JoinColumn.buildJoinTableJoinColumns(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2531) 				annInverseJoins,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2532) 				entityBinder.getSecondaryTables(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2533) 				propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2534) 				inferredData.getPropertyName(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2535) 				mappedBy,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2536) 				buildingContext
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2537) 		);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2538) 		associationTableBinder.setBuildingContext( buildingContext );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2539) 		collectionBinder.setTableBinder( associationTableBinder );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2540) 		collectionBinder.setJoinColumns( joinColumns );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2541) 		collectionBinder.setInverseJoinColumns( inverseJoinColumns );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2542) 	}
                                                                                                                            2543)
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2544) 	private static PropertyBinder bindComponent(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2545) 			PropertyData inferredData,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2546) 			PropertyHolder propertyHolder,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2547) 			AccessType propertyAccessor,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2548) 			EntityBinder entityBinder,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2549) 			boolean isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2550) 			MetadataBuildingContext buildingContext,
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2551) 			boolean isComponentEmbedded,
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2552) 			boolean isId, //is a identifier
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2553) 			Map<XClass, InheritanceState> inheritanceStatePerClass,
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2554) 			String referencedEntityName, //is a component who is overridden by a @MapsId
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2555) 			Ejb3JoinColumn[] columns) {
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2556) 		Component comp;
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2557) 		if ( referencedEntityName != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2558) 			comp = createComponent( propertyHolder, inferredData, isComponentEmbedded, isIdentifierMapper, buildingContext );
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2559) 			SecondPass sp = new CopyIdentifierComponentSecondPass(
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2560) 					comp,
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2561) 					referencedEntityName,
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2562) 					columns,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2563) 					buildingContext
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2564) 			);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2565) 			buildingContext.getMetadataCollector().addSecondPass( sp );
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2566) 		}
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2567) 		else {
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2568) 			comp = fillComponent(
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2569) 					propertyHolder, inferredData, propertyAccessor, !isId, entityBinder,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2570) 					isComponentEmbedded, isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2571) 					false, buildingContext, inheritanceStatePerClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2572) 			);
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 2573) 		}
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2574) 		if ( isId ) {
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2575) 			comp.setKey( true );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2576) 			if ( propertyHolder.getPersistentClass().getIdentifier() != null ) {
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2577) 				throw new AnnotationException(
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2578) 						comp.getComponentClassName()
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2579) 								+ " must not have @Id properties when used as an @EmbeddedId: "
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2580) 								+ BinderHelper.getPath( propertyHolder, inferredData )
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2581) 				);
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2582) 			}
9f85525e4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 13:26:07 +0000 2583) 			if ( referencedEntityName == null && comp.getPropertySpan() == 0 ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2584) 				throw new AnnotationException(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2585) 						comp.getComponentClassName()
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2586) 								+ " has no persistent id property: "
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2587) 								+ BinderHelper.getPath( propertyHolder, inferredData )
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2588) 				);
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2589) 			}
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2590) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2591) 		XProperty property = inferredData.getProperty();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2592) 		setupComponentTuplizer( property, comp );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2593) 		PropertyBinder binder = new PropertyBinder();
25d8a66ac hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Hardy Ferentschik 2015-10-28 18:26:06 +0000 2594) 		binder.setDeclaringClass(inferredData.getDeclaringClass());
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2595) 		binder.setName( inferredData.getPropertyName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2596) 		binder.setValue( comp );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2597) 		binder.setProperty( inferredData.getProperty() );
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 2598) 		binder.setAccessType( inferredData.getDefaultAccess() );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2599) 		binder.setEmbedded( isComponentEmbedded );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2600) 		binder.setHolder( propertyHolder );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2601) 		binder.setId( isId );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 2602) 		binder.setEntityBinder( entityBinder );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2603) 		binder.setInheritanceStatePerClass( inheritanceStatePerClass );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2604) 		binder.setBuildingContext( buildingContext );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2605) 		binder.makePropertyAndBind();
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2606) 		return binder;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2607) 	}
                                                                                                                            2608)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2609) 	public static Component fillComponent(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2610) 			PropertyHolder propertyHolder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2611) 			PropertyData inferredData,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2612) 			AccessType propertyAccessor,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2613) 			boolean isNullable,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2614) 			EntityBinder entityBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2615) 			boolean isComponentEmbedded,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2616) 			boolean isIdentifierMapper,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2617) 			boolean inSecondPass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2618) 			MetadataBuildingContext buildingContext,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2619) 			Map<XClass, InheritanceState> inheritanceStatePerClass) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2620) 		return fillComponent(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2621) 				propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2622) 				inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2623) 				null,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2624) 				propertyAccessor,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2625) 				isNullable,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2626) 				entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2627) 				isComponentEmbedded,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2628) 				isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2629) 				inSecondPass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2630) 				buildingContext,
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2631) 				inheritanceStatePerClass
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2632) 		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2633) 	}
                                                                                                                            2634)
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2635) 	public static Component fillComponent(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2636) 			PropertyHolder propertyHolder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2637) 			PropertyData inferredData,
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2638) 			PropertyData baseInferredData, //base inferred data correspond to the entity reproducing inferredData's properties (ie IdClass)
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2639) 			AccessType propertyAccessor,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2640) 			boolean isNullable,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2641) 			EntityBinder entityBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2642) 			boolean isComponentEmbedded,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2643) 			boolean isIdentifierMapper,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2644) 			boolean inSecondPass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2645) 			MetadataBuildingContext buildingContext,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2646) 			Map<XClass, InheritanceState> inheritanceStatePerClass) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2647) 		/**
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2648) 		 * inSecondPass can only be used to apply right away the second pass of a composite-element
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2649) 		 * Because it's a value type, there is no bidirectional association, hence second pass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2650) 		 * ordering does not matter
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2651) 		 */
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2652) 		Component comp = createComponent( propertyHolder, inferredData, isComponentEmbedded, isIdentifierMapper, buildingContext );
174a568f8 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 13:16:05 +0000 2653) 		String subpath = BinderHelper.getPath( propertyHolder, inferredData );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 2654) 		LOG.tracev( "Binding component with path: {0}", subpath );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2655) 		PropertyHolder subHolder = PropertyHolderBuilder.buildPropertyHolder(
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 2656) 				comp,
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 2657) 				subpath,
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 2658) 				inferredData,
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 2659) 				propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2660) 				buildingContext
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2661) 		);
                                                                                                                            2662)
                                                                                                                            2663)
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 2664) 		// propertyHolder here is the owner of the component property.  Tell it we are about to start the component...
                                                                                                                            2665)
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 2666) 		propertyHolder.startingProperty( inferredData.getProperty() );
                                                                                                                            2667)
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2668) 		final XClass xClassProcessed = inferredData.getPropertyClass();
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2669) 		List<PropertyData> classElements = new ArrayList<>();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2670) 		XClass returnedClassOrElement = inferredData.getClassOrElement();
                                                                                                                            2671)
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2672) 		List<PropertyData> baseClassElements = null;
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2673) 		Map<String, PropertyData> orderedBaseClassElements = new HashMap<>();
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2674) 		XClass baseReturnedClassOrElement;
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2675) 		if ( baseInferredData != null ) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2676) 			baseClassElements = new ArrayList<>();
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2677) 			baseReturnedClassOrElement = baseInferredData.getClassOrElement();
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2678) 			bindTypeDefs( baseReturnedClassOrElement, buildingContext );
761ea6c94 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Chris Cranford    2017-02-28 16:21:18 +0000 2679) 			// iterate from base returned class up hierarchy to handle cases where the @Id attributes
761ea6c94 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Chris Cranford    2017-02-28 16:21:18 +0000 2680) 			// might be spread across the subclasses and super classes.
761ea6c94 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Chris Cranford    2017-02-28 16:21:18 +0000 2681) 			while ( !Object.class.getName().equals( baseReturnedClassOrElement.getName() ) ) {
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2682) 				PropertyContainer propContainer = new PropertyContainer( baseReturnedClassOrElement, xClassProcessed, propertyAccessor );
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2683) 				addElementsOfClass( baseClassElements,  propContainer, buildingContext );
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2684) 				for ( PropertyData element : baseClassElements ) {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2685) 					orderedBaseClassElements.put( element.getPropertyName(), element );
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2686) 				}
761ea6c94 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Chris Cranford    2017-02-28 16:21:18 +0000 2687) 				baseReturnedClassOrElement = baseReturnedClassOrElement.getSuperclass();
761ea6c94 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Chris Cranford    2017-02-28 16:21:18 +0000 2688) 			}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2689) 		}
                                                                                                                            2690)
8cc9e9d5f annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-09-22 17:43:48 +0000 2691) 		//embeddable elements can have type defs
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2692) 		bindTypeDefs( returnedClassOrElement, buildingContext );
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2693) 		PropertyContainer propContainer = new PropertyContainer( returnedClassOrElement, xClassProcessed, propertyAccessor );
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2694) 		addElementsOfClass( classElements, propContainer, buildingContext );
                                                                                                                            2695)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2696) 		//add elements of the embeddable superclass
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2697) 		XClass superClass = xClassProcessed.getSuperclass();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2698) 		while ( superClass != null && superClass.isAnnotationPresent( MappedSuperclass.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2699) 			//FIXME: proper support of typevariables incl var resolved at upper levels
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2700) 			propContainer = new PropertyContainer( superClass, xClassProcessed, propertyAccessor );
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2701) 			addElementsOfClass( classElements, propContainer, buildingContext );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2702) 			superClass = superClass.getSuperclass();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2703) 		}
c7c6981a5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-28 18:14:25 +0000 2704) 		if ( baseClassElements != null ) {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2705) 			//useful to avoid breaking pre JPA 2 mappings
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2706) 			if ( !hasAnnotationsOnIdClass( xClassProcessed ) ) {
c7c6981a5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-28 18:14:25 +0000 2707) 				for ( int i = 0; i < classElements.size(); i++ ) {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2708) 					final PropertyData idClassPropertyData = classElements.get( i );
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2709) 					final PropertyData entityPropertyData = orderedBaseClassElements.get( idClassPropertyData.getPropertyName() );
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2710) 					if ( propertyHolder.isInIdClass() ) {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2711) 						if ( entityPropertyData == null ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2712) 							throw new AnnotationException(
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2713) 									"Property of @IdClass not found in entity "
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2714) 											+ baseInferredData.getPropertyClass().getName() + ": "
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2715) 											+ idClassPropertyData.getPropertyName()
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2716) 							);
5ad11ba2a annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 14:37:34 +0000 2717) 						}
737379690 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 19:14:29 +0000 2718) 						final boolean hasXToOneAnnotation = entityPropertyData.getProperty()
737379690 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 19:14:29 +0000 2719) 								.isAnnotationPresent( ManyToOne.class )
737379690 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 19:14:29 +0000 2720) 								|| entityPropertyData.getProperty().isAnnotationPresent( OneToOne.class );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2721) 						final boolean isOfDifferentType = !entityPropertyData.getClassOrElement()
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2722) 								.equals( idClassPropertyData.getClassOrElement() );
737379690 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 19:14:29 +0000 2723) 						if ( hasXToOneAnnotation && isOfDifferentType ) {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2724) 							//don't replace here as we need to use the actual original return type
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2725) 							//the annotation overriding will be dealt with by a mechanism similar to @MapsId
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2726) 						}
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2727) 						else {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2728) 							classElements.set( i, entityPropertyData );  //this works since they are in the same order
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2729) 						}
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2730) 					}
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2731) 					else {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2732) 						classElements.set( i, entityPropertyData );  //this works since they are in the same order
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2733) 					}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2734) 				}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2735) 			}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2736) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2737) 		for ( PropertyData propertyAnnotatedElement : classElements ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2738) 			processElementAnnotations(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2739) 					subHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2740) 					isNullable
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2741) 							? Nullability.NO_CONSTRAINT
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2742) 							: Nullability.FORCED_NOT_NULL,
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2743) 					propertyAnnotatedElement,
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2744) 					new HashMap<>(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2745) 					entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2746) 					isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2747) 					isComponentEmbedded,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2748) 					inSecondPass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2749) 					buildingContext,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2750) 					inheritanceStatePerClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2751) 			);
                                                                                                                            2752)
2adcb4d92 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Ståle W. Pedersen 2010-01-26 13:39:26 +0000 2753) 			XProperty property = propertyAnnotatedElement.getProperty();
2adcb4d92 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Ståle W. Pedersen 2010-01-26 13:39:26 +0000 2754) 			if ( property.isAnnotationPresent( GeneratedValue.class ) &&
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 2755) 					property.isAnnotationPresent( Id.class ) ) {
2adcb4d92 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Ståle W. Pedersen 2010-01-26 13:39:26 +0000 2756) 				GeneratedValue generatedValue = property.getAnnotation( GeneratedValue.class );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2757) 				String generatorType = generatedValue != null
99428251c hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2017-12-13 12:19:31 +0000 2758) 						? generatorType( generatedValue, buildingContext, property.getType() )
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2759) 						: "assigned";
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2760) 				String generator = generatedValue != null ?
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2761) 						generatedValue.generator() :
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2762) 						BinderHelper.ANNOTATION_STRING_DEFAULT;
                                                                                                                            2763)
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2764) 				if ( isGlobalGeneratorNameGlobal( buildingContext ) ) {
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2765) 					buildGenerators( property, buildingContext );
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2766) 					SecondPass secondPass = new IdGeneratorResolverSecondPass(
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2767) 							(SimpleValue) comp.getProperty( property.getName() ).getValue(),
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2768) 							property,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2769) 							generatorType,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2770) 							generator,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2771) 							buildingContext
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2772) 					);
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2773) 					buildingContext.getMetadataCollector().addSecondPass( secondPass );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2774) 				}
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2775) 				else {
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2776) 					Map<String, IdentifierGeneratorDefinition> localGenerators = new HashMap<>();
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2777) 					localGenerators.putAll( buildGenerators( property, buildingContext ) );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2778) 					BinderHelper.makeIdGenerator(
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2779) 							(SimpleValue) comp.getProperty( property.getName() ).getValue(),
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2780) 							property,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2781) 							generatorType,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2782) 							generator,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2783) 							buildingContext,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2784) 							localGenerators
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2785) 					);
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2786) 				}
2adcb4d92 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Ståle W. Pedersen 2010-01-26 13:39:26 +0000 2787) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2788) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2789) 		return comp;
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2790) 	}
                                                                                                                            2791)
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2792) 	public static Component createComponent(
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2793) 			PropertyHolder propertyHolder,
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2794) 			PropertyData inferredData,
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2795) 			boolean isComponentEmbedded,
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2796) 			boolean isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2797) 			MetadataBuildingContext context) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2798) 		Component comp = new Component( context, propertyHolder.getPersistentClass() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2799) 		comp.setEmbedded( isComponentEmbedded );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2800) 		//yuk
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2801) 		comp.setTable( propertyHolder.getTable() );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 2802) 		//FIXME shouldn't identifier mapper use getClassOrElementName? Need to be checked.
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 2803) 		if ( isIdentifierMapper || ( isComponentEmbedded && inferredData.getPropertyName() == null ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2804) 			comp.setComponentClassName( comp.getOwner().getClassName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2805) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2806) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2807) 			comp.setComponentClassName( inferredData.getClassOrElementName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2808) 		}
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 2809) 		return comp;
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 2810) 	}
                                                                                                                            2811)
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2812) 	private static void bindIdClass(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2813) 			String generatorType,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2814) 			String generatorName,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2815) 			PropertyData inferredData,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2816) 			PropertyData baseInferredData,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2817) 			Ejb3Column[] columns,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2818) 			PropertyHolder propertyHolder,
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2819) 			boolean isComposite,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2820) 			AccessType propertyAccessor,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2821) 			EntityBinder entityBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2822) 			boolean isEmbedded,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2823) 			boolean isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2824) 			MetadataBuildingContext buildingContext,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2825) 			Map<XClass, InheritanceState> inheritanceStatePerClass) {
                                                                                                                            2826)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2827) 		/*
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2828) 		 * Fill simple value and property since and Id is a property
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2829) 		 */
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2830) 		PersistentClass persistentClass = propertyHolder.getPersistentClass();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2831) 		if ( !( persistentClass instanceof RootClass ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2832) 			throw new AnnotationException(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2833) 					"Unable to define/override @Id(s) on a subclass: "
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2834) 							+ propertyHolder.getEntityName()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2835) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2836) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2837) 		RootClass rootClass = ( RootClass ) persistentClass;
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 2838) 		String persistentClassName = rootClass.getClassName();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2839) 		SimpleValue id;
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 2840) 		final String propertyName = inferredData.getPropertyName();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2841) 		if ( isComposite ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2842) 			id = fillComponent(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2843) 					propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2844) 					inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2845) 					baseInferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2846) 					propertyAccessor,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2847) 					false,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2848) 					entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2849) 					isEmbedded,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2850) 					isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2851) 					false,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2852) 					buildingContext,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2853) 					inheritanceStatePerClass
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2854) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2855) 			Component componentId = ( Component ) id;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2856) 			componentId.setKey( true );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2857) 			if ( rootClass.getIdentifier() != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2858) 				throw new AnnotationException( componentId.getComponentClassName() + " must not have @Id properties when used as an @EmbeddedId" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2859) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2860) 			if ( componentId.getPropertySpan() == 0 ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2861) 				throw new AnnotationException( componentId.getComponentClassName() + " has no persistent id property" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2862) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2863) 			//tuplizers
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2864) 			XProperty property = inferredData.getProperty();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2865) 			setupComponentTuplizer( property, componentId );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2866) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2867) 		else {
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2868) 			//TODO I think this branch is never used. Remove.
                                                                                                                            2869)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2870) 			for ( Ejb3Column column : columns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2871) 				column.forceNotNull(); //this is an id
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2872) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2873) 			SimpleValueBinder value = new SimpleValueBinder();
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 2874) 			value.setPropertyName( propertyName );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2875) 			value.setReturnedClassName( inferredData.getTypeName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2876) 			value.setColumns( columns );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2877) 			value.setPersistentClassName( persistentClassName );
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2878) 			value.setBuildingContext( buildingContext );
1f6daa678 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2013-09-06 18:38:56 +0000 2879) 			value.setType( inferredData.getProperty(), inferredData.getClassOrElement(), persistentClassName, null );
d0e13b664 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2012-08-07 07:08:23 +0000 2880) 			value.setAccessType( propertyAccessor );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2881) 			id = value.make();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2882) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2883) 		rootClass.setIdentifier( id );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2884) 		if ( isGlobalGeneratorNameGlobal( buildingContext ) ) {
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2885) 			SecondPass secondPass = new IdGeneratorResolverSecondPass(
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2886) 					id,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2887) 					inferredData.getProperty(),
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2888) 					generatorType,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2889) 					generatorName,
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2890) 					buildingContext
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2891) 			);
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 2892) 			buildingContext.getMetadataCollector().addSecondPass( secondPass );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2893) 		}
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2894) 		else {
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2895) 			BinderHelper.makeIdGenerator(
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2896) 					id,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2897) 					inferredData.getProperty(),
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2898) 					generatorType,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2899) 					generatorName,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2900) 					buildingContext,
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2901) 					Collections.emptyMap()
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2902) 			);
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 2903) 		}
                                                                                                                            2904)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2905) 		if ( isEmbedded ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2906) 			rootClass.setEmbeddedIdentifier( inferredData.getPropertyClass() == null );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2907) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2908) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2909) 			PropertyBinder binder = new PropertyBinder();
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 2910) 			binder.setName( propertyName );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2911) 			binder.setValue( id );
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 2912) 			binder.setAccessType( inferredData.getDefaultAccess() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2913) 			binder.setProperty( inferredData.getProperty() );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 2914) 			Property prop = binder.makeProperty();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2915) 			rootClass.setIdentifierProperty( prop );
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2916) 			//if the id property is on a superclass, update the metamodel
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2917) 			final org.hibernate.mapping.MappedSuperclass superclass = BinderHelper.getMappedSuperclassOrNull(
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2918) 					inferredData.getDeclaringClass(),
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2919) 					inheritanceStatePerClass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2920) 					buildingContext
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2921) 			);
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2922) 			if ( superclass != null ) {
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2923) 				superclass.setDeclaredIdentifierProperty( prop );
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2924) 			}
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2925) 			else {
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2926) 				//we know the property is on the actual entity
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2927) 				rootClass.setDeclaredIdentifierProperty( prop );
fb9bdb7f3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-29 18:57:24 +0000 2928) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2929) 		}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 2930) 	}
                                                                                                                            2931)
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2932) 	private static PropertyData getUniqueIdPropertyFromBaseClass(
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2933) 			PropertyData inferredData,
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2934) 			PropertyData baseInferredData,
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2935) 			AccessType propertyAccessor,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2936) 			MetadataBuildingContext context) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2937) 		List<PropertyData> baseClassElements = new ArrayList<>();
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2938) 		XClass baseReturnedClassOrElement = baseInferredData.getClassOrElement();
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2939) 		PropertyContainer propContainer = new PropertyContainer(
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2940) 				baseReturnedClassOrElement,
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2941) 				inferredData.getPropertyClass(),
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2942) 				propertyAccessor
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2943) 		);
1183a4719 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-11-20 18:50:14 +0000 2944) 		addElementsOfClass( baseClassElements, propContainer, context );
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2945) 		//Id properties are on top and there is only one
421789ddc annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Steve Ebersole    2010-05-01 18:20:26 +0000 2946) 		return baseClassElements.get( 0 );
8478d5b44 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-05 23:33:28 +0000 2947) 	}
                                                                                                                            2948)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2949) 	private static void setupComponentTuplizer(XProperty property, Component component) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2950) 		if ( property == null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2951) 			return;
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 2952) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2953) 		if ( property.isAnnotationPresent( Tuplizers.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2954) 			for ( Tuplizer tuplizer : property.getAnnotation( Tuplizers.class ).value() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2955) 				EntityMode mode = EntityMode.parse( tuplizer.entityMode() );
72aedc868 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2011-06-06 16:16:33 +0000 2956) 				//todo tuplizer.entityModeType
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2957) 				component.addTuplizer( mode, tuplizer.impl().getName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2958) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2959) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2960) 		if ( property.isAnnotationPresent( Tuplizer.class ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2961) 			Tuplizer tuplizer = property.getAnnotation( Tuplizer.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2962) 			EntityMode mode = EntityMode.parse( tuplizer.entityMode() );
72aedc868 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Strong Liu        2011-06-06 16:16:33 +0000 2963) 			//todo tuplizer.entityModeType
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2964) 			component.addTuplizer( mode, tuplizer.impl().getName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2965) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2966) 	}
                                                                                                                            2967)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2968) 	private static void bindManyToOne(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2969) 			String cascadeStrategy,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2970) 			Ejb3JoinColumn[] columns,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2971) 			boolean optional,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2972) 			boolean ignoreNotFound,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2973) 			boolean cascadeOnDelete,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2974) 			XClass targetEntity,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2975) 			PropertyHolder propertyHolder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2976) 			PropertyData inferredData,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2977) 			boolean unique,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2978) 			boolean isIdentifierMapper,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 2979) 			boolean inSecondPass,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 2980) 			PropertyBinder propertyBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2981) 			MetadataBuildingContext context) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2982) 		//All FK columns should be in the same table
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 2983) 		org.hibernate.mapping.ManyToOne value = new org.hibernate.mapping.ManyToOne( context, columns[0].getTable() );
63d5a9785 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2010-01-19 15:43:00 +0000 2984) 		// This is a @OneToOne mapped to a physical o.h.mapping.ManyToOne
63d5a9785 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2010-01-19 15:43:00 +0000 2985) 		if ( unique ) {
63d5a9785 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2010-01-19 15:43:00 +0000 2986) 			value.markAsLogicalOneToOne();
63d5a9785 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2010-01-19 15:43:00 +0000 2987) 		}
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 2988) 		value.setReferencedEntityName( ToOneBinder.getReferenceEntityName( inferredData, targetEntity, context ) );
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 2989) 		final XProperty property = inferredData.getProperty();
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 2990) 		defineFetchingStrategy( value, property );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2991) 		//value.setFetchMode( fetchMode );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2992) 		value.setIgnoreNotFound( ignoreNotFound );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2993) 		value.setCascadeDeleteEnabled( cascadeOnDelete );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2994) 		//value.setLazy( fetchMode != FetchMode.JOIN );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2995) 		if ( !optional ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2996) 			for ( Ejb3JoinColumn column : columns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2997) 				column.setNullable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2998) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 2999) 		}
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 3000) 		if ( property.isAnnotationPresent( MapsId.class ) ) {
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 3001) 			//read only
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 3002) 			for ( Ejb3JoinColumn column : columns ) {
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 3003) 				column.setInsertable( false );
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 3004) 				column.setUpdatable( false );
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 3005) 			}
fd389b913 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 16:51:02 +0000 3006) 		}
                                                                                                                            3007)
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3008) 		final JoinColumn joinColumn = property.getAnnotation( JoinColumn.class );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3009) 		final JoinColumns joinColumns = property.getAnnotation( JoinColumns.class );
                                                                                                                            3010)
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3011) 		//Make sure that JPA1 key-many-to-one columns are read only tooj
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3012) 		boolean hasSpecjManyToOne=false;
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3013) 		if ( context.getBuildingOptions().isSpecjProprietarySyntaxEnabled() ) {
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3014) 			String columnName = "";
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3015) 			for ( XProperty prop : inferredData.getDeclaringClass()
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3016) 					.getDeclaredProperties( AccessType.FIELD.getType() ) ) {
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3017) 				if ( prop.isAnnotationPresent( Id.class ) && prop.isAnnotationPresent( Column.class ) ) {
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3018) 					columnName = prop.getAnnotation( Column.class ).name();
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3019) 				}
                                                                                                                            3020)
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3021) 				if ( property.isAnnotationPresent( ManyToOne.class ) && joinColumn != null
59ec34d5b core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 14:05:41 +0000 3022) 						&& ! BinderHelper.isEmptyAnnotationValue( joinColumn.name() )
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3023) 						&& joinColumn.name().equals( columnName )
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3024) 						&& !property.isAnnotationPresent( MapsId.class ) ) {
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3025) 					hasSpecjManyToOne = true;
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3026) 					for ( Ejb3JoinColumn column : columns ) {
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3027) 						column.setInsertable( false );
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3028) 						column.setUpdatable( false );
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3029) 					}
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3030) 				}
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3031) 			}
                                                                                                                            3032)
368457612 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:44:12 +0000 3033) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3034) 		value.setTypeName( inferredData.getClassOrElementName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3035) 		final String propertyName = inferredData.getPropertyName();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3036) 		value.setTypeUsingReflection( propertyHolder.getClassName(), propertyName );
                                                                                                                            3037)
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3038) 		if ( ( joinColumn != null && joinColumn.foreignKey().value() == ConstraintMode.NO_CONSTRAINT )
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3039) 				|| ( joinColumns != null && joinColumns.foreignKey().value() == ConstraintMode.NO_CONSTRAINT ) ) {
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3040) 			// not ideal...
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3041) 			value.setForeignKeyName( "none" );
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3042) 		}
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3043) 		else {
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3044) 			final ForeignKey fk = property.getAnnotation( ForeignKey.class );
b7273d93a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:14:40 +0000 3045) 			if ( fk != null && StringHelper.isNotEmpty( fk.name() ) ) {
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3046) 				value.setForeignKeyName( fk.name() );
1811b48f7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-12-09 20:14:56 +0000 3047) 			}
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3048) 			else {
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3049) 				final javax.persistence.ForeignKey fkOverride = propertyHolder.getOverriddenForeignKey(
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3050) 						StringHelper.qualify( propertyHolder.getPath(), propertyName )
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3051) 				);
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3052) 				if ( fkOverride != null && fkOverride.value() == ConstraintMode.NO_CONSTRAINT ) {
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3053) 					value.setForeignKeyName( "none" );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3054) 				}
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3055) 				else if ( fkOverride != null ) {
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3056) 					value.setForeignKeyName( StringHelper.nullIfEmpty( fkOverride.name() ) );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3057) 					value.setForeignKeyDefinition( StringHelper.nullIfEmpty( fkOverride.foreignKeyDefinition() ) );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3058) 				}
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3059) 				else if ( joinColumns != null ) {
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3060) 					value.setForeignKeyName( StringHelper.nullIfEmpty( joinColumns.foreignKey().name() ) );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3061) 					value.setForeignKeyDefinition( StringHelper.nullIfEmpty( joinColumns.foreignKey().foreignKeyDefinition() ) );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3062) 				}
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3063) 				else if ( joinColumn != null ) {
b7273d93a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:14:40 +0000 3064) 					value.setForeignKeyName( StringHelper.nullIfEmpty( joinColumn.foreignKey().name() ) );
78de650ef hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Matthias Kurz     2016-06-07 08:36:30 +0000 3065) 					value.setForeignKeyDefinition( StringHelper.nullIfEmpty( joinColumn.foreignKey().foreignKeyDefinition() ) );
aeb3aee62 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Christian Beikov  2017-02-15 12:08:09 +0000 3066) 				}
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3067) 			}
22ca7125f hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-04-02 22:02:59 +0000 3068) 		}
                                                                                                                            3069)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3070) 		String path = propertyHolder.getPath() + "." + propertyName;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3071) 		FkSecondPass secondPass = new ToOneFkSecondPass(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3072) 				value, columns,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3073) 				!optional && unique, //cannot have nullable and unique on certain DBs like Derby
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3074) 				propertyHolder.getEntityOwnerClassName(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3075) 				path,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3076) 				context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3077) 		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3078) 		if ( inSecondPass ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3079) 			secondPass.doSecondPass( context.getMetadataCollector().getEntityBindingMap() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3080) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3081) 		else {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3082) 			context.getMetadataCollector().addSecondPass( secondPass );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3083) 		}
32b93b978 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Brett Meyer       2013-10-31 09:22:05 +0000 3084) 		Ejb3Column.checkPropertyConsistency( columns, propertyHolder.getEntityName() + "." + propertyName );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3085) 		//PropertyBinder binder = new PropertyBinder();
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3086) 		propertyBinder.setName( propertyName );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3087) 		propertyBinder.setValue( value );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3088) 		//binder.setCascade(cascadeStrategy);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3089) 		if ( isIdentifierMapper ) {
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3090) 			propertyBinder.setInsertable( false );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3091) 			propertyBinder.setUpdatable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3092) 		}
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3093) 		else if (hasSpecjManyToOne) {
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3094) 			propertyBinder.setInsertable( false );
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3095) 			propertyBinder.setUpdatable( false );
3b3c8bc92 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Emmanuel Bernard  2010-10-04 09:45:09 +0000 3096) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3097) 		else {
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3098) 			propertyBinder.setInsertable( columns[0].isInsertable() );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3099) 			propertyBinder.setUpdatable( columns[0].isUpdatable() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3100) 		}
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3101) 		propertyBinder.setColumns( columns );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3102) 		propertyBinder.setAccessType( inferredData.getDefaultAccess() );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3103) 		propertyBinder.setCascade( cascadeStrategy );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3104) 		propertyBinder.setProperty( property );
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3105) 		propertyBinder.setXToMany( true );
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 3106) 		propertyBinder.makePropertyAndBind();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3107) 	}
                                                                                                                            3108)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3109) 	protected static void defineFetchingStrategy(ToOne toOne, XProperty property) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3110) 		LazyToOne lazy = property.getAnnotation( LazyToOne.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3111) 		Fetch fetch = property.getAnnotation( Fetch.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3112) 		ManyToOne manyToOne = property.getAnnotation( ManyToOne.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3113) 		OneToOne oneToOne = property.getAnnotation( OneToOne.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3114) 		FetchType fetchType;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3115) 		if ( manyToOne != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3116) 			fetchType = manyToOne.fetch();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3117) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3118) 		else if ( oneToOne != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3119) 			fetchType = oneToOne.fetch();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3120) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3121) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3122) 			throw new AssertionFailure(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3123) 					"Define fetch strategy on a property not annotated with @OneToMany nor @OneToOne"
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3124) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3125) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3126) 		if ( lazy != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3127) 			toOne.setLazy( !( lazy.value() == LazyToOneOption.FALSE ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3128) 			toOne.setUnwrapProxy( ( lazy.value() == LazyToOneOption.NO_PROXY ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3129) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3130) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3131) 			toOne.setLazy( fetchType == FetchType.LAZY );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3132) 			toOne.setUnwrapProxy( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3133) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3134) 		if ( fetch != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3135) 			if ( fetch.value() == org.hibernate.annotations.FetchMode.JOIN ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3136) 				toOne.setFetchMode( FetchMode.JOIN );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3137) 				toOne.setLazy( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3138) 				toOne.setUnwrapProxy( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3139) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3140) 			else if ( fetch.value() == org.hibernate.annotations.FetchMode.SELECT ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3141) 				toOne.setFetchMode( FetchMode.SELECT );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3142) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3143) 			else if ( fetch.value() == org.hibernate.annotations.FetchMode.SUBSELECT ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3144) 				throw new AnnotationException( "Use of FetchMode.SUBSELECT not allowed on ToOne associations" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3145) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3146) 			else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3147) 				throw new AssertionFailure( "Unknown FetchMode: " + fetch.value() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3148) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3149) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3150) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3151) 			toOne.setFetchMode( getFetchMode( fetchType ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3152) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3153) 	}
                                                                                                                            3154)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3155) 	private static void bindOneToOne(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3156) 			String cascadeStrategy,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3157) 			Ejb3JoinColumn[] joinColumns,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3158) 			boolean optional,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3159) 			FetchMode fetchMode,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3160) 			boolean ignoreNotFound,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3161) 			boolean cascadeOnDelete,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3162) 			XClass targetEntity,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3163) 			PropertyHolder propertyHolder,
e26b8be6a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-06-01 16:59:42 +0000 3164) 			PropertyData inferredData,
e26b8be6a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2012-06-01 16:59:42 +0000 3165) 			String mappedBy,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3166) 			boolean trueOneToOne,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3167) 			boolean isIdentifierMapper,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3168) 			boolean inSecondPass,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3169) 			PropertyBinder propertyBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3170) 			MetadataBuildingContext context) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3171) 		//column.getTable() => persistentClass.getTable()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3172) 		final String propertyName = inferredData.getPropertyName();
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 3173) 		LOG.tracev( "Fetching {0} with {1}", propertyName, fetchMode );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3174) 		boolean mapToPK = true;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3175) 		if ( !trueOneToOne ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3176) 			//try to find a hidden true one to one (FK == PK columns)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3177) 			KeyValue identifier = propertyHolder.getIdentifier();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3178) 			if ( identifier == null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3179) 				//this is a @OneToOne in a @EmbeddedId (the persistentClass.identifier is not set yet, it's being built)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3180) 				//by definition the PK cannot refers to itself so it cannot map to itself
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3181) 				mapToPK = false;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3182) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3183) 			else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3184) 				Iterator idColumns = identifier.getColumnIterator();
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 3185) 				List<String> idColumnNames = new ArrayList<>();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3186) 				org.hibernate.mapping.Column currentColumn;
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 3187) 				if ( identifier.getColumnSpan() != joinColumns.length ) {
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 3188) 					mapToPK = false;
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 3189) 				}
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 3190) 				else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3191) 					while ( idColumns.hasNext() ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3192) 						currentColumn = ( org.hibernate.mapping.Column ) idColumns.next();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3193) 						idColumnNames.add( currentColumn.getName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3194) 					}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3195) 					for ( Ejb3JoinColumn col : joinColumns ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3196) 						if ( !idColumnNames.contains( col.getMappingColumn().getName() ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3197) 							mapToPK = false;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3198) 							break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3199) 						}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3200) 					}
cd3c152f4 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-20 11:48:08 +0000 3201) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3202) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3203) 		}
e14f58de2 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Hardy Ferentschik 2010-09-28 16:28:30 +0000 3204) 		if ( trueOneToOne || mapToPK || !BinderHelper.isEmptyAnnotationValue( mappedBy ) ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3205) 			//is a true one-to-one
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3206) 			//FIXME referencedColumnName ignored => ordering may fail.
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3207) 			OneToOneSecondPass secondPass = new OneToOneSecondPass(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3208) 					mappedBy,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3209) 					propertyHolder.getEntityName(),
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3210) 					propertyName,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3211) 					propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3212) 					inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3213) 					targetEntity,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3214) 					ignoreNotFound,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3215) 					cascadeOnDelete,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3216) 					optional,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3217) 					cascadeStrategy,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3218) 					joinColumns,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3219) 					context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3220) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3221) 			if ( inSecondPass ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3222) 				secondPass.doSecondPass( context.getMetadataCollector().getEntityBindingMap() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3223) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3224) 			else {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3225) 				context.getMetadataCollector().addSecondPass(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3226) 						secondPass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3227) 						BinderHelper.isEmptyAnnotationValue( mappedBy )
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3228) 				);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3229) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3230) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3231) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3232) 			//has a FK on the table
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3233) 			bindManyToOne(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3234) 					cascadeStrategy, joinColumns, optional, ignoreNotFound, cascadeOnDelete,
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3235) 					targetEntity,
d00f7efb3 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-25 17:19:05 +0000 3236) 					propertyHolder, inferredData, true, isIdentifierMapper, inSecondPass,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3237) 					propertyBinder, context
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3238) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3239) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3240) 	}
                                                                                                                            3241)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3242) 	private static void bindAny(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3243) 			String cascadeStrategy,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3244) 			Ejb3JoinColumn[] columns,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3245) 			boolean cascadeOnDelete,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3246) 			Nullability nullability,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3247) 			PropertyHolder propertyHolder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3248) 			PropertyData inferredData,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3249) 			EntityBinder entityBinder,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3250) 			boolean isIdentifierMapper,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3251) 			MetadataBuildingContext buildingContext) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3252) 		org.hibernate.annotations.Any anyAnn = inferredData.getProperty()
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3253) 				.getAnnotation( org.hibernate.annotations.Any.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3254) 		if ( anyAnn == null ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3255) 			throw new AssertionFailure(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3256) 					"Missing @Any annotation: "
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3257) 							+ BinderHelper.getPath( propertyHolder, inferredData )
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3258) 			);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3259) 		}
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3260) 		Any value = BinderHelper.buildAnyValue(
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3261) 				anyAnn.metaDef(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3262) 				columns,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3263) 				anyAnn.metaColumn(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3264) 				inferredData,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3265) 				cascadeOnDelete,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3266) 				nullability,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3267) 				propertyHolder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3268) 				entityBinder,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3269) 				anyAnn.optional(),
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3270) 				buildingContext
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3271) 		);
                                                                                                                            3272)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3273) 		PropertyBinder binder = new PropertyBinder();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3274) 		binder.setName( inferredData.getPropertyName() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3275) 		binder.setValue( value );
                                                                                                                            3276)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3277) 		binder.setLazy( anyAnn.fetch() == FetchType.LAZY );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3278) 		//binder.setCascade(cascadeStrategy);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3279) 		if ( isIdentifierMapper ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3280) 			binder.setInsertable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3281) 			binder.setUpdatable( false );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3282) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3283) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3284) 			binder.setInsertable( columns[0].isInsertable() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3285) 			binder.setUpdatable( columns[0].isUpdatable() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3286) 		}
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 3287) 		binder.setAccessType( inferredData.getDefaultAccess() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3288) 		binder.setCascade( cascadeStrategy );
8577a68e6 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-21 17:51:09 +0000 3289) 		Property prop = binder.makeProperty();
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3290) 		//composite FK columns are in the same table so its OK
c7c6981a5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-10-28 18:14:25 +0000 3291) 		propertyHolder.addProperty( prop, columns, inferredData.getDeclaringClass() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3292) 	}
                                                                                                                            3293)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3294) 	private static EnumSet<CascadeType> convertToHibernateCascadeType(javax.persistence.CascadeType[] ejbCascades) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3295) 		EnumSet<CascadeType> hibernateCascadeSet = EnumSet.noneOf( CascadeType.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3296) 		if ( ejbCascades != null && ejbCascades.length > 0 ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3297) 			for ( javax.persistence.CascadeType cascade : ejbCascades ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3298) 				switch ( cascade ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3299) 					case ALL:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3300) 						hibernateCascadeSet.add( CascadeType.ALL );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3301) 						break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3302) 					case PERSIST:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3303) 						hibernateCascadeSet.add( CascadeType.PERSIST );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3304) 						break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3305) 					case MERGE:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3306) 						hibernateCascadeSet.add( CascadeType.MERGE );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3307) 						break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3308) 					case REMOVE:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3309) 						hibernateCascadeSet.add( CascadeType.REMOVE );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3310) 						break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3311) 					case REFRESH:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3312) 						hibernateCascadeSet.add( CascadeType.REFRESH );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3313) 						break;
ba3639a25 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-12-10 09:32:25 +0000 3314) 					case DETACH:
ba3639a25 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-12-10 09:32:25 +0000 3315) 						hibernateCascadeSet.add( CascadeType.DETACH );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3316) 						break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3317) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3318) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3319) 		}
                                                                                                                            3320)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3321) 		return hibernateCascadeSet;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3322) 	}
                                                                                                                            3323)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3324) 	private static String getCascadeStrategy(
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3325) 			javax.persistence.CascadeType[] ejbCascades,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3326) 			Cascade hibernateCascadeAnnotation,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3327) 			boolean orphanRemoval,
f0f82e4f1 core/src/main/java/org/hibernate/cfg/AnnotationBinder.java           (Steve Ebersole    2010-08-12 19:13:48 +0000 3328) 			boolean forcePersist) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3329) 		EnumSet<CascadeType> hibernateCascadeSet = convertToHibernateCascadeType( ejbCascades );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3330) 		CascadeType[] hibernateCascades = hibernateCascadeAnnotation == null ?
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3331) 				null :
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3332) 				hibernateCascadeAnnotation.value();
                                                                                                                            3333)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3334) 		if ( hibernateCascades != null && hibernateCascades.length > 0 ) {
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 3335) 			hibernateCascadeSet.addAll( Arrays.asList( hibernateCascades ) );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3336) 		}
                                                                                                                            3337)
165f2e5f7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2009-12-22 18:07:38 +0000 3338) 		if ( orphanRemoval ) {
165f2e5f7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2009-12-22 18:07:38 +0000 3339) 			hibernateCascadeSet.add( CascadeType.DELETE_ORPHAN );
165f2e5f7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2009-12-22 18:07:38 +0000 3340) 			hibernateCascadeSet.add( CascadeType.REMOVE );
165f2e5f7 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Scott Marlow      2009-12-22 18:07:38 +0000 3341) 		}
3d911bd65 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-08 13:22:43 +0000 3342) 		if ( forcePersist ) {
016a02ff5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-27 18:58:28 +0000 3343) 			hibernateCascadeSet.add( CascadeType.PERSIST );
016a02ff5 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-27 18:58:28 +0000 3344) 		}
                                                                                                                            3345)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3346) 		StringBuilder cascade = new StringBuilder();
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 3347) 		for ( CascadeType aHibernateCascadeSet : hibernateCascadeSet ) {
4a9d8dcf0 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-17 21:14:07 +0000 3348) 			switch ( aHibernateCascadeSet ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3349) 				case ALL:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3350) 					cascade.append( "," ).append( "all" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3351) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3352) 				case SAVE_UPDATE:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3353) 					cascade.append( "," ).append( "save-update" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3354) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3355) 				case PERSIST:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3356) 					cascade.append( "," ).append( "persist" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3357) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3358) 				case MERGE:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3359) 					cascade.append( "," ).append( "merge" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3360) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3361) 				case LOCK:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3362) 					cascade.append( "," ).append( "lock" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3363) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3364) 				case REFRESH:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3365) 					cascade.append( "," ).append( "refresh" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3366) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3367) 				case REPLICATE:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3368) 					cascade.append( "," ).append( "replicate" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3369) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3370) 				case EVICT:
ba3639a25 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2009-12-10 09:32:25 +0000 3371) 				case DETACH:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3372) 					cascade.append( "," ).append( "evict" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3373) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3374) 				case DELETE:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3375) 					cascade.append( "," ).append( "delete" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3376) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3377) 				case DELETE_ORPHAN:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3378) 					cascade.append( "," ).append( "delete-orphan" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3379) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3380) 				case REMOVE:
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3381) 					cascade.append( "," ).append( "delete" );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3382) 					break;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3383) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3384) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3385) 		return cascade.length() > 0 ?
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3386) 				cascade.substring( 1 ) :
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3387) 				"none";
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3388) 	}
                                                                                                                            3389)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3390) 	public static FetchMode getFetchMode(FetchType fetch) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3391) 		if ( fetch == FetchType.EAGER ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3392) 			return FetchMode.JOIN;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3393) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3394) 		else {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3395) 			return FetchMode.SELECT;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3396) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3397) 	}
                                                                                                                            3398)
b1a9c816a hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 15:38:00 +0000 3399) 	private static HashMap<String, IdentifierGeneratorDefinition> buildGenerators(XAnnotatedElement annElt, MetadataBuildingContext context) {
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 3400) 		InFlightMetadataCollector metadataCollector = context.getMetadataCollector();
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3401) 		HashMap<String, IdentifierGeneratorDefinition> generators = new HashMap<>();
                                                                                                                            3402)
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3403) 		TableGenerators tableGenerators = annElt.getAnnotation( TableGenerators.class );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3404) 		if ( tableGenerators != null ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3405) 			for ( TableGenerator tableGenerator : tableGenerators.value() ) {
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3406) 				IdentifierGeneratorDefinition idGenerator = buildIdGenerator(
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3407) 						tableGenerator,
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3408) 						context
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3409) 				);
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3410) 				generators.put(
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3411) 						idGenerator.getName(),
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3412) 						idGenerator
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3413) 				);
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 3414) 				metadataCollector.addIdentifierGenerator( idGenerator );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3415) 			}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3416) 		}
                                                                                                                            3417)
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3418) 		SequenceGenerators sequenceGenerators = annElt.getAnnotation( SequenceGenerators.class );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3419) 		if ( sequenceGenerators != null ) {
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3420) 			for ( SequenceGenerator sequenceGenerator : sequenceGenerators.value() ) {
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3421) 				IdentifierGeneratorDefinition idGenerator = buildIdGenerator(
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3422) 						sequenceGenerator,
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3423) 						context
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3424) 				);
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3425) 				generators.put(
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3426) 						idGenerator.getName(),
37df2bac7 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 17:42:58 +0000 3427) 						idGenerator
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3428) 				);
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 3429) 				metadataCollector.addIdentifierGenerator( idGenerator );
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3430) 			}
681827537 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2017-12-13 12:19:32 +0000 3431) 		}
                                                                                                                            3432)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3433) 		TableGenerator tabGen = annElt.getAnnotation( TableGenerator.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3434) 		SequenceGenerator seqGen = annElt.getAnnotation( SequenceGenerator.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3435) 		GenericGenerator genGen = annElt.getAnnotation( GenericGenerator.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3436) 		if ( tabGen != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3437) 			IdentifierGeneratorDefinition idGen = buildIdGenerator( tabGen, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3438) 			generators.put( idGen.getName(), idGen );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 3439) 			metadataCollector.addIdentifierGenerator( idGen );
                                                                                                                            3440)
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3441) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3442) 		if ( seqGen != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3443) 			IdentifierGeneratorDefinition idGen = buildIdGenerator( seqGen, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3444) 			generators.put( idGen.getName(), idGen );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 3445) 			metadataCollector.addIdentifierGenerator( idGen );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3446) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3447) 		if ( genGen != null ) {
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3448) 			IdentifierGeneratorDefinition idGen = buildIdGenerator( genGen, context );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3449) 			generators.put( idGen.getName(), idGen );
6cefa865b hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-04-16 14:47:09 +0000 3450) 			metadataCollector.addIdentifierGenerator( idGen );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3451) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3452) 		return generators;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3453) 	}
                                                                                                                            3454)
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3455) 	public static boolean isDefault(XClass clazz, MetadataBuildingContext context) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 3456) 		return context.getBootstrapContext().getReflectionManager().equals( clazz, void.class );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3457) 	}
                                                                                                                            3458)
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3459) 	/**
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3460) 	 * For the mapped entities build some temporary data-structure containing information about the
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3461) 	 * inheritance status of a class.
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3462) 	 *
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3463) 	 * @param orderedClasses Order list of all annotated entities and their mapped superclasses
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3464) 	 *
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3465) 	 * @return A map of {@code InheritanceState}s keyed against their {@code XClass}.
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3466) 	 */
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 3467) 	public static Map<XClass, InheritanceState> buildInheritanceStates(
5ee9ba361 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-01-26 12:57:01 +0000 3468) 			List<XClass> orderedClasses,
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3469) 			MetadataBuildingContext buildingContext) {
8f889e95d hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Andrea Boriero    2018-03-28 22:43:48 +0000 3470) 		Map<XClass, InheritanceState> inheritanceStatePerClass = new HashMap<>(
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3471) 				orderedClasses.size()
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3472) 		);
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3473) 		for ( XClass clazz : orderedClasses ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3474) 			InheritanceState superclassState = InheritanceState.getSuperclassInheritanceState(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3475) 					clazz, inheritanceStatePerClass
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3476) 			);
9caca0ce3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Steve Ebersole    2015-03-10 21:53:51 +0000 3477) 			InheritanceState state = new InheritanceState( clazz, inheritanceStatePerClass, buildingContext );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3478) 			if ( superclassState != null ) {
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3479) 				//the classes are ordered thus preventing an NPE
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3480) 				//FIXME if an entity has subclasses annotated @MappedSperclass wo sub @Entity this is wrong
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3481) 				superclassState.setHasSiblings( true );
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3482) 				InheritanceState superEntityState = InheritanceState.getInheritanceStateOfSuperEntity(
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3483) 						clazz, inheritanceStatePerClass
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3484) 				);
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3485) 				state.setHasParents( superEntityState != null );
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3486) 				final boolean nonDefault = state.getType() != null && !InheritanceType.SINGLE_TABLE
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3487) 						.equals( state.getType() );
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3488) 				if ( superclassState.getType() != null ) {
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3489) 					final boolean mixingStrategy = state.getType() != null && !state.getType()
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3490) 							.equals( superclassState.getType() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 3491) 					if ( nonDefault && mixingStrategy ) {
a9b1425f3 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (JPAV              2011-01-18 21:35:49 +0000 3492) 						LOG.invalidSubStrategy( clazz.getName() );
129c0f134 hibernate-core/src/main/java/org/hibernate/cfg/AnnotationBinder.java (Sanne Grinovero   2011-10-26 22:24:15 +0000 3493) 					}
025b3cc14 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-12-11 19:14:01 +0000 3494) 					state.setType( superclassState.getType() );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3495) 				}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3496) 			}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3497) 			inheritanceStatePerClass.put( clazz, state );
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3498) 		}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3499) 		return inheritanceStatePerClass;
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3500) 	}
                                                                                                                            3501)
153ad753e annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2010-03-04 21:55:10 +0000 3502) 	private static boolean hasAnnotationsOnIdClass(XClass idClass) {
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 3503) //		if(idClass.getAnnotation(Embeddable.class) != null)
252299cfe annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Emmanuel Bernard  2010-02-04 17:54:05 +0000 3504) //			return true;
                                                                                                                            3505)
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3506) 		List<XProperty> properties = idClass.getDeclaredProperties( XClass.ACCESS_FIELD );
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3507) 		for ( XProperty property : properties ) {
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3508) 			if ( property.isAnnotationPresent( Column.class ) || property.isAnnotationPresent( OneToMany.class ) ||
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3509) 					property.isAnnotationPresent( ManyToOne.class ) || property.isAnnotationPresent( Id.class ) ||
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3510) 					property.isAnnotationPresent( GeneratedValue.class ) || property.isAnnotationPresent( OneToOne.class ) ||
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3511) 					property.isAnnotationPresent( ManyToMany.class )
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3512) 					) {
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3513) 				return true;
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3514) 			}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3515) 		}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3516) 		List<XMethod> methods = idClass.getDeclaredMethods();
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3517) 		for ( XMethod method : methods ) {
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3518) 			if ( method.isAnnotationPresent( Column.class ) || method.isAnnotationPresent( OneToMany.class ) ||
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3519) 					method.isAnnotationPresent( ManyToOne.class ) || method.isAnnotationPresent( Id.class ) ||
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3520) 					method.isAnnotationPresent( GeneratedValue.class ) || method.isAnnotationPresent( OneToOne.class ) ||
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3521) 					method.isAnnotationPresent( ManyToMany.class )
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3522) 					) {
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3523) 				return true;
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3524) 			}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3525) 		}
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3526) 		return false;
2176af114 annotations/src/main/java/org/hibernate/cfg/AnnotationBinder.java    (Hardy Ferentschik 2009-10-27 15:05:44 +0000 3527) 	}
7337743c9 annotations/src/java/org/hibernate/cfg/AnnotationBinder.java         (Steve Ebersole    2008-10-28 18:41:10 +0000 3528) }
